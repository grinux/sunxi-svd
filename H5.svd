<?xml version="1.0" encoding="utf-8"?><device xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" schemaVersion="1.3" xsi:noNamespaceSchemaLocation="CMSIS-SVD.xsd">
  <vendor>Allwinner</vendor>
  <vendorID>sunxi</vendorID>
  <name>H5</name>
  <series>H5</series>
  <version>0.1</version>
  <description>H5</description>
  <licenseText>questionable</licenseText>
  <cpu>
    <name></name>
    <revision>0</revision>
    <endian>little</endian>
    <mpuPresent>true</mpuPresent>
    <fpuPresent>false</fpuPresent>
    <nvicPrioBits>0</nvicPrioBits>
    <vendorSystickConfig>false</vendorSystickConfig>
  </cpu>
  <addressUnitBits>8</addressUnitBits>
  <width>64</width>
  <size>32</size>
  <access>read-write</access>
  <resetMask>0xFFFFFFFF</resetMask>
  <peripherals>
    <peripheral>
      <name>Audio Codec</name>
      <description>Audio Codec</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C22C00</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <name>ANALOG DOMAIN REGISTER</name>
          <addressOffset>0x0</addressOffset>
          <register>
            <name>AC_PR_CFG</name>
            <description>AC Parameter Configuration Register</description>
            <addressOffset>0x1F015C0</addressOffset>
            <resetValue>0x10000000</resetValue>
            <resetMask>0x111FFFFF</resetMask>
            <fields>
              <field>
                <name>AC_PR_RST</name>
                <description>AC_PR Reset  
0: Assert 
1: De-assert </description>
                <bitRange>[28:28]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Assert</name>
                    <description>Assert</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>deassert</name>
                    <description>De-assert</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>AC_PR_RW</name>
                <description>AC_PR Read or Write  
0: Read 
1: Write </description>
                <bitRange>[24:24]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Read</name>
                    <description>Read</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Write</name>
                    <description>Write</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>AC_PR_ADDR</name>
                <description>AC_PR Address [4:0] </description>
                <bitRange>[20:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>ADDA_PR_WDAT</name>
                <description>ADDA_PR Write Data [7:0] </description>
                <bitRange>[15:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>ADDA_PR_RDAT</name>
                <description>ADDA_PR Read Data [7:0] </description>
                <bitRange>[7:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <cluster>
          <name>AUDIO CODEC</name>
          <addressOffset>0x0</addressOffset>
          <register>
            <name>AC_ADC_CNT</name>
            <description>ADC RX FIFO Counter Register</description>
            <addressOffset>0x44</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>RX_CNT</name>
                <description>RX Sample Counter The audio sample number of writing into RXFIFO.  When one sample is written by Digital Audio Engine, the RX sample counter register increases by one. The RX sample counter register can be set to any initial value at any time. After been updated by the initial value, the counter register should count on base of this initial value. Note: It is used for Audio/ Video Synchronization.</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DAP_CTR</name>
            <description>ADC DAP Control Register</description>
            <addressOffset>0x70</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xC73FF3FF</resetMask>
            <fields>
              <field>
                <name>ADAP</name>
                <description>_EN DAP for ADC Enable  
0: Bypass 
1: Enable </description>
                <bitRange>[31:31]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Bypass</name>
                    <description>Bypass</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>ADAP_START</name>
                <description>DAP for ADC Start up  
0: Disable      
1: Start up </description>
                <bitRange>[30:30]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Start</name>
                    <description>Start up</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>ENADC_DRC</name>
                <description>DRC for ADC Enable  
0: Bypass   
1: Enable </description>
                <bitRange>[26:26]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Bypass</name>
                    <description>Bypass</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>ADC_DRC_EN</name>
                <description>ADC DRC Function Enable </description>
                <bitRange>[25:25]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>ADC_DRC_HPF_EN</name>
                <description>ADC DRC HPF Function Enable </description>
                <bitRange>[24:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>ADAP_LSATU_FLAG</name>
                <description>Left Channel AGC Saturation Flag  
0: No saturation      
1: Saturation </description>
                <bitRange>[21:21]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_saturation</name>
                    <description>No saturation</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Saturation</name>
                    <description>Saturation</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>ADAP_LNOI_FLAG</name>
                <description>Left Channel AGC Noise-Threshold Flag  
0: No noise-threshold 
1: Noise-threshold </description>
                <bitRange>[20:20]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_noise_minus_threshold</name>
                    <description>No noise-threshold</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Noise_minus_threshold</name>
                    <description>Noise-threshold</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>ADAP_LCHAN_GAIN</name>
                <description>Left Channel Gain Applied by AGC (7.1format 2s component(-20dB  40dB), 0.5dB/ step)   0x50 : 40dB 0x4F : 39.5dB --------------- 0x00 : 00dB 0xFF : -0.5dB </description>
                <bitRange>[19:12]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>ADAP_RSATU_FLAG</name>
                <description>Right AGC Saturation Flag  
0: No saturation      
1: Saturation </description>
                <bitRange>[9:9]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_saturation</name>
                    <description>No saturation</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Saturation</name>
                    <description>Saturation</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>ADAP_RNOI_FLAG</name>
                <description>Right Channel AGC Noise-Threshold Flag  
0: No noise-threshold 
1: Noise-threshold  </description>
                <bitRange>[8:8]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_noise_minus_threshold</name>
                    <description>No noise-threshold</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Noise_minus_threshold</name>
                    <description>Noise-threshold</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>ADAP_RCHAN_GAIN</name>
                <description>Right Channel Gain Applied by AGC (7.1format 2s component)(0.5dB step)   0x50 : 40dB 0x4F : 39.5dB --------------- 0x00 : 00dB 0xFF : -0.5dB </description>
                <bitRange>[7:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DAP_HPFC</name>
            <description>ADC DAP HPF Coef Register</description>
            <addressOffset>0x90</addressOffset>
            <resetValue>0xFFFAC1</resetValue>
            <resetMask>0x7FFFFFF</resetMask>
            <fields>
              <field>
                <name>ADAP_HPFC</name>
                <description>HPF Coefficient Setting (3.24fomat)</description>
                <bitRange>[26:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DAP_LAC</name>
            <description>ADC DAP Left Average Coef Register</description>
            <addressOffset>0x80</addressOffset>
            <resetValue>0x51EB8</resetValue>
            <resetMask>0x7FFFFFF</resetMask>
            <fields>
              <field>
                <name>ADAP_LAC</name>
                <description>Average Level Coefficient Setting(3.24format 2s component) </description>
                <bitRange>[26:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DAP_LCTR</name>
            <description>ADC DAP Left Control Register</description>
            <addressOffset>0x74</addressOffset>
            <resetValue>0x1F7000</resetValue>
            <resetMask>0xFF73FF</resetMask>
            <fields>
              <field>
                <name>ADAP_LNOI_SET</name>
                <description>Left Channel Noise Threshold Setting  0x00 : -24dB 0x01 : -26dB 0x02 : -28dB ---------------------- 
0x1D: -82dB 
0x1E: -84dB 
0x1F: -86dB</description>
                <bitRange>[23:16]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_minus_82dB</name>
                    <description>-82dB</description>
                    <value>0x1D</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_84dB</name>
                    <description>-84dB</description>
                    <value>0x1E</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_86dB</name>
                    <description>-86dB</description>
                    <value>0x1F</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>AAGC_LCHAN_EN</name>
                <description>Left AGC Function Enable   
0: Disable     
1: Enable </description>
                <bitRange>[14:14]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>ADAP_LHPF_EN</name>
                <description>Left HPF Enable   
0: Disable     
1: Enable </description>
                <bitRange>[13:13]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>ADAP_RNOI_DET</name>
                <description>Left Noise Detect Enable  
0: Disable   1:Enable </description>
                <bitRange>[12:12]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>ADAP_LCHAN_HYS</name>
                <description>Left Hysteresis Setting  00 : 1dB 01 : 2dB 10 : 4dB 11 : Disable </description>
                <bitRange>[9:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>ADAP_LNOI_DEB</name>
                <description>Left Noise Debounce Time  0000:0/fs 0001:4/fs 0010:8/fs ------------ 1111 :16*4096/fs  T=2 /fs ,except N=0 </description>
                <bitRange>[7:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>ADAP_LSIG_DEB</name>
                <description>Left Signal Debounce Time  0000:0/fs 0001:4/fs 0010:8/fs ------------ 1111 :16*4096/fs  T=2 /fs ,except N=0 </description>
                <bitRange>[3:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DAP_LDAT</name>
            <description>ADC DAP Left Decay and Attack Time Register</description>
            <addressOffset>0x84</addressOffset>
            <resetValue>0x1F</resetValue>
            <resetMask>0x7FFF7FFF</resetMask>
            <fields>
              <field>
                <name>ADAP_LATT_SET</name>
                <description>Left Attack Time Coefficient Setting  
000000000000000: 1x32/fs 
000000000000001: 2x32/fs ------------------------ 
111111111111111: 2 x32/fs  T=(n+1)*32*fs When the gain decreases, the actual gain will decrease 0.5dB at every attack time. </description>
                <bitRange>[30:16]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_1x32_slash_fs</name>
                    <description>1x32/fs</description>
                    <value>0b000000000000000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_2x32_slash_fs</name>
                    <description>2x32/fs ------------------------</description>
                    <value>0b000000000000001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_2</name>
                    <description>2 x32/fs  T=(n+1)*32*fs When the gain decreases, the actual gain will decrease 0.5dB at every attack time.</description>
                    <value>0b111111111111111</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>ADAP_LDEC_SET</name>
                <description>Left Decay Time Coefficient Setting   
000000000000000: 1x32/fs 
000000000000001: 2x32/fs ------------------------ 
000000000011111: 32x32/fs ------------------------ 
111111111111111: 2 x32/fs  T=(n+1)*32/fs When the gain increases, the actual gain will increase 0.5dB at every decay time. </description>
                <bitRange>[14:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_1x32_slash_fs</name>
                    <description>1x32/fs</description>
                    <value>0b000000000000000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_2x32_slash_fs</name>
                    <description>2x32/fs ------------------------</description>
                    <value>0b000000000000001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_32x32_slash_fs</name>
                    <description>32x32/fs ------------------------</description>
                    <value>0b000000000011111</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_2</name>
                    <description>2 x32/fs  T=(n+1)*32/fs When the gain increases, the actual gain will increase 0.5dB at every decay time.</description>
                    <value>0b111111111111111</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DAP_LINAC</name>
            <description>ADC DAP Left Input Signal Low Average Coef Register</description>
            <addressOffset>0x94</addressOffset>
            <resetValue>0x51EB8</resetValue>
            <resetMask>0x7FFFFFF</resetMask>
            <fields>
              <field>
                <name>ADAP_LINAC</name>
                <description>Left input signal average filter coefficient to check noise or not (the coefficientis 3.24 format 2s complement) always the same as the left output signal average filter's.</description>
                <bitRange>[26:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DAP_PARA</name>
            <description>ADC DAP Parameter Register</description>
            <addressOffset>0x7C</addressOffset>
            <resetValue>0x2C2C2828</resetValue>
            <resetMask>0x3F3FFFFF</resetMask>
            <fields>
              <field>
                <name>ADAP_LTARG_SET</name>
                <description>Left Channel Target Level Setting (-1dB ~ -30dB). (6.0format 2s component)  </description>
                <bitRange>[29:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>ADAP_RTARG_SET</name>
                <description>Right Channel Target Level Setting (-1dB ~ -30dB). (6.0format 2s component)  </description>
                <bitRange>[21:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>ADAP_LGAIN_MAX</name>
                <description>Left Channel Max Gain Setting (0dB ~ 40dB). (7.1format 2s component)  </description>
                <bitRange>[15:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>ADAP_RGAIN_MAX</name>
                <description>Right Channel Max Gain Setting (0dB ~ 40dB). (7.1format 2s component)  </description>
                <bitRange>[7:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DAP_RAC</name>
            <description>ADC DAP Right Average Coef Register</description>
            <addressOffset>0x88</addressOffset>
            <resetValue>0x51EB8</resetValue>
            <resetMask>0x7FFFFFF</resetMask>
            <fields>
              <field>
                <name>ADAP_RAC</name>
                <description>Average Level Coefficient Setting(3.24fomat) </description>
                <bitRange>[26:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DAP_RCTR</name>
            <description>ADC DAP Right Control Register</description>
            <addressOffset>0x78</addressOffset>
            <resetValue>0x1F7000</resetValue>
            <resetMask>0x1F73FF</resetMask>
            <fields>
              <field>
                <name>ADAP_RNOI_SET</name>
                <description>Right Channel Noise Threshold Setting  0x00 : -24dB 0x01 : -26dB 0x02 : -28dB ---------------------- 
0x1D: -82dB 
0x1E: -84dB 
0x1F: -86dB </description>
                <bitRange>[20:16]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_minus_82dB</name>
                    <description>-82dB</description>
                    <value>0x1D</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_84dB</name>
                    <description>-84dB</description>
                    <value>0x1E</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_86dB</name>
                    <description>-86dB</description>
                    <value>0x1F</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>AAGC_RCHAN_EN</name>
                <description>Right AGC Enable   
0: Disable   
1: Enable </description>
                <bitRange>[14:14]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>ADAP_RHPF_EN</name>
                <description>Right HPF Enable  
0: Disable   
1: Enable </description>
                <bitRange>[13:13]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>ADAP_RNOI_DET</name>
                <description>Right Noise Detect Enable  
0: Disable   
1: Enable </description>
                <bitRange>[12:12]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>ADAP_RCHAN_HYS</name>
                <description>Right Hysteresis Setting  
00: 1dB 
01: 2dB 
10: 4dB 
11: Disable </description>
                <bitRange>[9:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_1dB</name>
                    <description>1dB</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_2dB</name>
                    <description>2dB</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_4dB</name>
                    <description>4dB</description>
                    <value>0b10</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b11</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>ADAP_RNOI_DEB</name>
                <description>Right Noise Debounce Time  0000:0/fs 0001:4/fs 0010:8/fs ------------ 1111 16*4096/fs  T=2 /fs ,except N=0 </description>
                <bitRange>[7:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>ADAP_RSIG_DEB</name>
                <description>Right Signal Debounce Time  0000:0/fs 0001:4/fs 0010:8/fs ------------ 1111 16*4096/fs  T=2 /fs ,except N=0 </description>
                <bitRange>[3:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DAP_RDAT</name>
            <description>ADC DAP Right Decay and Attack Time Register</description>
            <addressOffset>0x8C</addressOffset>
            <resetValue>0x1F</resetValue>
            <resetMask>0x7FFF7FFF</resetMask>
            <fields>
              <field>
                <name>ADAP_RATT_SET</name>
                <description>Right Attack Time Coefficient Setting  
000000000000000: 1x32/fs 
000000000000001: 2x32/fs ------------------------ 
111111111111111: 2 x32/fs  T=(n+1)*32/fs When the gain decreases, the actual gain will decrease 0.5dB at every attack time. </description>
                <bitRange>[30:16]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_1x32_slash_fs</name>
                    <description>1x32/fs</description>
                    <value>0b000000000000000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_2x32_slash_fs</name>
                    <description>2x32/fs ------------------------</description>
                    <value>0b000000000000001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_2</name>
                    <description>2 x32/fs  T=(n+1)*32/fs When the gain decreases, the actual gain will decrease 0.5dB at every attack time.</description>
                    <value>0b111111111111111</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>ADAP_RDEC_SET</name>
                <description>Right Decay Time Coefficient Setting   
000000000000000: 1x32/fs 
000000000000001: 2x32/fs ------------------------ 
000000000011111: 32x32/fs ------------------------ 
111111111111111: 2 x32/fs  T=(n+1)*32/fs When the gain increases, the actual gain will increase 0.5dB at every decay time. </description>
                <bitRange>[14:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_1x32_slash_fs</name>
                    <description>1x32/fs</description>
                    <value>0b000000000000000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_2x32_slash_fs</name>
                    <description>2x32/fs ------------------------</description>
                    <value>0b000000000000001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_32x32_slash_fs</name>
                    <description>32x32/fs ------------------------</description>
                    <value>0b000000000011111</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_2</name>
                    <description>2 x32/fs  T=(n+1)*32/fs When the gain increases, the actual gain will increase 0.5dB at every decay time.</description>
                    <value>0b111111111111111</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DG</name>
            <description>ADC Debug Register</description>
            <addressOffset>0x4C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1000000</resetMask>
            <fields>
              <field>
                <name>AD_SWP</name>
                <description>ADC Output Channel Swap Enable (for digital filter)  
0: Disable 
1: Enable</description>
                <bitRange>[24:24]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_CTRL</name>
            <description>ADC DRC Control Register</description>
            <addressOffset>0x208</addressOffset>
            <resetValue>0x80</resetValue>
            <resetMask>0xBFFF</resetMask>
            <fields>
              <field>
                <name>DRC_DELAY_BUFFER_DATA_OUTPUT</name>
                <description>DRC delay buffer data output state when DRC delay function is enabled and the DRC function is disabled. After disabled DRC function and this bit changed to 0, the user should write the DRC delay function bit to 0.  0 : Not complete 1 : Complete </description>
                <bitRange>[15:15]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>SIGNAL_DELAY_TIME</name>
                <description>Signal Delay Time Setting  000000 : (8x1)fs 000001 : (8x2)fs 000010 : (8x3)fs ---------------------------------------- 101110 : (8*47)fs 101111 : (8*48)fs 110000 ~ 111111 : (8*48)fs  Delay time = 8*(n+1)fs, n&lt;6'h30; When the delay function is disabled, the signal delay time is unused. </description>
                <bitRange>[13:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DELAY_BUFFER_USE_OR_NOT</name>
                <description>The delay buffer use or not when the DRC disable and the DRC buffer data output completely.  0 : Don't use the buffer  1 : Use the buffer  </description>
                <bitRange>[7:7]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DRC_GAIN_MAX_LIMIT_ENABLE</name>
                <description>DRC Gain Max Limit Enable  0 : Disable 1 : Enable </description>
                <bitRange>[6:6]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DRC_GAIN_MIN_LIMIT_ENABLE</name>
                <description>DRC Gain Min Limit Enable.  When this function enable, it will overwrite the noise detect function.  0 : Disable 1 : Enable </description>
                <bitRange>[5:5]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>CONTROL_THE_DRC_TO_DETECT</name>
                <description>Control the DRC to Detect Noise when ET Enable   0 : Disable 1 : Enable </description>
                <bitRange>[4:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SIGNAL_FUNCTION_SELECT</name>
                <description>Signal Function Select  0 : RMS filter 1 : Peak filter  When Signal function selects Peak filter, the RMS parameter is unused. (AC_DRC_LRMSHAT/AC_DRC_LRMSLAT/AC_DRC_LRMSHAT/AC_DRC_LRMSLAT) When Signal function selects RMS filter, the Peak filter parameter is unused.(AC_DRC_LPFHAT/AC_DRC_LPFLAT/AC_DRC_RPFHAT/ AC_DRC_RPFLAT / AC_DRC_LPFHRT / AC_DRC_LPFLRT / AC_DRC_RPFHRT / AC_DRC_RPFLRT) </description>
                <bitRange>[3:3]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DELAY_FUNCTION_ENABLE</name>
                <description>Delay Function Enable  0 : Disable 1 : Enable  When the Delay function is disabled, the Signal delay time is unused. </description>
                <bitRange>[2:2]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DRC_LT_ENABLE</name>
                <description>DRC LT Enable  0 : Disable 1 : Enable  When the DRC LT disables the LT, then Kl and OPL parameter is unused. </description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DRC_ET_ENABLE</name>
                <description>DRC ET Enable  0 : Disable 1 : Enable When the DRC ET disables the ET, then Ke and OPE parameter is unused. </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_EPSHC</name>
            <description>ADC DRC Expander Smooth Time High Coef Register</description>
            <addressOffset>0x2AC</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x7FF</resetMask>
            <fields>
              <field>
                <name>GAIN_SMOOTH_FILTER_RELEASE</name>
                <description>The gain smooth filter release and attack time parameter setting in expander region, which is determined by the equation that RT = 1-exp(-2.2Ts/tr). The format is 3.24. (30ms) </description>
                <bitRange>[10:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_EPSLC</name>
            <description>ADC DRC Expander Smooth Time Low Coef Register</description>
            <addressOffset>0x2B0</addressOffset>
            <resetValue>0x640C</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>GAIN_SMOOTH_FILTER_RELEASE</name>
                <description>The gain smooth filter release and attack time parameter setting in expander region, which is determined by the equation that RT = 1-exp(-2.2Ts/tr). The format is 3.24. (30ms) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_HCT</name>
            <description>ADC DRC Compressor Theshold High Setting Register</description>
            <addressOffset>0x23C</addressOffset>
            <resetValue>0x6A4</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>COMPRESSOR_THRESHOLD</name>
                <description>The compressor threshold setting, which is set by the equation that CTin = -CT/6.0206. The format is 8.24  (-40dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_HET</name>
            <description>ADC DRC Expander Theshold High Setting Register</description>
            <addressOffset>0x26C</addressOffset>
            <resetValue>0xBA0</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>EXPANDER_THRESHOLD</name>
                <description>The expander threshold setting is set by the equation that ETin = -ET/6.0206. The format is 8.24. (-70dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_HHPFC</name>
            <description>ADC DRC High HPF Coef Register</description>
            <addressOffset>0x200</addressOffset>
            <resetValue>0xFF</resetValue>
            <resetMask>0x7FF</resetMask>
            <fields>
              <field>
                <name>HPF</name>
                <description>coefficient setting and the data is 3.24 format.  </description>
                <bitRange>[10:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_HKC</name>
            <description>ADC DRC Compressor Slope High Setting Register</description>
            <addressOffset>0x244</addressOffset>
            <resetValue>0x80</resetValue>
            <resetMask>0x3FFF</resetMask>
            <fields>
              <field>
                <name>COMPRESSOR_SLOPE</name>
                <description>The slope of the compressor is determined by the equation that Kc = 1/R, R is the ratio of the compressor, which always is interger. The format is 8.24. (2 : 1) </description>
                <bitRange>[13:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_HKE</name>
            <description>ADC DRC Expander Slope High Setting Register</description>
            <addressOffset>0x274</addressOffset>
            <resetValue>0x500</resetValue>
            <resetMask>0x3FFF</resetMask>
            <fields>
              <field>
                <name>EXPANDER_SLOPE</name>
                <description>The slope of the expander is determined by the equation that Ke = 1/R, R is the ratio of the expander, which always is interger and the ke must larger than 1/50. The format is 6.24. (1:5) </description>
                <bitRange>[13:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_HKN</name>
            <description>ADC DRC Linear Slope High Setting Register</description>
            <addressOffset>0x284</addressOffset>
            <resetValue>0x100</resetValue>
            <resetMask>0x3FFF</resetMask>
            <fields>
              <field>
                <name>LINEAR_SLOPE</name>
                <description>The slope of the linear is determined by the equation that Kn = 1/R, R is the ratio of the linear, which always is interger . The format is 6.24. (1:1) </description>
                <bitRange>[13:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_HKl</name>
            <description>ADC DRC Limiter Slope High Setting Register</description>
            <addressOffset>0x25C</addressOffset>
            <resetValue>0x5</resetValue>
            <resetMask>0x3FFF</resetMask>
            <fields>
              <field>
                <name>LIMITER_SLOPE</name>
                <description>The slope of the limiter is determined by the equation that Kl = 1/R, R is the ratio of the limiter, which always is interger. The format is 6.24. (50 :1) </description>
                <bitRange>[13:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_HLT</name>
            <description>ADC DRC Limiter Theshold High Setting Register</description>
            <addressOffset>0x254</addressOffset>
            <resetValue>0x1A9</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>LIMITER_THRESHOLD</name>
                <description>The limiter threshold setting is set by the equation that LTin = -LT/6.0206. The format is 8.24. (-10dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_HOPC</name>
            <description>ADC  DRC  Compressor  High  Output  at  Compressor  Threshold  Register</description>
            <addressOffset>0x24C</addressOffset>
            <resetValue>0xF95B</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>COMPRESSOR_OUTPUT</name>
                <description>The output of the compressor is determined by the equation OPC/6.0206. The format is 8.24.  (-40dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_HOPE</name>
            <description>ADC DRC Expander High Output at Expander Threshold</description>
            <addressOffset>0x27C</addressOffset>
            <resetValue>0xF45F</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>EXPANDER_OUTPUT</name>
                <description>The output of the expander is determined by equation OPE/6.0206. The format is 8.24.  (-70dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_HOPL</name>
            <description>ADC DRC Limiter High Output at Limiter Threshold</description>
            <addressOffset>0x264</addressOffset>
            <resetValue>0xFBD8</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>LIMITER_OUTPUT</name>
                <description>The output of the limiter is determined by equation OPT/6.0206. The format is 8.24.  (-25dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_HPFHGAIN</name>
            <description>ADC DRC HPF Gain High Coef Register</description>
            <addressOffset>0x2B8</addressOffset>
            <resetValue>0x100</resetValue>
            <resetMask>0x7FF</resetMask>
            <fields>
              <field>
                <name>HPF_COEFFICIENT_GAIN</name>
                <description>The gain of the hpf coefficient setting which format is 3.24.(gain = 1) </description>
                <bitRange>[10:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_HPFLGAIN</name>
            <description>ADC DRC HPF Gain Low Coef Register</description>
            <addressOffset>0x2BC</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>HPF_COEFFICIENT_GAIN</name>
                <description>The gain of the hpf coefficient setting which format is 3.24.(gain = 1) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_LCT</name>
            <description>ADC DRC Compressor Slope High Setting Register</description>
            <addressOffset>0x240</addressOffset>
            <resetValue>0xD3C0</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>COMPRESSOR_THRESHOLD</name>
                <description>The compressor threshold setting, which is set by the equation that CTin = -CT/6.0206. The format is 8.24  (-40dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_LET</name>
            <description>ADC DRC Expander Theshold Low Setting Register</description>
            <addressOffset>0x270</addressOffset>
            <resetValue>0x7291</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>EXPANDER_THRESHOLD</name>
                <description>The expander threshold setting is set by the equation that ETin = -ET/6.0206. The format is 8.24. (-70dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_LHPFC</name>
            <description>ADC DRC Low HPF Coef Register</description>
            <addressOffset>0x204</addressOffset>
            <resetValue>0xFAC1</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>HPF</name>
                <description>coefficient setting and the data is 3.24 format. </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_LKC</name>
            <description>ADC DRC Compressor Slope Low Setting Register</description>
            <addressOffset>0x248</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>COMPRESSOR_SLOPE</name>
                <description>The slope of the compressor is determined by the equation that Kc = 1/R, R is the ratio of the compressor, which always is interger. The format is 8.24. (2 : 1) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_LKE</name>
            <description>ADC DRC Expander Slope Low Setting Register</description>
            <addressOffset>0x278</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>EXPANDER_SLOPE</name>
                <description>The slope of the expander is determined by the equation that Ke = 1/R, R is the ratio of the expander, which always is interger and the ke must larger than 1/50. The format is 6.24. (1:5) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_LKN</name>
            <description>ADC DRC Linear Slope Low Setting Register</description>
            <addressOffset>0x288</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>LINEAR_SLOPE</name>
                <description>The slope of the linear is determined by the equation that Kn = 1/R, R is the ratio of the linear, which always is interger . The format is 6.24. (1:1) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_LKl</name>
            <description>ADC DRC Limiter Slope Low Setting Register</description>
            <addressOffset>0x260</addressOffset>
            <resetValue>0x1EB8</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>LIMITER_SLOPE</name>
                <description>The slope of the limiter is determined by the equation that Kl = 1/R, R is the ratio of the limiter, which always is interger. The format is 6.24. (50 :1) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_LLT</name>
            <description>ADC DRC Limiter Theshold Low Setting Register</description>
            <addressOffset>0x258</addressOffset>
            <resetValue>0x34F0</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>LIMITER_THRESHOLD</name>
                <description>The limiter threshold setting is set by the equation that LTin = -LT/6.0206. The format is 8.24. (-10dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_LOPC</name>
            <description>ADC  DRC  Compressor  Low  Output  at  Compressor  Threshold  Register</description>
            <addressOffset>0x250</addressOffset>
            <resetValue>0x2C3F</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>COMPRESSOR_OUTPUT</name>
                <description>The output of the compressor is determined by the equation OPC/6.0206. The format is 8.24.  (-40dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_LOPE</name>
            <description>ADC DRC Expander Low Output at Expander Threshold</description>
            <addressOffset>0x280</addressOffset>
            <resetValue>0x8D6E</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>EXPANDER_OUTPUT</name>
                <description>The output of the expander is determined by equation OPE/6.0206. The format is 8.24.  (-70dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_LOPL</name>
            <description>ADC DRC Limiter Low Output at Limiter Threshold</description>
            <addressOffset>0x268</addressOffset>
            <resetValue>0xFBA7</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>LIMITER_OUTPUT</name>
                <description>The output of the limiter is determined by equation OPT/6.0206. The format is 8.24.  (-25dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_LPFHAT</name>
            <description>ADC DRC Left Peak Filter High Attack Time Coef Register</description>
            <addressOffset>0x20C</addressOffset>
            <resetValue>0xB</resetValue>
            <resetMask>0x7FF</resetMask>
            <fields>
              <field>
                <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
                <description>The left peak filter attack time parameter setting, which is determined by the equation that AT = 1-exp(-2.2Ts/ta). The format is 3.24.   (1ms)  </description>
                <bitRange>[10:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_LPFHRT</name>
            <description>ADC DRC Left Peak Filter High Release Time Coef Register</description>
            <addressOffset>0x21C</addressOffset>
            <resetValue>0xFF</resetValue>
            <resetMask>0x7FF</resetMask>
            <fields>
              <field>
                <name>LEFT_PEAK_FILTER_RELEASE_TIME</name>
                <description>The left peak filter release time parameter setting, which is determined by the equation that RT = exp(-2.2Ts/tr). The format is 3.24.   (100ms) </description>
                <bitRange>[10:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_LPFLAT</name>
            <description>ADC DRC Left Peak Filter Low Attack Time Coef Register</description>
            <addressOffset>0x210</addressOffset>
            <resetValue>0x77BF</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
                <description>The left peak filter attack time parameter setting, which is determined by the equation that AT = 1-exp(-2.2Ts/ta). The format is 3.24.   (1ms) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_LPFLRT</name>
            <description>ADC DRC Left Peak Filter Low Release Time Coef Register</description>
            <addressOffset>0x220</addressOffset>
            <resetValue>0xE1F8</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>LEFT_PEAK_FILTER_RELEASE_TIME</name>
                <description>The left peak filter release time parameter setting, which is determined by the equation that RT = exp(-2.2Ts/tr). The format is 3.24.   (100ms) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_LRMSHAT</name>
            <description>ADC DRC Left RMS Filter High Coef Register</description>
            <addressOffset>0x22C</addressOffset>
            <resetValue>0x1</resetValue>
            <resetMask>0x7FF</resetMask>
            <fields>
              <field>
                <name>LEFT_RMS_FILTER_AVERAGE_TIME</name>
                <description>The left RMS filter average time parameter setting, which is determined by the equation that AT = 1-exp(-2.2Ts/tav). The format is 3.24.    (10ms) </description>
                <bitRange>[10:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_LRMSLAT</name>
            <description>ADC DRC Left RMS Filter Low Coef Register</description>
            <addressOffset>0x230</addressOffset>
            <resetValue>0x2BAF</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>LEFT_RMS_FILTER_AVERAGE_TIME</name>
                <description>The left RMS filter average time parameter setting, which is determined by the equation that AT = 1-exp(-2.2Ts/tav). The format is 3.24.   (10ms) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_MNGLS</name>
            <description>ADC DRC MIN Gain High Setting Register</description>
            <addressOffset>0x2A8</addressOffset>
            <resetValue>0x2C3F</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>MIN_GAIN</name>
                <description>The min gain setting is determined by equation MNG/6.0206. The format is 8.24 and must -60dB MNG  -30dB  (-40dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_MXGHS</name>
            <description>ADC DRC MAX Gain High Setting Register</description>
            <addressOffset>0x29C</addressOffset>
            <resetValue>0xFE56</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>MAX_GAIN</name>
                <description>The max gain setting is determined by equation MXG/6.0206. The format is 8.24 and must -20dB &lt;MXG&lt; 30dB (-10dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_MXGLS</name>
            <description>ADC DRC MIN Gain Low Setting Register</description>
            <addressOffset>0x2A0</addressOffset>
            <resetValue>0xCB0F</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>MAX_GAIN</name>
                <description>The max gain setting is determined by equation MXG/6.0206. The format is 8.24 and must -20dB &lt;MXG &lt; 30dB (-10dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_RPFHAT</name>
            <description>ADC DRC Right Peak Filter High Attack Time Coef Register</description>
            <addressOffset>0x214</addressOffset>
            <resetValue>0xB</resetValue>
            <resetMask>0x7FF</resetMask>
            <fields>
              <field>
                <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
                <description>The left peak filter attack time parameter setting, which is determined by the equation that AT = 1-exp(-2.2Ts/ta). The format is 3.24.   (1ms) </description>
                <bitRange>[10:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_RPFHRT</name>
            <description>ADC DRC Right Peak filter High Release Time Coef Register</description>
            <addressOffset>0x224</addressOffset>
            <resetValue>0xFF</resetValue>
            <resetMask>0x7FF</resetMask>
            <fields>
              <field>
                <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
                <description>The left peak filter attack time parameter setting, which is determined by the equation that RT = exp(-2.2Ts/tr). The format is 3.24.   (100ms) </description>
                <bitRange>[10:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_RPFLAT</name>
            <description>ADC DRC Peak Filter Low Attack Time Coef Register</description>
            <addressOffset>0x218</addressOffset>
            <resetValue>0x77BF</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
                <description>The left peak filter attack time parameter setting, which is determined by the equation that AT = 1-exp(-2.2Ts/ta). The format is 3.24.   (1ms) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_RPFLRT</name>
            <description>ADC DRC Right Peak filter Low Release Time Coef Register</description>
            <addressOffset>0x228</addressOffset>
            <resetValue>0xE1F8</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>LEFT_PEAK_FILTER_RELEASE_TIME</name>
                <description>The left peak filter release time parameter setting, which is determined by the equation that AT = exp(-2.2Ts/tr). The format is 3.24.   (100ms) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_RRMSHAT</name>
            <description>ADC DRC Right RMS Filter High Coef Register</description>
            <addressOffset>0x234</addressOffset>
            <resetValue>0x1</resetValue>
            <resetMask>0x7FF</resetMask>
            <fields>
              <field>
                <name>RIGHT_RMS_FILTER_AVERAGE_TIME</name>
                <description>The right RMS filter average time parameter setting, which is determined by the equation that AT = 1-exp(-2.2Ts/tav). The format is 3.24.    (10ms) </description>
                <bitRange>[10:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_RRMSLAT</name>
            <description>ADC DRC Right RMS Filter Low Coef Register</description>
            <addressOffset>0x238</addressOffset>
            <resetValue>0x2BAF</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>RIGHT_RMS_FILTER_AVERAGE_TIME</name>
                <description>The right RMS filter average time parameter setting, which is determined by the equation that AT = 1-exp(-2.2Ts/tav). The format is 3.24.   (10ms) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_SFHAT</name>
            <description>ADC DRC Smooth filter Gain High Attack Time Coef Register</description>
            <addressOffset>0x28C</addressOffset>
            <resetValue>0x2</resetValue>
            <resetMask>0x7FF</resetMask>
            <fields>
              <field>
                <name>SMOOTH_FILTER_ATTACK_TIME</name>
                <description>The smooth filter attack time parameter setting, which is determined by the equation that AT = 1-exp(-2.2Ts/tr). The format is 3.24. (5ms) </description>
                <bitRange>[10:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_SFHRT</name>
            <description>ADC DRC Smooth filter Gain High Release Time Coef Register</description>
            <addressOffset>0x294</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x7FF</resetMask>
            <fields>
              <field>
                <name>GAIN_SMOOTH_FILTER_RELEASE_TIME</name>
                <description>The gain smooth filter release time parameter setting, which is determined by the equation that RT = 1-exp(-2.2Ts/tr). The format is 3.24. (200ms) </description>
                <bitRange>[10:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_SFLAT</name>
            <description>ADC DRC Smooth filter Gain Low Attack Time Coef Register</description>
            <addressOffset>0x290</addressOffset>
            <resetValue>0x5600</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>SMOOTH_FILTER_ATTACK_TIME</name>
                <description>The smooth filter attack time parameter setting, which is determined by the equation that AT = 1-exp(-2.2Ts/tr). The format is 3.24. (5ms) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_DRC_SFLRT</name>
            <description>ADC DRC Smooth filter Gain Low Release Time Coef Register</description>
            <addressOffset>0x298</addressOffset>
            <resetValue>0xF04</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>GAIN_SMOOTH_FILTER_RELEASE_TIME</name>
                <description>The gain smooth filter release time parameter setting, which is determined by the equation that RT = 1-exp(-2.2Ts/tr). The format is 3.24. (200ms) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_FIFOC</name>
            <description>ADC FIFO Control Register</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0xF00</resetValue>
            <resetMask>0xF1071FDB</resetMask>
            <fields>
              <field>
                <name>ADFS</name>
                <description>Sample Rate of ADC  
000: 48KHz 
010: 24KHz 
100: 12KHz 
110: Reserved 
001: 32KHz 
011: 16KHz 
101: 8KHz 
111: Reserved  44.1KHz/22.05KHz/11.025KHz can be supported by Audio PLL Configure Bit </description>
                <bitRange>[31:29]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_48KHz</name>
                    <description>48KHz</description>
                    <value>0b000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_24KHz</name>
                    <description>24KHz</description>
                    <value>0b010</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_12KHz</name>
                    <description>12KHz</description>
                    <value>0b100</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_32KHz</name>
                    <description>32KHz</description>
                    <value>0b001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_16KHz</name>
                    <description>16KHz</description>
                    <value>0b011</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_8KHz</name>
                    <description>8KHz</description>
                    <value>0b101</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Reserved</name>
                    <description>Reserved  44.1KHz/22.05KHz/11.025KHz can be supported by Audio PLL Configure Bit</description>
                    <value>0b111</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>EN_AD</name>
                <description>ADC Digital Part Enable  
0: Disable 
1: Enable </description>
                <bitRange>[28:28]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RX_FIFO_MODE</name>
                <description>RX FIFO Output Mode (Mode 0, 1)  : E pa di g  at LSB of TX FIFO egiste 
1: Expanding received sample sign bit at MSB of TX FIFO register  For 24-bit received audio sample: Mode : RXDATA[ : ] = {FIFO_O[ : ], h }  Mode 1: Reserved  For 16-bit received audio sample: Mode : RXDATA[ : ] = {FIFO_O[ : ], h }  Mode 1: RXDATA[31:0] = {16{FIFO_O[23]}, FIFO_O[23:8]} </description>
                <bitRange>[24:24]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Expanding</name>
                    <description>Expanding received sample sign bit at MSB of TX FIFO register  For 24-bit received audio sample: Mode : RXDATA[ : ] = {FIFO_O[ : ], h }  Mode 1: Reserved  For 16-bit received audio sample: Mode : RXDATA[ : ] = {FIFO_O[ : ], h }  Mode 1: RXDATA[31:0] = {16{FIFO_O[23]}, FIFO_O[23:8]}</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>ADCFDT</name>
                <description>ADC FIFO Delay Time for Writing Data after EN_AD  00:5ms 01:10ms 10:20ms 11:30ms </description>
                <bitRange>[18:17]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>ADCDFEN</name>
                <description>ADC FIFO Delay Function for Writing Data after EN_AD  
0: Disable 
1: Enable </description>
                <bitRange>[16:16]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RX_FIFO_TRG_LEVEL</name>
                <description>RX FIFO Trigger Level (RXTL[4:0]) Interrupt and DMA request trigger level for RX FIFO normal condition IRQ/DRQ generated when WLEVEL &lt; RXTL[4:0]  WLEVEL represents the number of valid samples in the RX FIFO.</description>
                <bitRange>[12:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>ADC_MONO_EN</name>
                <description>ADC Mono Enable  
0: Stereo, 16 levels FIFO 
1: Mono, 32 levels FIFO  Whe it is set to , O l left ha el sa ples a e e o ded </description>
                <bitRange>[7:7]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Stereo</name>
                    <description>Stereo, 16 levels FIFO</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Mono</name>
                    <description>Mono, 32 levels FIFO  Whe it is set to , O l left ha el sa ples a e e o ded</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RX_SAMPLE_BITS</name>
                <description>Receiving Audio Sample Resolution  
0: 16 bits 
1: 24 bits </description>
                <bitRange>[6:6]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_16_bits</name>
                    <description>16 bits</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_24_bits</name>
                    <description>24 bits</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>ADC_DRQ_EN</name>
                <description>ADC FIFO Data Available DRQ Enable  
0: Disable 
1: Enable </description>
                <bitRange>[4:4]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>ADC_IRQ_EN</name>
                <description>ADC FIFO Data Available IRQ Enable  
0: Disable 
1: Enable </description>
                <bitRange>[3:3]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>ADC_OVERRUN_IRQ_EN</name>
                <description>ADC FIFO Overrun IRQ Enable  
0: Disable 
1: Enable </description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>ADC_FIFO_FLUSH</name>
                <description>ADC FIFO Flush W ite  to flush TX FIFO, self lea to  </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_FIFOS</name>
            <description>ADC FIFO Status Register</description>
            <addressOffset>0x14</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x803F0A</resetMask>
            <fields>
              <field>
                <name>RXA</name>
                <description>RX FIFO Available  
0: No available data in RX FIFO 
1: More than one sample in RX FIFO (&gt;= 1 word) </description>
                <bitRange>[23:23]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_available</name>
                    <description>No available data in RX FIFO</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>More</name>
                    <description>More than one sample in RX FIFO (&gt;= 1 word)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RXA_CNT</name>
                <description>RX FIFO Available Sample Word Counter </description>
                <bitRange>[13:8]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>RXA_INT</name>
                <description>RX FIFO Data Available Pending Interrupt  
0: No Pending IRQ 
1: Data Available Pending IRQ  W ite  to lea this i te upt o auto ati ally clear if interrupt condition fails </description>
                <bitRange>[3:3]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_Pending</name>
                    <description>No Pending IRQ</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Data</name>
                    <description>Data Available Pending IRQ  W ite  to lea this i te upt o auto ati ally clear if interrupt condition fails</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RXO_INT</name>
                <description>RX FIFO Overrun Pending Interrupt  
0: No Pending IRQ 
1: FIFO Overrun Pending IRQ  W ite  to lea this i te upt </description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_Pending</name>
                    <description>No Pending IRQ</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>FIFO</name>
                    <description>FIFO Overrun Pending IRQ  W ite  to lea this i te upt</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_ADC_RXDATA</name>
            <description>ADC RX Data Register</description>
            <addressOffset>0x18</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>RX_DATA</name>
                <description>RX Sample Host can get one sample by reading this register. The left channel sample data is first and then the right channel sample.</description>
                <bitRange>[31:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_CNT</name>
            <description>DAC TX FIFO Counter Register</description>
            <addressOffset>0x40</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>TX_CNT</name>
                <description>TX Sample Counter The audio sample number of sending into TXFIFO.  When one sample is put into TXFIFO by DMA or by host IO, the TX sample counter register increases by one. The TX sample counter register can be set to any initial value at any time. After been updated by the initial value, the counter register should count on base of this initial value Note: It is used for Audio/ Video Synchronization.</description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DAP_CTR</name>
            <description>DAC DAP Control Register</description>
            <addressOffset>0x60</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x8000C000</resetMask>
            <fields>
              <field>
                <name>DDAP</name>
                <description>_EN DAP for DAC Enable  
0: Bypass 
1: Enable </description>
                <bitRange>[31:31]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Bypass</name>
                    <description>Bypass</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DAC_DRC_EN</name>
                <description>DRC Enable Control  
0: Disable 
1: Enable </description>
                <bitRange>[15:15]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DAC_DRC_HPF_EN</name>
                <description>HPF Enable Control  
0: Disable 
1: Enable </description>
                <bitRange>[14:14]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DG</name>
            <description>DAC Debug Register</description>
            <addressOffset>0x48</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xF40</resetMask>
            <fields>
              <field>
                <name>DAC_MODU_SELECT</name>
                <description>DAC Modulator Debug  
0: DAC Modulator Normal Mode 
1: DAC Modulator Debug Mode </description>
                <bitRange>[11:11]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>DAC_Modulator_Normal</name>
                    <description>DAC Modulator Normal Mode</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>DAC_Modulator_Debug</name>
                    <description>DAC Modulator Debug Mode</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DAC_PATTERN_SELECT</name>
                <description>DAC Pattern Select  
00: Normal (Audio Sample from TX FIFO) 
01: -6 dB Sin wave 
10: -60 dB Sin wave 
11: Silent wave </description>
                <bitRange>[10:9]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Normal</name>
                    <description>Normal (Audio Sample from TX FIFO)</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_6_dB</name>
                    <description>-6 dB Sin wave</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_minus_60_dB</name>
                    <description>-60 dB Sin wave</description>
                    <value>0b10</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Silent</name>
                    <description>Silent wave</description>
                    <value>0b11</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>CODEC_CLK_SELECT</name>
                <description>CODEC Clock Source Select  
0: CODEC Clock from PLL 
1: CODEC Clock from OSC (for Debug) </description>
                <bitRange>[8:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>CODEC_Clock_from_PLL</name>
                    <description>CODEC Clock from PLL</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>CODEC_Clock_from_OSC</name>
                    <description>CODEC Clock from OSC (for Debug)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DA_SWP</name>
                <description>DAC Output Channel Swap Enable  0:Disable 1:Enable </description>
                <bitRange>[6:6]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DPC</name>
            <description>DAC Digital Part Control Register</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x9E07F001</resetMask>
            <fields>
              <field>
                <name>EN_DAC</name>
                <description>DAC Digital Part Enable  
0: Disable 1 : Enable </description>
                <bitRange>[31:31]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable 1 : Enable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>MODQU</name>
                <description>Internal DAC Quantization Levels Levels=[7*(21+MODQU[3:0])]/128 Default levels=7*21/128=1.15 </description>
                <bitRange>[28:25]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>HPF_EN</name>
                <description>High Pass Filter Enable  
0: Disable 
1: Enable </description>
                <bitRange>[18:18]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DVOL</name>
                <description>Digital volume control: DVC, ATT=DVC[5:0]*(-1.16Db) 64 steps, -1.16Db/step </description>
                <bitRange>[17:12]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>HUB_EN</name>
                <description>Audio Hub Enable  
0: Disable 
1: Enable </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_CTRL</name>
            <description>DAC DRC Control Register</description>
            <addressOffset>0x108</addressOffset>
            <resetValue>0x80</resetValue>
            <resetMask>0xBFFF</resetMask>
            <fields>
              <field>
                <name>DRC_DELAY_BUFFER_DATA_OUTPUT_STATE</name>
                <description>delay buffer data output state when DRC delay function is enabled and the DRC funciton is disabled. After disable DRC function and this bit is set to 0, the user should write the DRC delay function bit to 0.  0 : Not complete 1 : Complete </description>
                <bitRange>[15:15]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>SIGNAL_DELAY_TIME</name>
                <description>Signal Delay Time Setting  000000 : (8x1)fs 000001 : (8x2)fs 000010 : (8x3)fs ---------------------------------------- 101110 : (8*47)fs 101111 : (8*48)fs 110000 ~ 111111 : (8*48)fs  Delay time = 8*(n+1)fs, n&lt;6'h30. When the delay function is disabled, the signal delay time is unused. </description>
                <bitRange>[13:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DELAY_BUFFER_USE_OR_NOT</name>
                <description>The delay buffer use or not when the DRC disable and the drc buffer data output completely.  0 : Don't use the buffer  1 : Use the buffer  </description>
                <bitRange>[7:7]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DRC_GAIN_MAX_LIMIT_EN</name>
                <description>Gain Max Limit Enable  0 : Disable 1 : Enable </description>
                <bitRange>[6:6]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DRC_GAIN_MIN_LIMIT_EN</name>
                <description>Gain Min Limit Enable.  When this function enable, it will overwrite the noise detect function.  0 : Disable 1 : Enable </description>
                <bitRange>[5:5]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>NOISE_DETECT</name>
                <description>Control DRC to Detect Noise when ET Enable   0 : Disable 1 : Enable </description>
                <bitRange>[4:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SIGNAL_FUNCTION_SELECT</name>
                <description>Signal Function Select  0 : RMS filter 1 : Peak filter  When Signal function Select Peak filter, the RMS parameter is unused. (AC_DRC_LRMSHAT/AC_DRC_LRMSLAT/AC_DRC_LRMSHAT/AC_DRC_LRMSLAT) When Signal function Select RMS filter, the Peak filter parameter is unused.(AC_DRC_LPFHAT/AC_DRC_LPFLAT/AC_DRC_RPFHAT/AC_DRC_RPFLAT / AC_DRC_LPFHRT / AC_DRC_LPFLRT / AC_DRC_RPFHRT / AC_DRC_RPFLRT) </description>
                <bitRange>[3:3]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DELAY_FUNCTION_ENABLE</name>
                <description>Delay Function Enable 0 : Disable 1 : Enable  When the Delay function enable bit is disabled, the Signal delay time is unused. </description>
                <bitRange>[2:2]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DRC_LT_ENABLE</name>
                <description>LT Enable  0 : Disable 1 : Enable  When the DRC LT enable bit is disabled, Kl and OPL parameter is unused. </description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DRC_ET_ENABLE</name>
                <description>ET Enable  0 : Disable 1 : Enable  When the DRC ET enable bit is disabled, Ke and OPE parameter is unused. </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_EPSHC</name>
            <description>DAC DRC Expander Smooth Time High Coef Register</description>
            <addressOffset>0x1AC</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFF</resetMask>
            <fields>
              <field>
                <name>GAIN_SMOOTH_FILTER_RELEASE</name>
                <description>The gain smooth filter release and attack time parameter setting in expander region, which is determined by the equation that RT = 1-exp(-2.2Ts/tr). The format is 3.24. (30ms) </description>
                <bitRange>[11:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_EPSLC</name>
            <description>DAC DRC Expander Smooth Time Low Coef Register</description>
            <addressOffset>0x1B0</addressOffset>
            <resetValue>0x640C</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>GAIN_SMOOTH_FILTER_RELEASE</name>
                <description>The gain smooth filter release and attack time parameter setting in expander region, which is determined by the equation that RT = 1-exp(-2.2Ts/tr). The format is 3.24. (30ms) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_HCT</name>
            <description>DAC DRC Compressor Theshold High Setting Register</description>
            <addressOffset>0x13C</addressOffset>
            <resetValue>0x6A4</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>COMPRESSOR_THRESHOLD</name>
                <description>The compressor threshold setting is set by the equation that CTin = -CT/6.0206. The format is 8.24  (-40dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_HET</name>
            <description>DAC DRC Expander Theshold High Setting Register</description>
            <addressOffset>0x16C</addressOffset>
            <resetValue>0xBA0</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>EXPANDER_THRESHOLD</name>
                <description>The expander threshold setting is set by the equation that ETin = -ET/6.0206. The format is 8.24. (-70dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_HHPFC</name>
            <description>DAC DRC High HPF Coef Register</description>
            <addressOffset>0x100</addressOffset>
            <resetValue>0xFF</resetValue>
            <resetMask>0x7FF</resetMask>
            <fields>
              <field>
                <name>HPF</name>
                <description>coefficient setting and the data is 3.24 format.  </description>
                <bitRange>[10:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_HKC</name>
            <description>DAC DRC Compressor Slope High Setting Register</description>
            <addressOffset>0x144</addressOffset>
            <resetValue>0x80</resetValue>
            <resetMask>0x3FFF</resetMask>
            <fields>
              <field>
                <name>COMPRESSOR_SLOPE</name>
                <description>The slope of the compressor is determined by the equation that Kc = 1/R, R is the ratio of the compressor, which always is interger. The format is 6.24. (2 : 1) </description>
                <bitRange>[13:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_HKE</name>
            <description>DAC DRC Expander Slope High Setting Register</description>
            <addressOffset>0x174</addressOffset>
            <resetValue>0x500</resetValue>
            <resetMask>0x3FFF</resetMask>
            <fields>
              <field>
                <name>EXPANDER_IS_DETERMINED_SLOPE</name>
                <description>The slope of the expander is determined by the equation that Ke = 1/R, R is the ratio of the expander, which always is interger and the ke must larger than 1/50. The format is 6.24. (1:5) </description>
                <bitRange>[13:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_HKN</name>
            <description>DAC DRC Linear Slope High Setting Register</description>
            <addressOffset>0x184</addressOffset>
            <resetValue>0x100</resetValue>
            <resetMask>0x3FFF</resetMask>
            <fields>
              <field>
                <name>LINEAR_SLOPE</name>
                <description>The slope of the linear is determined by the equation that Kn = 1/R, R is the ratio of the linear, which always is interger . The format is 6.24. (1:1) </description>
                <bitRange>[13:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_HKl</name>
            <description>DAC DRC Limiter Slope High Setting Register</description>
            <addressOffset>0x15C</addressOffset>
            <resetValue>0x5</resetValue>
            <resetMask>0x3FFF</resetMask>
            <fields>
              <field>
                <name>LIMITER_SLOPE</name>
                <description>The slope of the limiter is determined by the equation that Kl = 1/R, R is the ratio of the limiter, which always is interger. The format is 6.24. (50 :1) </description>
                <bitRange>[13:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_HLT</name>
            <description>DAC DRC Limiter Theshold High Setting Register</description>
            <addressOffset>0x154</addressOffset>
            <resetValue>0x1A9</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>LIMITER_THRESHOLD</name>
                <description>The limiter threshold setting is set by the equation that LTin = -LT/6.0206. The format is 8.24. (-10dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_HOPC</name>
            <description>DAC  DRC  Compressor  High  Output  at  Compressor  Threshold  Register</description>
            <addressOffset>0x14C</addressOffset>
            <resetValue>0xF95B</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>COMPRESSOR_OUTPUT</name>
                <description>The output of the compressor is determined by the equation -OPC/6.0206. The format is 8.24  (-40dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_HOPE</name>
            <description>DAC DRC Expander High Output at Expander Threshold</description>
            <addressOffset>0x17C</addressOffset>
            <resetValue>0xF45F</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>EXPANDER_OUTPUT</name>
                <description>The output of the expander is determined by equation OPE/6.0206. The format is 8.24  (-70dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_HOPL</name>
            <description>DAC DRC Limiter High Output at Limiter Threshold</description>
            <addressOffset>0x164</addressOffset>
            <resetValue>0xFBD8</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>LIMITER_OUTPUT</name>
                <description>The output of the limiter is determined by equation OPT/6.0206. The format is 8.24  (-25dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_HPFHGAIN</name>
            <description>DAC DRC HPF Gain High Coef Register</description>
            <addressOffset>0x1B8</addressOffset>
            <resetValue>0x100</resetValue>
            <resetMask>0x7FF</resetMask>
            <fields>
              <field>
                <name>HPF_GAIN</name>
                <description>The gain of the HPF high coefficient setting . The format is 3.24.(gain = 1) </description>
                <bitRange>[10:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_HPFLGAIN</name>
            <description>DAC DRC HPF Gain Low Coef Register</description>
            <addressOffset>0x1BC</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>HPF_GAIN</name>
                <description>The gain of the HPF low coefficient setting.  The format is 3.24.(gain = 1) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_LCT</name>
            <description>DAC DRC Compressor Slope High Setting Register</description>
            <addressOffset>0x140</addressOffset>
            <resetValue>0xD3C0</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>COMPRESSOR_THRESHOLD</name>
                <description>The compressor threshold setting is set by the equation that CTin = -CT/6.0206. The format is 8.24  (-40dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_LET</name>
            <description>DAC DRC Expander Theshold Low Setting Register</description>
            <addressOffset>0x170</addressOffset>
            <resetValue>0x7291</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>EXPANDER_THRESHOLD</name>
                <description>The expander threshold setting is set by the equation that ETin = -ET/6.0206. The format is 8.24. (-70dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_LHPFC</name>
            <description>DAC DRC Low HPF Coef Register</description>
            <addressOffset>0x104</addressOffset>
            <resetValue>0xFAC1</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>HPF</name>
                <description>coefficient setting and the data is 3.24 format. </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_LKC</name>
            <description>DAC DRC Compressor Slope Low Setting Register</description>
            <addressOffset>0x148</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>COMPRESSOR_SLOPE</name>
                <description>The slope of the compressor is determined by the equation that Kc = 1/R, R is the ratio of the compressor, which always is interger. The format is 6.24. (2 : 1) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_LKE</name>
            <description>DAC DRC Expander Slope Low Setting Register</description>
            <addressOffset>0x178</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>EXPANDER_SLOPE</name>
                <description>The slope of the expander is determined by the equation that Ke = 1/R, R is the ratio of the expander, which always is interger and the ke must larger than 1/50. The format is 6.24. (1:5) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_LKN</name>
            <description>DAC DRC Linear Slope Low Setting Register</description>
            <addressOffset>0x188</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>LINEAR_SLOPE</name>
                <description>The slope of the linear is determined by the equation that Kn = 1/R, R is the ratio of the linear, which always is interger . The format is 6.24. (1:1) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_LKl</name>
            <description>DAC DRC Limiter Slope Low Setting Register</description>
            <addressOffset>0x160</addressOffset>
            <resetValue>0x1EB8</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>LIMITER_SLOPE</name>
                <description>The slope of the limiter is determined by the equation that Kl = 1/R, R is the ratio of the limiter, which always is interger. The format is 6.24. (50 :1) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_LLT</name>
            <description>DAC DRC Limiter Theshold Low Setting Register</description>
            <addressOffset>0x158</addressOffset>
            <resetValue>0x34F0</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>LIMITER_THRESHOLD</name>
                <description>The limiter threshold setting is set by the equation that LTin = -LT/6.0206.The format is 8.24. (-10dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_LOPC</name>
            <description>DAC  DRC  Compressor  Low  Output  at  Compressor  Threshold  Register</description>
            <addressOffset>0x150</addressOffset>
            <resetValue>0x2C3F</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>COMPRESSOR_OUTPUT</name>
                <description>The output of the compressor is determined by the equation OPC/6.0206. The format is 8.24  (-40dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_LOPE</name>
            <description>DAC DRC Expander Low Output at Expander Threshold</description>
            <addressOffset>0x180</addressOffset>
            <resetValue>0x8D6E</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>EXPANDER_OUTPUT</name>
                <description>The output of the expander is determined by equation OPE/6.0206. The format is 8.24  (-70dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_LOPL</name>
            <description>DAC DRC Limiter Low Output at Limiter Threshold</description>
            <addressOffset>0x168</addressOffset>
            <resetValue>0xFBA7</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>LIMITER_OUTPUT</name>
                <description>The output of the limiter is determined by equation OPT/6.0206. The format is 8.24  (-25dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_LPFHAT</name>
            <description>DAC DRC Left Peak Filter High Attack Time Coef Register</description>
            <addressOffset>0x10C</addressOffset>
            <resetValue>0xB</resetValue>
            <resetMask>0x7FF</resetMask>
            <fields>
              <field>
                <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
                <description>The left peak filter attack time parameter setting, which is determined by the equation that AT = 1-exp(-2.2Ts/ta). The format is 3.24.   (1ms)  </description>
                <bitRange>[10:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_LPFHRT</name>
            <description>DAC DRC Left Peak Filter High Release Time Coef Register</description>
            <addressOffset>0x11C</addressOffset>
            <resetValue>0xFF</resetValue>
            <resetMask>0x7FF</resetMask>
            <fields>
              <field>
                <name>LEFT_PEAK_FILTER_RELEASE_TIME</name>
                <description>The left peak filter release time parameter setting, which is determined by the equation that RT = exp(-2.2Ts/tr). The format is 3.24.   (100ms) </description>
                <bitRange>[10:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_LPFLAT</name>
            <description>DAC DRC Left Peak Filter Low Attack Time Coef Register</description>
            <addressOffset>0x110</addressOffset>
            <resetValue>0x77BF</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
                <description>The left peak filter attack time parameter setting, which is determined by the equation that AT = 1-exp(-2.2Ts/ta). The format is 3.24.   (1ms) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_LPFLRT</name>
            <description>DAC DRC Left Peak Filter Low Release Time Coef Register</description>
            <addressOffset>0x120</addressOffset>
            <resetValue>0xE1F8</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>LEFT_PEAK_FILTER_RELEASE_TIME</name>
                <description>The left peak filter release time parameter setting, which is determined by the equation that RT = exp(-2.2Ts/tr). The format is 3.24.   (100ms) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_LRMSHAT</name>
            <description>DAC DRC Left RMS Filter High Coef Register</description>
            <addressOffset>0x12C</addressOffset>
            <resetValue>0x1</resetValue>
            <resetMask>0x7FF</resetMask>
            <fields>
              <field>
                <name>LEFT_RMS_FILTER_AVERAGE_TIME</name>
                <description>The left RMS filter average time parameter setting, which is determined by the equation that AT = 1-exp(-2.2Ts/tav). The format is 3.24.    (10ms) </description>
                <bitRange>[10:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_LRMSLAT</name>
            <description>DAC DRC Left RMS Filter Low Coef Register</description>
            <addressOffset>0x130</addressOffset>
            <resetValue>0x2BAF</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>LEFT_RMS_FILTER_AVERAGE_TIME</name>
                <description>The left RMS filter average time parameter setting, which is determined by the equation that AT = 1-exp(-2.2Ts/tav). The format is 3.24.   (10ms) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_MNGHS</name>
            <description>DAC DRC MIN Gain High Setting Register</description>
            <addressOffset>0x1A4</addressOffset>
            <resetValue>0xF95B</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>MINIMUM_GAIN</name>
                <description>The minimum gain setting is determined by equation MXG/6.0206. The format is 8.24 and must -60dB MNG -30dB (-40dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_MNGLS</name>
            <description>DAC DRC MIN Gain Low Setting Register</description>
            <addressOffset>0x1A8</addressOffset>
            <resetValue>0x2C3F</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>MINIMUM_GAIN</name>
                <description>The minimum gain setting is determined by equation MNG/6.0206. The format is 8.24 and must -60dB MNG -30dB (-40dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_MXGHS</name>
            <description>DAC DRC MAX Gain High Setting Register</description>
            <addressOffset>0x19C</addressOffset>
            <resetValue>0xFE56</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>MAXIMUM_GAIN</name>
                <description>The maximum gain setting is determined by equation MXG/6.0206. The format is 8.24 and must -20dB &lt;MXG&lt; 30dB (-10dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_MXGLS</name>
            <description>DAC DRC MAX Gain Low Setting Register</description>
            <addressOffset>0x1A0</addressOffset>
            <resetValue>0xCB0F</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>MAXIMUM_GAIN</name>
                <description>The maximum gain setting is determined by equation MXG/6.0206. The format is 8.24 and must -20dB &lt;MXG &lt; 30dB (-10dB) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_RPFHAT</name>
            <description>DAC DRC Right Peak Filter High Attack Time Coef Register</description>
            <addressOffset>0x114</addressOffset>
            <resetValue>0xB</resetValue>
            <resetMask>0x7FF</resetMask>
            <fields>
              <field>
                <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
                <description>The left peak filter attack time parameter setting, which is determined by the equation that AT = 1-exp(-2.2Ts/ta). The format is 3.24.   (1ms) </description>
                <bitRange>[10:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_RPFHRT</name>
            <description>DAC DRC Right Peak filter High Release Time Coef Register</description>
            <addressOffset>0x124</addressOffset>
            <resetValue>0xFF</resetValue>
            <resetMask>0x7FF</resetMask>
            <fields>
              <field>
                <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
                <description>The left peak filter attack time parameter setting, which is determined by the equation that RT = exp(-2.2Ts/tr). The format is 3.24.   (100ms) </description>
                <bitRange>[10:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_RPFLAT</name>
            <description>DAC DRC Peak Filter Low Attack Time Coef Register</description>
            <addressOffset>0x118</addressOffset>
            <resetValue>0x77BF</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>LEFT_PEAK_FILTER_ATTACK_TIME</name>
                <description>The left peak filter attack time parameter setting, which is determined by the equation that AT = 1-exp(-2.2Ts/ta). The format is 3.24.   (1ms) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_RPFLRT</name>
            <description>DAC DRC Right Peak filter Low Release Time Coef Register</description>
            <addressOffset>0x128</addressOffset>
            <resetValue>0xE1F8</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>LEFT_PEAK_FILTER_RELEASE_TIME</name>
                <description>The left peak filter release time parameter setting, which is determined by the equation that AT = exp(-2.2Ts/tr). The format is 3.24.   (100ms) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_RRMSHAT</name>
            <description>DAC DRC Right RMS Filter High Coef Register</description>
            <addressOffset>0x134</addressOffset>
            <resetValue>0x1</resetValue>
            <resetMask>0x7FF</resetMask>
            <fields>
              <field>
                <name>RIGHT_RMS_FILTER_AVERAGE_TIME</name>
                <description>The right RMS filter average time parameter setting, which is determined by the equation that AT = 1-exp(-2.2Ts/tav). The format is 3.24.    (10ms) </description>
                <bitRange>[10:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_RRMSLAT</name>
            <description>DAC DRC Right RMS Filter Low Coef Register</description>
            <addressOffset>0x138</addressOffset>
            <resetValue>0x2BAF</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>RIGHT_RMS_FILTER_AVERAGE_TIME</name>
                <description>The right RMS filter average time parameter setting, which is determined by the equation that AT = 1-exp(-2.2Ts/tav). The format is 3.24.   (10ms) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_SFHAT</name>
            <description>DAC DRC Smooth Filter Gain High Attack Time Coef Register</description>
            <addressOffset>0x18C</addressOffset>
            <resetValue>0x2</resetValue>
            <resetMask>0x7FF</resetMask>
            <fields>
              <field>
                <name>SMOOTH_FILTER_ATTACK_TIME</name>
                <description>The smooth filter attack time parameter setting,which is determined by the equation that AT = 1-exp(-2.2Ts/tr). The format is 3.24. (5ms) </description>
                <bitRange>[10:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_SFHRT</name>
            <description>DAC DRC Smooth Filter Gain High Release Time Coef Register</description>
            <addressOffset>0x194</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x7FF</resetMask>
            <fields>
              <field>
                <name>GAIN_SMOOTH_FILTER_RELEASE_TIME</name>
                <description>The gain smooth filter release time parameter setting is determined by the equation that RT = 1-exp(-2.2Ts/tr). The format is 3.24. (200ms) </description>
                <bitRange>[10:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_SFLAT</name>
            <description>DAC DRC Smooth Filter Gain Low Attack Time Coef Register</description>
            <addressOffset>0x190</addressOffset>
            <resetValue>0x5600</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>SMOOTH_FILTER_ATTACK_TIME</name>
                <description>The smooth filter attack time parameter setting,which is determined by the equation that AT = 1-exp(-2.2Ts/tr). The format is 3.24. (5ms) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_DRC_SFLRT</name>
            <description>DAC DRC Smooth Filter Gain Low Release Time Coef Register</description>
            <addressOffset>0x198</addressOffset>
            <resetValue>0xF04</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>GAIN_SMOOTH_FILTER_RELEASE_TIME</name>
                <description>The gain smooth filter release time parameter setting is determined by the equation that RT = 1-exp(-2.2Ts/tr). The format is 3.24. (200ms) </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_FIFOC</name>
            <description>DAC FIFO Control Register</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x4000</resetValue>
            <resetMask>0xF7607FFF</resetMask>
            <fields>
              <field>
                <name>DAC_FS</name>
                <description>Sample Rate Of DAC  
000: 48KHz  
010: 24KHz  
100: 12KHz  
110: 192KHz 
001: 32KHz  
011: 16KHz  
101: 8KHz  
111: 96KHz  44.1KHz/22.05KHz/11.025KHz can be supported by Audio PLL Configure Bit </description>
                <bitRange>[31:29]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_48KHz</name>
                    <description>48KHz</description>
                    <value>0b000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_24KHz</name>
                    <description>24KHz</description>
                    <value>0b010</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_12KHz</name>
                    <description>12KHz</description>
                    <value>0b100</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_192KHz</name>
                    <description>192KHz</description>
                    <value>0b110</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_32KHz</name>
                    <description>32KHz</description>
                    <value>0b001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_16KHz</name>
                    <description>16KHz</description>
                    <value>0b011</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_8KHz</name>
                    <description>8KHz</description>
                    <value>0b101</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_96KHz</name>
                    <description>96KHz  44.1KHz/22.05KHz/11.025KHz can be supported by Audio PLL Configure Bit</description>
                    <value>0b111</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>FIR_VER</name>
                <description>FIR Version  
0: 64-Tap FIR 
1: 32-Tap FIR </description>
                <bitRange>[28:28]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_64_minus_Tap</name>
                    <description>64-Tap FIR</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_32_minus_Tap</name>
                    <description>32-Tap FIR</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>SEND_LASAT</name>
                <description>Audio sample select when TX FIFO underrun  
0: Sending zero 
1: Sending last audio sample </description>
                <bitRange>[26:26]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Sending_zero</name>
                    <description>Sending zero</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Sending_last</name>
                    <description>Sending last audio sample</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>FIFO_MODE</name>
                <description>For 24-bit transmitted audio sample: 00,10: FIFO_I[23:0] = {TXDATA[31:8]} 01,11: Reserved  For 16-bit transmitted audio sample: , : FIFO_I[ : ] = {TXDATA[ : ], }  , : FIFO_I[ : ] = {TXDATA[ : ], } </description>
                <bitRange>[25:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>DAC_DRQ_CLR_CNT</name>
                <description>When TX FIFO Available Room is less than or equal N, DRQ Request will be de-asserted. N is defined here:   
00: IRQ/DRQ de-asserted When WLEVEL &gt; TXTL 
01: 4 
10: 8 
11: 16 </description>
                <bitRange>[22:21]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>IRQ_slash_DRQ</name>
                    <description>IRQ/DRQ de-asserted When WLEVEL &gt; TXTL</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_4</name>
                    <description>4</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_8</name>
                    <description>8</description>
                    <value>0b10</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_16</name>
                    <description>16</description>
                    <value>0b11</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TX_TRIG_LEVEL</name>
                <description>TX FIFO Empty Trigger Level (TXTL[12:0]) Interrupt and DMA request trigger level for TX FIFO normal condition. IRQ/DRQ ge e ated he WLEVEL &lt;= TXTL   Note: (1). WLEVEL represents the number of valid samples in the TX FIFO (2). Only TXTL[6:0] valid when TXMODE = 0 </description>
                <bitRange>[14:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>ADDA_LOOP_EN</name>
                <description>ADDA Loop Enable  
0: Disable 
1: Enable </description>
                <bitRange>[7:7]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DAC_MONO_EN</name>
                <description>DAC Mono Enable 
0: Stereo, 64 Levels FIFO 
1: Mono, 128 Levels FIFO When Enabled, L &amp; R Channel Send Same Data </description>
                <bitRange>[6:6]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Stereo</name>
                    <description>Stereo, 64 Levels FIFO</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Mono</name>
                    <description>Mono, 128 Levels FIFO When Enabled, L &amp; R Channel Send Same Data</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TX_SAMPLE_BITS</name>
                <description>Transmitting Audio Sample Resolution  
0: 16 bits 
1: 24 bits </description>
                <bitRange>[5:5]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_16_bits</name>
                    <description>16 bits</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_24_bits</name>
                    <description>24 bits</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DAC_DRQ_EN</name>
                <description>DAC FIFO Empty DRQ Enable  
0: Disable 
1: Enable </description>
                <bitRange>[4:4]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DAC_IRQ_EN</name>
                <description>DAC FIFO Empty IRQ Enable  
0: Disable 
1: Enable </description>
                <bitRange>[3:3]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>FIFO_UNDERRUN_IRQ_EN</name>
                <description>DAC FIFO Underrun IRQ Enable  
0: Disable 
1: Enable </description>
                <bitRange>[2:2]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>FIFO_OVERRUN_IRQ_EN</name>
                <description>DAC FIFO Overrun IRQ Enable  
0: Disable 
1: Enable </description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>FIFO_FLUSH</name>
                <description>DAC FIFO Flush W ite  to flush TX FIFO, S elf lea to  </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_FIFOS</name>
            <description>DAC FIFO Status Register</description>
            <addressOffset>0x8</addressOffset>
            <resetValue>0x808008</resetValue>
            <resetMask>0xFFFF0E</resetMask>
            <fields>
              <field>
                <name>TX_EMPTY</name>
                <description>TX FIFO Empty  
0: No room for new sample in TX FIFO 
1: More than one room for new sample in TX FIFO (&gt;= 1 word) </description>
                <bitRange>[23:23]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_room</name>
                    <description>No room for new sample in TX FIFO</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>More</name>
                    <description>More than one room for new sample in TX FIFO (&gt;= 1 word)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXE_CNT</name>
                <description>TX FIFO Empty Space Word Counter </description>
                <bitRange>[22:8]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>TXE_INT</name>
                <description>TX FIFO Empty Pending Interrupt  
0: No Pending IRQ 
1: FIFO Empty Pending Interrupt  W ite  to lea this i te upt o auto ati all  lea if i te upt o ditio  fails </description>
                <bitRange>[3:3]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_Pending</name>
                    <description>No Pending IRQ</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>FIFO</name>
                    <description>FIFO Empty Pending Interrupt  W ite  to lea this i te upt o auto ati all  lea if i te upt o ditio  fails</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXU_INT</name>
                <description>TX FIFO Underrun Pending Interrupt  
0: No Pending Interrupt 
1: FIFO Underrun Pending Interrupt  Write  to lea this i te upt </description>
                <bitRange>[2:2]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_Pending</name>
                    <description>No Pending Interrupt</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>FIFO</name>
                    <description>FIFO Underrun Pending Interrupt  Write  to lea this i te upt</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TXO_INT</name>
                <description>TX FIFO Overrun Pending Interrupt  
0: No Pending Interrupt 
1: FIFO Overrun Pending Interrupt  W ite  to lea this i te upt </description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_Pending</name>
                    <description>No Pending Interrupt</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>FIFO</name>
                    <description>FIFO Overrun Pending Interrupt  W ite  to lea this i te upt</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>AC_DAC_TXDATA</name>
            <description>DAC TX Data Register</description>
            <addressOffset>0x20</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>TX_DATA</name>
                <description>Transmitting left, right channel sample data should be written this register one by one. The left channel sample data is first and then the right channel sample.</description>
                <bitRange>[31:0]</bitRange>
                <access>write-only</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>AC_ADC_DAP_OPT</name>
          <description>AC_ADC_DAP_OPT</description>
          <addressOffset>0x9C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x737</resetMask>
          <fields>
            <field>
              <name>LEFT_ENERGY_DEFAULT_VALUE</name>
              <description>Left Energy Default Value Setting (include the input and output)  
0: Min 
1: Max </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Min</name>
                  <description>Min</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Max</name>
                  <description>Max</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LEFT_CHANNEL_GAIN_HYSTERSIS</name>
              <description>Left Channel Gain Hystersis Setting. The different between target level and the signal level must larger than the hystersis when the gain changed.   
00: 0.4375dB 
01: 0.9375dB 
10: 1.9375dB 
11: 3dB </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0_point_4375dB</name>
                  <description>0.4375dB</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_9375dB</name>
                  <description>0.9375dB</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_9375dB</name>
                  <description>1.9375dB</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3dB</name>
                  <description>3dB</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INPUT_SIGNAL_AVERAGE_FILTER_COEFFICIENT</name>
              <description>Input Signal Average Filter Coefficient Setting   
0: The reg94/reg98 
1: The reg80/reg88 </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>reg94_slash_reg98</name>
                  <description>The reg94/reg98</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>reg80_slash_reg88</name>
                  <description>The reg80/reg88</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AGC_OUTPUT_WHEN_THE_CHANNEL</name>
              <description>AGC Output when the Channel in Noise State  
0: Output is zero 
1: Output is the input data </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>zero</name>
                  <description>Output is zero</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>the_input</name>
                  <description>Output is the input data</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RIGHT_ENERGY_DEFAULT_VALUE</name>
              <description>Right Energy Default Value Setting (include the input and output)  0 : Min 1 : Max </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RIGHT_CHANNEL_GAIN_HYSTERESIS</name>
              <description>Right Channel Gain Hysteresis Setting. The different between target level and the signal level must larger than the hysteresis when the gain changed.   00 : 0.4375dB 01 : 0.9375dB 10 : 1.9375dB 11 : 3dB </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DAP_RNAC</name>
          <description>AC_ADC_DAP_RNAC</description>
          <addressOffset>0x98</addressOffset>
          <resetValue>0x51EB8</resetValue>
          <resetMask>0x7FFFFFF</resetMask>
          <fields>
            <field>
              <name>ADAP_RINAC</name>
              <description>Right input signal average filter coefficient to check noise or not (the coefficientis 3.24 format 2s complement) always the same as the left output signal average filter's.</description>
              <bitRange>[26:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AC_ADC_DRC_MNGHS</name>
          <description>AC_ADC_DRC_MNGHS</description>
          <addressOffset>0x2A4</addressOffset>
          <resetValue>0xF95B</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>MIN_GAIN</name>
              <description>The min gain setting is determined by equation MXG/6.0206. The format is 8.24 and must -60dB MNG  -30dB  (-40dB) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADC_AP_EN</name>
          <description>ADC_AP_EN</description>
          <addressOffset>0xF</addressOffset>
          <resetValue>0x3</resetValue>
          <resetMask>0xC7</resetMask>
          <fields>
            <field>
              <name>ADCREN</name>
              <description>ADC Right Channel Enable  
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADCLEN</name>
              <description>ADC Left Channel Enable  
0: Disable 
1: Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADCG</name>
              <description>ADC Input Gain Control From -4.5dB to 6dB, 1.5dB/step . The default is 0dB </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADDA_APT0</name>
          <description>ADDA_APT0</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x55</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>OPDRV_OPCOM_CUR</name>
              <description>OPDRV/OPCOM output stage current setting </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OPADC1_BIAS_CUR</name>
              <description>OPADC1 Bias Current Select </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OPADC2_BIAS_CUR</name>
              <description>OPADC2 Bias Current Select </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OPAAF_BIAS_CUR</name>
              <description>OPAAF in ADC Bias Current Select </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADDA_APT1</name>
          <description>ADDA_APT1</description>
          <addressOffset>0x11</addressOffset>
          <resetValue>0x45</resetValue>
          <resetMask>0xCF</resetMask>
          <fields>
            <field>
              <name>OPMIC_BIAS_CUR</name>
              <description>OPMIC Bias Current Control </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OPDAC_BIAS_CUR</name>
              <description>OPDAC Bias Current Control </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OPMIX_BIAS_CUR</name>
              <description>OPMIX/OPLPF Bias Current Control </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADDA_APT2</name>
          <description>ADDA_APT2</description>
          <addressOffset>0x12</addressOffset>
          <resetValue>0x42</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FUNCTION_ENABLE</name>
              <description>Function enable for master volume change at zero cross over  
0: Disable   
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIMEOUT_CONTROL</name>
              <description>Timeout control for master volume change at zero cross over  
0: 32ms    
1: 64ms </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_32ms</name>
                  <description>32ms</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64ms</name>
                  <description>64ms</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PTDBS_HPCOM_PROTECT</name>
              <description>PTDBS HPCOM protect de-bounce time setting  
00: 2-3ms  
01: 4-6ms  
10: 8-12ms 
11: 16-24ms  At the same time, bit 17 is used to control the AVCCPORFLAG, writing 1 to this bit, the flag will be cleared, and the calibration is done again. </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2_minus_3ms</name>
                  <description>2-3ms</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_minus_6ms</name>
                  <description>4-6ms</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_minus_12ms</name>
                  <description>8-12ms</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_minus_24ms</name>
                  <description>16-24ms  At the same time, bit 17 is used to control the AVCCPORFLAG, writing 1 to this bit, the flag will be cleared, and the calibration is done again.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PA_SLOPE_SELECT_PA_SLOPE</name>
              <description>PA_SLOPE_SELECT PA slope select cosine or ramp  
0: Select cosine 
1: Select ramp </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select_cosine</name>
                  <description>Select cosine</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select_ramp</name>
                  <description>Select ramp</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB_BIAS_CUR</name>
              <description>USB_BIAS_CUR. USB bias current tuning From 23uA to 30uA, the default value is 25uA </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BIASCALI</name>
          <description>BIASCALI</description>
          <addressOffset>0x17</addressOffset>
          <resetValue>0x20</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>BIASCALI</name>
              <description>Bias Calibration Data, 6bit </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BIASVERIFY</name>
          <description>BIASVERIFY</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x20</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>BIASVERIFY</name>
              <description>Bias Register Setting Data, 6bit </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Bias_DA16_CAL_CTR0</name>
          <description>Bias_DA16_CAL_CTR0</description>
          <addressOffset>0x13</addressOffset>
          <resetValue>0xD6</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>MMIC_BIAS_CHOPPER_ENABLE</name>
              <description>MMIC BIAS Chopper Enable  
0: Disable   
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MMIC_BIAS_CHOPPER_CLOCK</name>
              <description>MMIC BIAS Chopper Clock Select  
00: 250KHz   
01: 500KHz   
10: 1MHz   
11: 2MHz </description>
              <bitRange>[6:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_250KHz</name>
                  <description>250KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_500KHz</name>
                  <description>500KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1MHz</name>
                  <description>1MHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2MHz</name>
                  <description>2MHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DITHER_ADC_DITHER_ON/OFF</name>
              <description>DITHER ADC Dither on/off Control  
0: Dither off   
1: Dither on </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Dither_off</name>
                  <description>Dither off</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Dither_on</name>
                  <description>Dither on</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DITHER_CLK_SELECT_ADC_DITHER_CLOCK</name>
              <description>DITHER_CLK_SELECT ADC Dither Clock Select  
00: ADC FS * (8/9), about 43KHz when FS=48KHz 
01: ADC FS * (16/15), about 51KHz when FS=48KHz 
10: ADC FS * (4/3), about 64KHz when FS=48KHz 
11: ADC FS * (16/9), about 85KHz when FS=48KHz </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ADC_FS__times___openingparen_8_slash_9_closingparen_</name>
                  <description>ADC FS * (8/9), about 43KHz when FS=48KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC_FS__times___openingparen_16_slash_15_closingparen_</name>
                  <description>ADC FS * (16/15), about 51KHz when FS=48KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC_FS__times___openingparen_4_slash_3_closingparen_</name>
                  <description>ADC FS * (4/3), about 64KHz when FS=48KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ADC_FS__times___openingparen_16_slash_9_closingparen_</name>
                  <description>ADC FS * (16/9), about 85KHz when FS=48KHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BIHE_CTRL_BIHE_CONTROL</name>
              <description>BIHE_CTRL BIHE Control  
00: No BIHE 
01: BIHE=7.5 HOSC 
10: BIHE=11.5 HOSC 
11: BIHE=15.5 HOSC </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_BIHE</name>
                  <description>No BIHE</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BIHE_equals_7_point_5</name>
                  <description>BIHE=7.5 HOSC</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BIHE_equals_11_point_5</name>
                  <description>BIHE=11.5 HOSC</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BIHE_equals_15_point_5</name>
                  <description>BIHE=15.5 HOSC</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>Bias_DA16_CAL_CTR1</name>
          <description>Bias_DA16_CAL_CTR1</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>PA_SPEED_SELECT_PA_SETUP_SPEED_CONTROL</name>
              <description>PA_SPEED_SELECT PA Setup Speed Control (for testing)  
0: Slow  
1: Fast </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Slow</name>
                  <description>Slow</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Fast</name>
                  <description>Fast</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CURRENT_TEST_SELECT_INTERNAL_CURRENT_SINK_TEST</name>
              <description>CURRENT_TEST_SELECT Internal Current Sink Test Enable (from LINEIN pin)  
0: Normal 
1: For Debug </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>For</name>
                  <description>For Debug</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BIAS_AND_DA16_CALIBRATION_CLOCK</name>
              <description>BIAS and DA16 Calibration Clock Select  
0: 1KHz  
1: 500Hz </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1KHz</name>
                  <description>1KHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_500Hz</name>
                  <description>500Hz</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BIAS_CALIBRATION_MODE_SELECT</name>
              <description>BIAS Calibration Mode Select  
0: Average   
1: Single </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Average</name>
                  <description>Average</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Single</name>
                  <description>Single</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BIAS_AND_DA16_CALIBRATION_CONTROL</name>
              <description>BIAS and DA16 Calibration Control Write 1 to this bit, the calibration will be done again. Then this bit will reset to zero automatically </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIASCALIVERIFY_BIAS_CALIBRATION_VERIFY</name>
              <description>BIASCALIVERIFY Bias Calibration Verify  
0: Calibration 
1: Register setting </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Calibration</name>
                  <description>Calibration</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Register</name>
                  <description>Register setting</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DA16CALIVERIFY_DA16_CALIBRATION_VERIFY</name>
              <description>DA16CALIVERIFY DA16 Calibration Verify  
0: Calibration  
1: Register setting </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Calibration</name>
                  <description>Calibration</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Register</name>
                  <description>Register setting</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DA16CALI</name>
          <description>DA16CALI</description>
          <addressOffset>0x15</addressOffset>
          <resetValue>0x80</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DA16CALI</name>
              <description>DA16 Calibration Data </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DA16VERIFY</name>
          <description>DA16VERIFY</description>
          <addressOffset>0x16</addressOffset>
          <resetValue>0x80</resetValue>
          <resetMask>0xFF</resetMask>
          <fields/>
        </register>
        <register>
          <name>DAC_PA_SRC</name>
          <description>DAC_PA_SRC</description>
          <addressOffset>0x3</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF0</resetMask>
          <fields>
            <field>
              <name>DACAREN</name>
              <description>Internal Analog Right Channel DAC Enable  0:Disable  1:Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DACALEN</name>
              <description>Internal Analog Left Channel DAC Enable   0:Disable  1:Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RMIXEN</name>
              <description>Right Analog Output Mixer Enable  0:Disable  1:Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LMIXEN</name>
              <description>Left Analog Output Mixer Enable  0:Disable  1:Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LADCMIXSC</name>
          <description>LADCMIXSC</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RADCMIXMUTE</name>
              <description>Right ADC Mixer Mute Control  
0: Mute  
1: Not Mute  Bit 6: MIC1 Boost Stage Bit 5: MIC2 Boost Stage Bit 4: / Bit 3:/ Bit 2: LINEINL Bit 1: Left Output Mixer Bit 0: Right Output Mixer </description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LINEIN_GCTR</name>
          <description>LINEIN_GCTR</description>
          <addressOffset>0x5</addressOffset>
          <resetValue>0x30</resetValue>
          <resetMask>0x70</resetMask>
          <fields>
            <field>
              <name>LINEING</name>
              <description>LINEINL/R to L/R output mixer gain control From -4.5dB to 6dB, 1.5dB/step, default is 0dB </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LINEOUT_PA_GAT</name>
          <description>LINEOUT_PA_GAT</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80</resetMask>
          <fields>
            <field>
              <name>PA</name>
              <description>clock gating control When system VDD is off and Audio analog channel is working.The bit must be set to 1, because the PA clock come from system VDD domain. When this bit is 1, the Zero cross over function will be disabled automatically.  
0: Not gating  
1: Gating </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_gating</name>
                  <description>Not gating</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Gating</name>
                  <description>Gating</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>LINEOUT_VOLC</name>
          <description>LINEOUT_VOLC</description>
          <addressOffset>0x9</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF8</resetMask>
          <fields>
            <field>
              <name>LINEOUTVOL</name>
              <description>Line-out Volume Control. Total 31 level, from 0dB to -48dB, 1.5dB/step, mute when 00000 &amp; 00001 </description>
              <bitRange>[7:3]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOMIXSC</name>
          <description>LOMIXSC</description>
          <addressOffset>0x1</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>LMIXMUTE</name>
              <description>Left Output Mixer Mute Control  0:Mute 1:Not Mute  Bit 6: MIC1 Boost Stage Bit 5: MIC2 Boost Stage Bit 4: / Bit 3: / Bit 2: LINEINL Bit 1: Left Channel DAC Bit 0: Right Channel DAC </description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MIC1G_MICBAIS_CTR</name>
          <description>MIC1G_MICBAIS_CTR</description>
          <addressOffset>0xB</addressOffset>
          <resetValue>0x4</resetValue>
          <resetMask>0x4F</resetMask>
          <fields>
            <field>
              <name>MMICBIASEN</name>
              <description>Master Microphone Bias Enable  
0: Disable  
1: Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MIC1AMPEN</name>
              <description>MIC1 Boost AMP Enable  
0: Disable  
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MIC1BOOST</name>
              <description>MIC1 Boost AMP Gain Control  
000: 0dB 001~111: 24dB to 42dB(3dB/step) The default is 33dB </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0dB</name>
                  <description>0dB 001~111: 24dB to 42dB(3dB/step) The default is 33dB</description>
                  <value>0b000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MIC2G_LINEOUT_CTR</name>
          <description>MIC2G_LINEOUT_CTR</description>
          <addressOffset>0xA</addressOffset>
          <resetValue>0x40</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>MIC2AMPEN_MIC2</name>
              <description>MIC2AMPEN MIC2 Boost AMP Enable  
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MIC2BOOST_MIC2</name>
              <description>MIC2BOOST MIC2 Boost AMP Gain Control  
000: 0dB 001~111: 24dB to 42dB(3dB/step) The default is 33dB </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0dB</name>
                  <description>0dB 001~111: 24dB to 42dB(3dB/step) The default is 33dB</description>
                  <value>0b000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LINE_OUT_LEFT</name>
              <description>Line-out Left Select  
0: Not select 
1: Select </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_select</name>
                  <description>Not select</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select</name>
                  <description>Select</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LINE_OUT_RIGHT</name>
              <description>Line-out Right Select  
0: Not select 
1: Select </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_select</name>
                  <description>Not select</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select</name>
                  <description>Select</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LEFT_LINE_OUT</name>
              <description>Left Line-out Source Select  
0: Left output mixer 
1: Left output mixer + right output mixer </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RIGHT_LINE_OUT</name>
              <description>Right Line-out Source Select  
0: Right output mixer 
1: Left line-out, for differential output </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Right</name>
                  <description>Right output mixer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Left</name>
                  <description>Left line-out, for differential output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MIC_GCTR</name>
          <description>MIC_GCTR</description>
          <addressOffset>0x6</addressOffset>
          <resetValue>0x33</resetValue>
          <resetMask>0x77</resetMask>
          <fields>
            <field>
              <name>MIC1_GAIN</name>
              <description>MIC1 BOOST stage to L or R output mixer gain control From -4.5dB to 6dB, 1.5dB/step, default is 0dB </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MIC2G</name>
              <description>MIC2G, (volm2) MIC2 BOOST stage to L or R output mixer gain control From -4.5dB to 6dB, 1.5dB/step, default is 0dB  </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PAEN_CTR</name>
          <description>PAEN_CTR</description>
          <addressOffset>0x7</addressOffset>
          <resetValue>0x4</resetValue>
          <resetMask>0x8C</resetMask>
          <fields>
            <field>
              <name>LINEOUTEN</name>
              <description>Right &amp; Left LINEOUT Enable  0:Disable 1:Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_ANTI_POP_CTRL</name>
              <description>(slopelengthsel) PA Anti-Pop Time Control  00:131ms   
01: 262ms  
10: 393ms  11:524ms </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_262ms</name>
                  <description>262ms</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_393ms</name>
                  <description>393ms</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_524ms</name>
                  <description>524ms</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RADCMIXSC</name>
          <description>RADCMIXSC</description>
          <addressOffset>0xD</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RADCMIXMUTE</name>
              <description>Right ADC Mixer Mute Control  
0: Mute  
1: Not Mute  Bit 6: MIC1 Boost Stage Bit 5: MIC2 Boost Stage Bit 4: / Bit 3:/ Bit 2: LINEINR Bit 1: Right Output Mixer Bit 0: Left Output Mixer </description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ROMIXSC</name>
          <description>ROMIXSC</description>
          <addressOffset>0x2</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RMIXMUTE</name>
              <description>Right Output Mixer Mute Control  
0: Mute  
1: Not Mute  Bit 6: MIC1 Boost Stage Bit 5: MIC2 Boost Stage Bit 4: / Bit 3: / Bit 2: LINEINR Bit 1: Right Channel DAC Bit 0: Left Channel DAC </description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>Res_Reg</name>
          <description>Res_Reg</description>
          <addressOffset>0xE</addressOffset>
          <resetValue>0x4</resetValue>
          <resetMask>0x37</resetMask>
          <fields>
            <field>
              <name>MBIASSEL</name>
              <description>MMICBIAS Voltage Level Select  
00: 2.068V 
01: 2.299V 
10: 2.563V 
11: 2.73V </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2_point_068V</name>
                  <description>2.068V</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_point_299V</name>
                  <description>2.299V</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_point_563V</name>
                  <description>2.563V</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_point_73V</name>
                  <description>2.73V</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PA_ANTI_POP</name>
              <description>PA ANTI-POP Time Control  
000: 131ms 
001: 262ms 
010: 393ms 
011: 524ms 
100: 655ms 
101: 786ms 
110: 917ms 
111: 1048ms </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_131ms</name>
                  <description>131ms</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_262ms</name>
                  <description>262ms</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_393ms</name>
                  <description>393ms</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_524ms</name>
                  <description>524ms</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_655ms</name>
                  <description>655ms</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_786ms</name>
                  <description>786ms</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_917ms</name>
                  <description>917ms</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1048ms</name>
                  <description>1048ms</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CCU</name>
      <description>CCU</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C20000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>AC_DIG_CLK_REG</name>
          <description>AC Digital Clock Register</description>
          <addressOffset>0x140</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>SCLK_1X_GATING</name>
              <description>Gating Special Clock  
0: Clock is OFF 
1: Clock is ON  SCLK = PLL _AUDIO Output. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON  SCLK = PLL _AUDIO Output.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AHB1_APB1_CFG_REG</name>
          <description>AHB1/APB1 Configuration Register</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x1010</resetValue>
          <resetMask>0x33F0</resetMask>
          <fields>
            <field>
              <name>AHB1_CLK_SRC_SEL</name>
              <description>00: LOSC 
01: OSC24M 
10: AXI 
11: PLL_PERIPH0(1X)/ AHB1_PRE_DIV </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AXI</name>
                  <description>AXI</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen__slash_</name>
                  <description>PLL_PERIPH0(1X)/ AHB1_PRE_DIV</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>APB1_CLK_RATIO</name>
              <description>APB1 Clock Divide Ratio.  APB1 clock source is AHB1 clock.  
00: /2 
01: /2 
10: /4 
11: /8 </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AHB1_PRE_DIV</name>
              <description>AHB1 Clock Pre Divide Ratio   
00: /1 
01: /2 
10: /3 
11: /4 </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_3</name>
                  <description>/3</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AHB1_CLK_DIV_RATIO</name>
              <description>AHB1 Clock Divide Ratio.  
00: /1 
01: /2 
10: /4 
11: /8 </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AHB2_CFG_REG</name>
          <description>AHB2 Configuration Register</description>
          <addressOffset>0x5C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>AHB2_CLK_CFG</name>
              <description>00: AHB1 Clock 
01: PLL_PERIPH0(1X)/2 
1X: /  The default clock source of EMAC,USB HOST is AHB2 Clock. </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>AHB1</name>
                  <description>AHB1 Clock</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen__slash_2</name>
                  <description>PLL_PERIPH0(1X)/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/  The default clock source of EMAC,USB HOST is AHB2 Clock.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>APB2_CFG_REG</name>
          <description>APB2_CFG_REG</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x1000000</resetValue>
          <resetMask>0x303001F</resetMask>
          <fields>
            <field>
              <name>APB2_CLK_SRC_SEL</name>
              <description>APB2 Clock Source Select  
00: LOSC 
01: OSC24M 
1X: PLL_PERIPH0(1X)  This clock is used for some special module apbclk(UART TWI). Because these modules need special clock rate even if the apb1clk changed. </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH0(1X)  This clock is used for some special module apbclk(UART TWI). Because these modules need special clock rate even if the apb1clk changed.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_RAT_N</name>
              <description>Clock Pre Divide Ratio (n) The select clock source is pre-divided by 2^n.   
00: /1 
01: /2 
10: /4 
11: /8 </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_RAT_M</name>
              <description>Clock Divide Ratio (m) The Pre Divide clock is divided by (m+1). The divider M is from 1 to 32. </description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AVS_CLK_REG</name>
          <description>AVS Clock Register</description>
          <addressOffset>0x144</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock  
0: Clock is OFF 
1: Clock is ON.  SCLK= OSC24M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.  SCLK= OSC24M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_CLK_GATING_REG0</name>
          <description>Bus Clock Gating Register 0</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFBE6760</resetMask>
          <fields>
            <field>
              <name>USBOHCI3_GATING</name>
              <description>USBOHCI3_GATING. Gating Clock for USB OHCI3  
0: Mask 
1: Pass </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBOHCI2_GATING</name>
              <description>USBOHCI2_GATING. Gating Clock for USB OHCI2  
0: Mask 
1: Pass </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBOHCI1_GATING</name>
              <description>USBOHCI1_GATING. Gating Clock for USB OHCI1  
0: Mask 
1: Pass </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB_OTG_OHCI0_GATING</name>
              <description>USB OTG_OHCI0_GATING. Gating Clock for USB OTG_OHCI0  
0: Mask 
1: Pass </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBEHCI3_GATING</name>
              <description>USBEHCI3_GATING. Gating Clock for USB EHCI3  
0: Mask 
1: Pass </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBEHCI2_GATING</name>
              <description>USBEHCI2_GATING. Gating Clock for USB EHCI2  
0: Mask 
1: Pass </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBEHCI1_GATING</name>
              <description>USBEHCI1_GATING. Gating Clock for USB EHCI1  
0: Mask 
1: Pass </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB_OTG_EHCI0_GATING</name>
              <description>USB OTG_EHCI0_GATING. Gating Clock for USB OTG_EHCI0  
0: Mask 
1: Pass </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB_OTG_DEVICE_GATING</name>
              <description>USB OTG_Device_GATING. Gating Clock for USB OTG_Device  
0: Mask 
1: Pass </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPI1_GATING</name>
              <description>SPI1_GATING. Gating Clock for SPI1  
0: Mask 
1: Pass </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPI0_GATING</name>
              <description>SPI0_GATING. Gating Clock for SPI0  
0: Mask 
1: Pass </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HSTMR_GATING</name>
              <description>HSTMR_GATING. Gating Clock for High Speed Timer  
0: Mask 
1: Pass </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSC_GATING</name>
              <description>TSC_GATING. Gating Clock for TSC  
0: Mask 
1: Pass </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_GATING</name>
              <description>EMAC_GATING. Gating Clock for EMAC  
0: Mask 
1: Pass </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DRAM_GATING</name>
              <description>DRAM_GATING. Gating Clock for DRAM  
0: Mask 
1: Pass </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NAND_GATING</name>
              <description>NAND_GATING. Gating Clock for NAND  
0: Mask 
1: Pass </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MMC2_GATING</name>
              <description>MMC2_GATING. Gating Clock for SMHC2  
0: Mask 
1: Pass </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MMC1_GATING</name>
              <description>MMC1_GATING. Gating Clock for SMHC1  
0: Mask 
1: Pass </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MMC0_GATING</name>
              <description>MMC0_GATING. Gating Clock for SMHC0  
0: Mask 
1: Pass </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_GATING</name>
              <description>DMA_GATING. Gating Clock for DMA  
0: Mask 
1: Pass </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CE_GATING</name>
              <description>CE_GATING. Gating Clock for CE.  
0: Mask 
1: Pass </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_CLK_GATING_REG1</name>
          <description>Bus Clock Gating Register 1</description>
          <addressOffset>0x64</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x701B39</resetMask>
          <fields>
            <field>
              <name>SPINLOCK_GATING</name>
              <description>Gating Clock for SPINLOCK  
0: Mask 
1: Pass. </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MSGBOX_GATING</name>
              <description>Gating Clock for MSGBOX  
0: Mask 
1: Pass. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPU_GATING</name>
              <description>Gating Clock for GPU  
0: Mask 
1: Pass. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DE_GATING</name>
              <description>Gating Clock for DE  
0: Mask 
1: Pass. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HDMI_GATING</name>
              <description>Gating Clock for HDMI  
0: Mask 
1: Pass. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVE_GATING</name>
              <description>Gating Clock for TVE  
0: Mask 
1: Pass. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSI_GATING</name>
              <description>Gating Clock for CSI  
0: Mask 
1: Pass. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DEINTERLACE_GATING</name>
              <description>Gating Clock for DEINTERLACE  
0: Mask 
1: Pass </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_GATING</name>
              <description>Gating Clock for TCON1  
0: Mask 
1: Pass. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_GATING</name>
              <description>Gating Clock for TCON0  
0: Mask 
1: Pass. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VE_GATING</name>
              <description>Gating Clock for VE  
0: Mask 
1: Pass. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_CLK_GATING_REG2</name>
          <description>Bus Clock Gating Register 2</description>
          <addressOffset>0x68</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7123</resetMask>
          <fields>
            <field>
              <name>I2S/PCM2_GATING</name>
              <description>Gating Clock for I2S/PCM2  
0: Mask  
1: Pass. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S/PCM1_GATING</name>
              <description>Gating Clock for I2S/PCM1  
0: Mask 
1: Pass. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S/PCM0_GATING</name>
              <description>Gating Clock for I2S/PCM0  
0: Mask 
1: Pass. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>THS_GATING</name>
              <description>Gating Clock for THS   
0: Mask 
1: Pass</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PIO_GATING</name>
              <description>Gating Clock for Port Controller  
0: Mask 
1: Pass. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OWA_GATING</name>
              <description>Gating Clock for OWA  
0: Mask 
1: Pass. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AC_DIG_GATING</name>
              <description>Gating Clock for Audio Codec Digital Part  
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_CLK_GATING_REG3</name>
          <description>Bus Clock Gating Register 3</description>
          <addressOffset>0x6C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F0007</resetMask>
          <fields>
            <field>
              <name>SCR1_GATING</name>
              <description>Gating Clock for SCR1  
0: Mask 
1: Pass </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCR0_GATING</name>
              <description>Gating Clock for SCR0  
0: Mask 
1: Pass </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART3_GATING</name>
              <description>Gating Clock for UART3  
0: Mask 
1: Pass. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART2_GATING</name>
              <description>Gating Clock for UART2  
0: Mask 
1: Pass. </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART1_GATING</name>
              <description>Gating Clock for UART1  
0: Mask 
1: Pass. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART0_GATING</name>
              <description>Gating Clock for UART0  
0: Mask 
1: Pass. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI2_GATING</name>
              <description>Gating Clock for TWI2  
0: Mask 
1: Pass. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI1_GATING</name>
              <description>Gating Clock for TWI1  
0: Mask 
1: Pass. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI0_GATING</name>
              <description>Gating Clock for TWI0  
0: Mask 
1: Pass. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_CLK_GATING_REG4</name>
          <description>Bus Clock Gating Register4</description>
          <addressOffset>0x70</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x81</resetMask>
          <fields>
            <field>
              <name>DBGSYS_GATING</name>
              <description>Gating Clock for DBGSYS  
0: Mask 
1: Pass </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EPHY_GATING</name>
              <description>Gating Clock for EPHY  
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_SOFT_RST_REG0</name>
          <description>Bus Software Reset Register 0</description>
          <addressOffset>0x2C0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFBE6760</resetMask>
          <fields>
            <field>
              <name>USBOHCI3_RST</name>
              <description>USBOHCI3_RST. USB OHCI3 Reset Control  
0: Assert 
1: De-assert </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBOHCI2_RST</name>
              <description>USBOHCI2_RST. USB OHCI2 Reset Control  
0: Assert 
1: De-assert </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBOHCI1_RST</name>
              <description>USBOHCI1_RST. USB OHCI1 Reset Control  
0: Assert 
1: De-assert </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB_OTG_OHCI0_RST</name>
              <description>USB OTG_OHCI0_RST. USB OTG_OHCI0 Reset Control  
0: Assert 
1: De-assert </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBEHCI3_RST</name>
              <description>USBEHCI3_RST. USB EHCI3 Reset Control  
0: Assert 
1: De-assert </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBEHCI2_RST</name>
              <description>USBEHCI2_RST. USB EHCI2 Reset Control  
0: Assert 
1: De-assert </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBEHCI1_RST</name>
              <description>USBEHCI1_RST. USB EHCI1 Reset Control  
0: Assert 
1: De-assert. </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB_OTG_EHCI0_RST</name>
              <description>USB OTG_EHCI0_RST. USB OTG_EHCI0 Reset Control  
0: Assert 
1: De-assert </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USB_OTG_DEVICE_RST</name>
              <description>USB OTG_Device_RST. USB OTG_Device Reset Control  
0: Assert 
1: De-assert </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPI1_RST</name>
              <description>SPI1_RST. SPI1 Reset.  
0: Assert 
1: De-assert </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPI0_RST</name>
              <description>SPI0_RST. SPI0 Reset.  
0: Assert 
1: De-assert </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HSTMR_RST</name>
              <description>HSTMR_RST. HSTMR Reset.  
0: Assert 
1: De-assert </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSC_RST</name>
              <description>TSC_RST. TSC Reset.  
0: Assert 
1: De-assert </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMAC_RST</name>
              <description>EMAC_RST. EMAC Reset.  
0: Assert 
1: De-assert </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDRAM_RST</name>
              <description>SDRAM_RST. SDRAM AHB Reset.  
0: Assert 
1: De-assert </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NAND_RST</name>
              <description>NAND_RST. NAND Reset.  
0: Assert 
1: De-assert </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMHC2_RST</name>
              <description>SMHC2_RST. SD/MMC2 Reset.  
0: Assert 
1: De-assert </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMHC1_RST</name>
              <description>SMHC1_RST. SD/MMC1 Reset.  
0: Assert 
1: De-assert </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SMHC0_RST</name>
              <description>SMHC0_RST. SD/MMC0 Reset.  
0: Assert 
1: De-assert </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_RST</name>
              <description>DMA_RST. DMA Reset.  
0: Assert 
1: De-assert </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CE_RST</name>
              <description>CE_RST. CE Reset.  
0: Assert 
1: De-assert </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_SOFT_RST_REG1</name>
          <description>Bus Software Reset Register 1</description>
          <addressOffset>0x2C4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80701F39</resetMask>
          <fields>
            <field>
              <name>DBGSYS_RST</name>
              <description>DBGSYS Reset.  
0: Assert 
1: De-assert </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPINLOCK_RST</name>
              <description>SPINLOCK Reset.  
0: Assert  
1: De-assert. </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MSGBOX_RST</name>
              <description>MSGBOX Reset.  
0: Assert  
1: De-assert. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPU_RST</name>
              <description>GPU Reset.  
0: Assert  
1: De-assert. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DE_RST</name>
              <description>DE Reset.  
0: Assert  
1: De-assert. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HDMI1_RST</name>
              <description>HDMI1 Reset.  
0: Assert  
1: De-assert. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HDMI0_RST</name>
              <description>HDMI0 Reset.  
0: Assert  
1: De-assert. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TVE_RST</name>
              <description>TVE Reset.  
0: Assert 
1: De-assert </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSI_RST</name>
              <description>CSI Reset.  
0: Assert  
1: De-assert. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DEINTERLACE_RST</name>
              <description>DEINTERLACE Reset.  
0: Assert 1:De-assert </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert 1:De-assert</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_RST</name>
              <description>TCON1 Reset.  
0: Assert  
1: De-assert. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON0_RST</name>
              <description>TCON0 Reset.  
0: Assert  
1: De-assert. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VE_RST</name>
              <description>VE Reset.  
0: Assert  
1: De-assert. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_SOFT_RST_REG2</name>
          <description>Bus Software Reset Register 2</description>
          <addressOffset>0x2C8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x4</resetMask>
          <fields>
            <field>
              <name>EPHY_RST</name>
              <description>EPHY Reset.  
0: Assert 
1: De-assert </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_SOFT_RST_REG3</name>
          <description>Bus Software Reset Register 3</description>
          <addressOffset>0x2D0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7103</resetMask>
          <fields>
            <field>
              <name>I2S/PCM2_RST</name>
              <description>I2S/PCM2 Reset.  
0: Assert  
1: De-assert. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S/PCM1_RST</name>
              <description>I2S/PCM1 Reset.  
0: Assert  
1: De-assert. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>I2S/PCM0_RST</name>
              <description>I2S/PCM0 Reset.  
0: Assert 
1: De-assert. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>THS_RST</name>
              <description>THS Reset.  
0: Assert  
1: De-assert </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OWA_RST</name>
              <description>OWA Reset.  
0: Assert  
1: De-assert </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AC_RST</name>
              <description>Audio Codec Reset.  
0: Assert 
1: De-assert </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BUS_SOFT_RST_REG4</name>
          <description>Bus Software Reset Register 4</description>
          <addressOffset>0x2D8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F0007</resetMask>
          <fields>
            <field>
              <name>SCR1_RST</name>
              <description>SCR1 Reset.  
0: Assert 
1: De-assert </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCR0_RST</name>
              <description>SCR0 Reset.  
0: Assert 
1: De-assert </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART3_RST</name>
              <description>UART3 Reset.  
0: Assert   
1: De-assert. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART2_RST</name>
              <description>UART2 Reset.  
0: Assert   
1: De-assert. </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART1_RST</name>
              <description>UART1 Reset.  
0: Assert   
1: De-assert. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>UART0_RST</name>
              <description>UART0 Reset.  
0: Assert   
1: De-assert. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI2_RST</name>
              <description>TWI2 Reset.  
0: Assert   
1: De-assert. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI1_RST</name>
              <description>TWI1 Reset.  
0: Assert   
1: De-assert. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWI0_RST</name>
              <description>TWI0 Reset.  
0: Assert   
1: De-assert. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CCU_SEC_SWITCH_REG</name>
          <description>CCU Security Switch Register</description>
          <addressOffset>0x2F0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>MBUS_SEC</name>
              <description>MBUS clock register security  
0: Secure 
1: Non-secure  Including MBUS Reset Register and MBUS Clock Register </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure  Including MBUS Reset Register and MBUS Clock Register</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUS_SEC</name>
              <description>Bus relevant registers security  
0: Secure 
1: Non-secure  Including AXI/AHB/APB relevant registers,such as CPUX/AXI Configuration Register,AHB1/APB1 Configuration Register,APB2 Configuration Register, AHB2 Configuration Register. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure  Including AXI/AHB/APB relevant registers,such as CPUX/AXI Configuration Register,AHB1/APB1 Configuration Register,APB2 Configuration Register, AHB2 Configuration Register.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SEC</name>
              <description>PLL relevant registers security.  
0: Secure 
1: Non-secure  Including PLL_CPUX Control Register,PLL_AUDIO Control Register,PLL_VIDEO Control Register,PLL_VE Control Register,PLL_DDR Control Register,   PLL_PEPIPH0 Control Register,PLL_GPU Control Register,PLL_PERIPH1 Control  Register,PLL_DE Control Register and offset from 0x200 to 0x2A8 relevant registers. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure  Including PLL_CPUX Control Register,PLL_AUDIO Control Register,PLL_VIDEO Control Register,PLL_VE Control Register,PLL_DDR Control Register,   PLL_PEPIPH0 Control Register,PLL_GPU Control Register,PLL_PERIPH1 Control  Register,PLL_DE Control Register and offset from 0x200 to 0x2A8 relevant registers.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_CLK_REG</name>
          <description>CE Clock Register</description>
          <addressOffset>0x9C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 400MHz)  
0: Clock is OFF 
1: Clock is ON.  SCLK = CLK_SRC_SEL / CLK_DIV_RATIO_N / CLK_DIV_RATIO_M . </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.  SCLK = CLK_SRC_SEL / CLK_DIV_RATIO_N / CLK_DIV_RATIO_M .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select  
00: OSC24M 
01: PLL_PERIPH0(1X) 
10: PLL_PERIPH1(1X) 
11: / </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH0(1X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH1(1X)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (n)  
00: /1 
01: /2 
10: /4 
11: /8. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock divide ratio (m) The pre-divided clock is divided by (m+1). The divider M is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPUX_AXI_CFG_REG</name>
          <description>CPUX/AXI Configuration Register</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x10000</resetValue>
          <resetMask>0x30303</resetMask>
          <fields>
            <field>
              <name>CPUX_CLK_SRC_SEL</name>
              <description>CPUX Clock Source Select. CPUX Clock = Clock Source  
00: LOSC 
01: OSC24M 
1X: PLL_CPUX  If the clock source is changed, wait for at most 8 present running clock cycles. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_CPUX</name>
                  <description>PLL_CPUX  If the clock source is changed, wait for at most 8 present running clock cycles.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPU_APB_CLK_DIV</name>
              <description>00: /1 
01: /2 
1X: /4  Note: System APB clock source is CPU clock source. </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4  Note: System APB clock source is CPU clock source.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AXI_CLK_DIV_RATIO</name>
              <description>AXI Clock Divide Ratio. AXI Clock source is CPU clock source.  
00: /1 
01: /2 
10: /3 
11: /4 </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_3</name>
                  <description>/3</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI_CLK_REG</name>
          <description>CSI Clock Register</description>
          <addressOffset>0x134</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x870F871F</resetMask>
          <fields>
            <field>
              <name>CSI_SCLK_GATING</name>
              <description>Gating Special Clock  
0: Clock is OFF 
1: Clock is ON.  SCLK= SCLK_SRC_SEL / CSI_SCLK_DIV_M . </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.  SCLK= SCLK_SRC_SEL / CSI_SCLK_DIV_M .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_SRC_SEL</name>
              <description>Special Clock Source Select  
000: PLL_PERIPH0(1X) 
001: PLL_PERIPH1(1X) Others: / </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH0(1X)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH1(1X) Others: /</description>
                  <value>0b001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSI_SCLK_DIV_M</name>
              <description>CSI Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider M is from 1 to 16. </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CSI_MCLK_GATING</name>
              <description>Gating Master Clock  
0: Clock is OFF 
1: Clock is ON  This clock = MCLK_SRC_SEL / CSI_MCLK_DIV_M . </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON  This clock = MCLK_SRC_SEL / CSI_MCLK_DIV_M .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MCLK_SRC_SEL</name>
              <description>Master Clock Source Select  
000: OSC24M 
001: PLL_VIDEO 
010: PLL_PERIPH1(1X) Others: / </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_VIDEO</name>
                  <description>PLL_VIDEO</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH1(1X) Others: /</description>
                  <value>0b010</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSI_MCLK_DIV_M</name>
              <description>CSI Master Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 32. </description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI_MISC_CLK_REG</name>
          <description>CSI_MISC Clock Register</description>
          <addressOffset>0x130</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>CSI_MISC_SCLK_GATING</name>
              <description>0: Clock is OFF 
1: Clock is ON.  This clock = OSC24M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.  This clock = OSC24M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DEINTERLACE_CLK_REG</name>
          <description>DEINTERLACE Clock Register</description>
          <addressOffset>0x124</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8700000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock  
0: Clock is OFF 
1: Clock is ON  SCLK = CLK_SRC_SEL / CLK_DIV_RATIO_M </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON  SCLK = CLK_SRC_SEL / CLK_DIV_RATIO_M</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select  
000: PLL_PERIPH0 
001: PLL_PERIPH1 Others: / </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_PERIPH0</name>
                  <description>PLL_PERIPH0</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1</name>
                  <description>PLL_PERIPH1 Others: /</description>
                  <value>0b001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DE_CLK_REG</name>
          <description>DE_CLK_REG</description>
          <addressOffset>0x104</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8700000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock  
0: Clock is OFF 
1: Clock is ON This special clock = CLK_SRC_SEL / CLK_DIV_RATIO_M . </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON This special clock = CLK_SRC_SEL / CLK_DIV_RATIO_M .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select  
000: PLL_PERIPH0(2X) 
001: PLL_DE Others: / </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH0(2X)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_DE</name>
                  <description>PLL_DE Others: /</description>
                  <value>0b001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DRAM_CFG_REG</name>
          <description>DRAM Configuration Register</description>
          <addressOffset>0xF4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80310003</resetMask>
          <fields>
            <field>
              <name>DRAM_CTR_RST</name>
              <description>DRAM Controller Reset for AHB Clock Domain.  
0: Assert 
1: De-assert.  SCLK = CLK_SRC_SEL / DRAM_DIV_M </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.  SCLK = CLK_SRC_SEL / DRAM_DIV_M</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>00: PLL_DDR 
01: PLL_PERIPH0(2X) Others: /</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_DDR</name>
                  <description>PLL_DDR</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH0(2X) Others: /</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDRCLK_UPD</name>
              <description>SDRCLK Configuration Update.   
0: Invalid 
1: Valid.  Setting this bit will validate SDRCLK configuration . It will be automatically cleared after the configuration is valid. The DRAMCLK Source is from PLL_DDR . </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Invalid</name>
                  <description>Invalid</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Valid</name>
                  <description>Valid.  Setting this bit will validate SDRCLK configuration . It will be automatically cleared after the configuration is valid. The DRAMCLK Source is from PLL_DDR .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DRAM_DIV_M</name>
              <description>DRAMCLK Divider of Configuration. The clock is divided by (m+1). The divider M should be from 1 to 4. </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DRAM_CLK_GATING_REG</name>
          <description>DRAM Clock Gating Register</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>TSC_DCLK_GATING</name>
              <description>Gating DRAM Clock for TSC  
0: Mask 
1: Pass </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DEINTERLACE_DCLK_GATING</name>
              <description>Gating DRAM SCLK(1X) for DEINTERLACE  
0: Mask 
1: Pass </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSI_DCLK_GATING</name>
              <description>Gating DRAM Clock for CSI  
0: Mask 
1: Pass </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VE_DCLK_GATING</name>
              <description>Gating DRAM Clock for VE  
0: Mask 
1: Pass </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>GPU_CLK_REG</name>
          <description>GPU Clock Register</description>
          <addressOffset>0x1A0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000007</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>0: Clock is OFF 
1: Clock is ON.  SCLK= PLL_GPU / CLK_DIV_RATIO_N . </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.  SCLK= PLL_GPU / CLK_DIV_RATIO_N .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (N) The select clock source is pre-divided by ( n+1). The divider N is from 1 to 8. </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HDMI_CLK_REG</name>
          <description>HDMI Clock Register</description>
          <addressOffset>0x150</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8300000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock  
0: Clock is OFF 
1: Clock is ON.  SCLK= SCLK_SEL / CLK_DIV_RATIO_M . </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.  SCLK= SCLK_SEL / CLK_DIV_RATIO_M .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_SEL</name>
              <description>Special Clock Source Select  
00: PLL_VIDEO Others: /  </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_VIDEO</name>
                  <description>PLL_VIDEO Others: /</description>
                  <value>0b00</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider M is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HDMI_SLOW_CLK_REG</name>
          <description>HDMI Slow Clock Register</description>
          <addressOffset>0x154</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>HDMI_DDC_CLK_GATING</name>
              <description>0: Clock is OFF 
1: Clock is ON.  SCLK = OSC24M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.  SCLK = OSC24M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM0_CLK_REG</name>
          <description>I2S_PCM0_CLK_REG</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80030000</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz)  
0: Clock is OFF 
1: Clock is ON. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>00: PLL_AUDIO(8X) 
01: PLL_AUDIO(8X)/2 
10: PLL_AUDIO(8X)/4 
11: PLL_AUDIO </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_8X_closingparen_</name>
                  <description>PLL_AUDIO(8X)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_8X_closingparen__slash_2</name>
                  <description>PLL_AUDIO(8X)/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_8X_closingparen__slash_4</name>
                  <description>PLL_AUDIO(8X)/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO</name>
                  <description>PLL_AUDIO</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM1_CLK_REG</name>
          <description>I2S_PCM1_CLK_REG</description>
          <addressOffset>0xB4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80030000</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz)  
0: Clock is OFF 
1: Clock is ON. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>00: PLL_AUDIO(8X) 
01: PLL_AUDIO(8X)/2 
10: PLL_AUDIO(8X)/4 
11: PLL_AUDIO </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_8X_closingparen_</name>
                  <description>PLL_AUDIO(8X)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_8X_closingparen__slash_2</name>
                  <description>PLL_AUDIO(8X)/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_8X_closingparen__slash_4</name>
                  <description>PLL_AUDIO(8X)/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO</name>
                  <description>PLL_AUDIO</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM2_CLK_REG</name>
          <description>I2S_PCM2_CLK_REG</description>
          <addressOffset>0xB8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80030000</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz)  
0: Clock is OFF 
1: Clock is ON. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>00: PLL_AUDIO(8X) 
01: PLL_AUDIO(8X)/2 
10: PLL_AUDIO(8X)/4 
11: PLL_AUDIO </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_8X_closingparen_</name>
                  <description>PLL_AUDIO(8X)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_8X_closingparen__slash_2</name>
                  <description>PLL_AUDIO(8X)/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO_openingparen_8X_closingparen__slash_4</name>
                  <description>PLL_AUDIO(8X)/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_AUDIO</name>
                  <description>PLL_AUDIO</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MBUS_CLK_REG</name>
          <description>MBUS Clock Register</description>
          <addressOffset>0x15C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x83000007</resetMask>
          <fields>
            <field>
              <name>MBUS_SCLK_GATING</name>
              <description>Gating Clock for MBUS  
0: Clock is OFF 
1: Clock is ON.  MBUS_CLOCK = MBUS_SCLK_SRC / MBUS_SCLK_RATIO_M </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.  MBUS_CLOCK = MBUS_SCLK_SRC / MBUS_SCLK_RATIO_M</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MBUS_SCLK_SRC</name>
              <description>Clock Source Select  
00: OSC24M 
01: PLL_PERIPH0(2X) 
10: PLL_DDR 
11: /. </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH0(2X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_DDR</name>
                  <description>PLL_DDR</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MBUS_SCLK_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider M is from 1 to 8. Note: If the clock has been changed , it must wait for at least 16 cycles.  </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MBUS_RST_REG</name>
          <description>MBUS Reset Register</description>
          <addressOffset>0xFC</addressOffset>
          <resetValue>0x80000000</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>MBUS_RESET</name>
              <description>0: Reset Mbus Domain 
1: Assert Mbus Domain. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Reset</name>
                  <description>Reset Mbus Domain</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert Mbus Domain.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NAND_CLK_REG</name>
          <description>NAND Clock Register</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz)  
0: Clock is OFF 
1: Clock is ON.  SCLK = CLK_SRC_SEL / CLK_DIV_RATIO_N / CLK_DIV_RATIO_M . </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.  SCLK = CLK_SRC_SEL / CLK_DIV_RATIO_N / CLK_DIV_RATIO_M .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select  
00: OSC24M 
01: PLL_PERIPH0(1X) 
10: PLL_PERIPH1(1X) 
11: / </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH0(1X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH1(1X)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (n)  
00: /1 
01: /2 
10: /4 
11: /8. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider M is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_CLK_REG</name>
          <description>OWA Clock Register</description>
          <addressOffset>0xC0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8000000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz)  
0: Clock is OFF 
1: Clock is ON.  SCLK= PLL _AUDIO / CLK_DIV_RATIO_M . </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.  SCLK= PLL _AUDIO / CLK_DIV_RATIO_M .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider M is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_AUDIO_BIAS_REG</name>
          <description>PLL_AUDIO Bias Register</description>
          <addressOffset>0x224</addressOffset>
          <resetValue>0x10100000</resetValue>
          <resetMask>0x1F1F0000</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS</name>
              <description>PLL VCO Bias Current[4:0]. </description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_BIAS_CUR</name>
              <description>PLL Bias Current[4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_AUDIO_CTRL_REG</name>
          <description>PLL_AUDIO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x35514</resetValue>
          <resetMask>0x910F7F1F</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable.  The PLL is for Audio. PLL_AUDIO = (24MHz* N )/( M * P ) PLL_AUDIO(8X)= (24MHz* N *2)/ M  PLL_AUDIO(4X)=PLL_AUDIO(8X)/2 PLL_AUDIO(2X)=PLL_AUDIO(4X)/2 The PLL output clock must be in the range of 20MHz~200MHz. Its default value is 24.571MHz. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.  The PLL is for Audio. PLL_AUDIO = (24MHz* N )/( M * P ) PLL_AUDIO(8X)= (24MHz* N *2)/ M  PLL_AUDIO(4X)=PLL_AUDIO(8X)/2 PLL_AUDIO(2X)=PLL_AUDIO(4X)/2 The PLL output clock must be in the range of 20MHz~200MHz. Its default value is 24.571MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL is stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL is stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable  In this case, only the low 4 bits of PLL_FACTOR_N are valid (N: The range is from 1 to 16). </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  In this case, only the low 4 bits of PLL_FACTOR_N are valid (N: The range is from 1 to 16).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_POSTDIV_P</name>
              <description>Post-div factor P (P= Factor+1) The range is from 1 to 16. </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 ...  Factor=127, N=128 </description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_PREDIV_M</name>
              <description>PLL Pre-div Factor M (M = Factor+1). The range is from 1 to 32. </description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_AUDIO_PAT_CTRL_REG</name>
          <description>PLL_AUDIO_PAT_CTRL_REG</description>
          <addressOffset>0x284</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode.  
00: DC=0 
01: DC=1 
1X: Triangular </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency.  
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_CPUX_BIAS_REG</name>
          <description>PLL_CPUX Bias Register</description>
          <addressOffset>0x220</addressOffset>
          <resetValue>0x8100200</resetValue>
          <resetMask>0x9F1F070F</resetMask>
          <fields>
            <field>
              <name>VCO_RST</name>
              <description>VCO reset in. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EXG_MODE</name>
              <description>Exchange Mode. CPU PLL source will select PLL_PERIPH0 instead of PLL_CPUX </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control[3:0]. </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_BIAS_CUR_CTRL</name>
              <description>PLL Bias Current Control[4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_LOCK_CTRL</name>
              <description>PLL Lock Time Control[2:0]. </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DAMP_FACT_CTRL</name>
              <description>PLL Damping Factor Control[3:0]. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_CPUX_CTRL_REG</name>
          <description>PLL_CPUX Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x1000</resetValue>
          <resetMask>0x91031F33</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable  The PLL Output= (24MHz* N * K )/( M * P ). The PLL output is for the CPUX Clock. The PLL output clock must be in the range of 200MHz~2.6GHz. Its default value is 408MHz. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  The PLL Output= (24MHz* N * K )/( M * P ). The PLL output is for the CPUX Clock. The PLL output clock must be in the range of 200MHz~2.6GHz. Its default value is 408MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL is stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL is stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPUX_SDM_EN</name>
              <description>0: Disable 
1: Enable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_OUT_EXT_DIVP</name>
              <description>PLL Output external divider P  
00: /1 
01: /2 
10: /4 
11: /  The P factor only uses in the condition that PLL output is less than  288 MHz. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/  The P factor only uses in the condition that PLL output is less than  288 MHz.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3 ...  Factor=31, N=32 </description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_K</name>
              <description>PLL Factor K.(K=Factor + 1 ) The range is from 1 to 4. </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_M</name>
              <description>PLL Factor M. (M=Factor + 1) The range is from 1 to 4. </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_CPUX_PAT_CTRL_REG</name>
          <description>PLL_CPUX Pattern Control Register</description>
          <addressOffset>0x280</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode.  
00: DC=0 
01: DC=1 
1X: Triangular </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency.  
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_CPUX_TUN_REG</name>
          <description>PLL_CPUX Tuning Register</description>
          <addressOffset>0x250</addressOffset>
          <resetValue>0xA101000</resetValue>
          <resetMask>0xFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PLL_BAND_WID_CTRL</name>
              <description>PLL Band Width Control.  
0: Narrow 
1: Wide </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Narrow</name>
                  <description>Narrow</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wide</name>
                  <description>Wide</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VCO_GAIN_CTRL_EN</name>
              <description>VCO Gain Control Enable.  
0: Disable 
1: Enable </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VCO_GAIN_CTRL</name>
              <description>VCO Gain Control Bits[2:0]. </description>
              <bitRange>[25:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_INIT_FREQ_CTRL</name>
              <description>PLL Initial Frequency Control[6:0]. </description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_OD</name>
              <description>C-Reg-Od for Verify. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_B_IN</name>
              <description>C-B-In[6:0] for Verify. </description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_OD1</name>
              <description>C-Reg-Od1 for Verify. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C_B_OUT</name>
              <description>C-B-Out[6:0] for Verify. </description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DDR_BIAS_REG</name>
          <description>PLL_DDR Bias Register</description>
          <addressOffset>0x230</addressOffset>
          <resetValue>0x81104000</resetValue>
          <resetMask>0xF31F700F</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS</name>
              <description>PLL VCO Bias[3:0]. </description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_VCO_GAIN_CTRL_EN</name>
              <description>PLL VCO Gain Control Enable.  
0: Disable 
1: Enable. </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_BANDW_CTRL</name>
              <description>PLL Band Width Control.  
0: Narrow 
1: Wide. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Narrow</name>
                  <description>Narrow</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wide</name>
                  <description>Wide.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_BIAS_CUR_CTRL</name>
              <description>PLL Bias Current Control. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_VCO_GAIN_CTRL</name>
              <description>PLL VCO Gain Control Bit[2:0]. </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DAMP_FACTOR_CTRL</name>
              <description>PLL Damping Factor Control[3:0]. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DDR_CTRL_REG</name>
          <description>PLL_DDR Control Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x1000</resetValue>
          <resetMask>0x91101F33</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable  Set PLL_DDR_CFG_UPDATE to validate the PLL after this bit is set to 1. The PLL Output = (24MHz* N * K )/ M . The PLL output clock must be in the range of 200MHz~2.6GHz. Its default value is 408MHz. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  Set PLL_DDR_CFG_UPDATE to validate the PLL after this bit is set to 1. The PLL Output = (24MHz* N * K )/ M . The PLL output clock must be in the range of 200MHz~2.6GHz. Its default value is 408MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL is stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL is stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_DDR_CFG_UPDATE</name>
              <description>PLL_DDR Configuration Update.  
0: No effect 
1: Validating the PLL_DDR  When PLL_DDR changed, this bit should be set to 1 to validate the PLL, otherwise the change would be invalid. And this bit would be cleared automatically after the PLL change is valid. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Validating</name>
                  <description>Validating the PLL_DDR  When PLL_DDR changed, this bit should be set to 1 to validate the PLL, otherwise the change would be invalid. And this bit would be cleared automatically after the PLL change is valid.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3 ...  Factor=31, N=32 </description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_K</name>
              <description>PLL Factor K.(K = Factor + 1 ) The range is from 1 to 4. </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_M</name>
              <description>PLL Factor M.(M = Factor + 1 ) The range is from 1 to 4. </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DDR_PAT_CTRL_REG</name>
          <description>PLL_DDR_PAT_CTRL_REG</description>
          <addressOffset>0x290</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode.  
00: DC=0 
01: DC=1 
1X: Triangular </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency.  
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DDR_TUN_REG</name>
          <description>PLL_DDR Tuning Register</description>
          <addressOffset>0x260</addressOffset>
          <resetValue>0x14880000</resetValue>
          <resetMask>0x17FFFFFF</resetMask>
          <fields>
            <field>
              <name>VREG1_OUT_EN</name>
              <description>VREG1 Out Enable.  
0: Disable 
1: Enable </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_LTIME_CTRL</name>
              <description>PLL Lock Time Control[2:0]. </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VCO_RST</name>
              <description>VCO Reset In. </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_INIT_FREQ_CTRL</name>
              <description>PLL Initial Frequency Control[6:0]. </description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OD1</name>
              <description>Reg-Od1 for Verify. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>B_IN</name>
              <description>B-In[6:0] for Verify. </description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OD</name>
              <description>Reg-Od for Verify. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>B_OUT</name>
              <description>B-Out[6:0] for Verify. </description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DE_BIAS_REG</name>
          <description>PLL_DE Bias Register</description>
          <addressOffset>0x248</addressOffset>
          <resetValue>0x10100000</resetValue>
          <resetMask>0x1F1F0007</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control[4:0]. </description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_BIAS_CTRL</name>
              <description>PLL Bias Control[4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DAMP_FACTOR_CTRL</name>
              <description>PLL Damping Factor Control[2:0]. </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DE_CTRL_REG</name>
          <description>PLL_DE Control Register</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x3006207</resetValue>
          <resetMask>0x93107F0F</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable  In the integer mode, The PLL Output= (24MHz* N )/ M . In the fractional mode, the PLL Output is selected by FRAC_CLK_OUT . Its default value is 297MHz. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  In the integer mode, The PLL Output= (24MHz* N )/ M . In the fractional mode, the PLL Output is selected by FRAC_CLK_OUT . Its default value is 297MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL is stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL is stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRAC_CLK_OUT</name>
              <description>PLL clock output when PLL_MODE_SEL  =0( PLL_PRE_DIV_M  factor must be set to 0). No meaning when PLL_MODE_SEL =1.  
0: PLL Output=270MHz 
1: PLL Output =297MHz </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_Output_equals_270MHz</name>
                  <description>PLL Output=270MHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_Output</name>
                  <description>PLL Output =297MHz</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_MODE_SEL</name>
              <description>0: Fractional Mode 
1: Integer Mode  When in Fractional mode, the Pre Divider M should be set to 0. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Fractional</name>
                  <description>Fractional Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Integer</name>
                  <description>Integer Mode  When in Fractional mode, the Pre Divider M should be set to 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3  ...  Factor=0x7F, N=128 </description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_PRE_DIV_M</name>
              <description>PLL Per Divider M (M = Factor+1). The range is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_DE_PAT_CTRL_REG</name>
          <description>PLL_DE Pattern Control Register</description>
          <addressOffset>0x2A8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode.  
00: DC=0 
01: DC=1 
1X: Triangular </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency.  
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_GPU_BIAS_REG</name>
          <description>PLL_GPU Bias Register</description>
          <addressOffset>0x23C</addressOffset>
          <resetValue>0x10100000</resetValue>
          <resetMask>0x1F1F0007</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control[4:0]. </description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_BIAS_CTRL</name>
              <description>PLL Bias Control[4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DAMP_FACTOR_CTRL</name>
              <description>PLL Damping Factor Control[2:0]. </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_GPU_CTRL_REG</name>
          <description>PLL_GPU Control Register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x3006207</resetValue>
          <resetMask>0x93107F0F</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable  In the integer mode, The PLL_GPU Output= (24MHz*N)/M. In the fractional mode, the PLL_GPU Output is selected by FRAC_CLK_OUT . The PLL output clock must be in the range of 30MHz~600MHz. Its default value is 297MHz. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  In the integer mode, The PLL_GPU Output= (24MHz*N)/M. In the fractional mode, the PLL_GPU Output is selected by FRAC_CLK_OUT . The PLL output clock must be in the range of 30MHz~600MHz. Its default value is 297MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL is stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL is stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRAC_CLK_OUT</name>
              <description>PLL clock output when PLL_MODE_SEL  =0( PLL_PRE_DIV_M  factor must be set to 0). No meaning when PLL_MODE_SEL =1.  
0: PLL Output = 270MHz 
1: PLL Output = 297MHz </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_Output__equals__270MHz</name>
                  <description>PLL Output = 270MHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_Output__equals__297MHz</name>
                  <description>PLL Output = 297MHz</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_MODE_SEL</name>
              <description>0: Fractional Mode. 
1: Integer Mode  When in Fractional mode, the Per Divider M should be set to 0. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Fractional</name>
                  <description>Fractional Mode.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Integer</name>
                  <description>Integer Mode  When in Fractional mode, the Per Divider M should be set to 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3  ...  Factor=127, N=128 </description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_PRE_DIV_M</name>
              <description>PLL Pre Divider M (M = Factor+1). The range is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_GPU_PAT_CTRL_REG</name>
          <description>PLL_GPU Pattern Control Register</description>
          <addressOffset>0x29C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode.  
00: DC=0 
01: DC=1 
1X: Triangular </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency.  
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_PERIPH0_BIAS_REG</name>
          <description>PLL_PERIPH0 Bias Register</description>
          <addressOffset>0x234</addressOffset>
          <resetValue>0x10100010</resetValue>
          <resetMask>0x1F1F0013</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS</name>
              <description>PLL VCO Bias[4:0]. </description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_BIAS_CUR_CTRL</name>
              <description>PLL Bias Current Control. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_BANDW_CTRL</name>
              <description>PLL Band Width Control.  
0: Narrow 
1: Wide </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Narrow</name>
                  <description>Narrow</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wide</name>
                  <description>Wide</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_DAMP_FACTOR_CTRL</name>
              <description>PLL Damping Factor Control[1:0]. </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_PERIPH0_CTRL_REG</name>
          <description>PLL_PERIPH0 Control Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x41811</resetValue>
          <resetMask>0x93071F33</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable  The PLL Output = 24MHz* N * K /2. The PLL Output should be fixed to 600MHz, it is not recommended to vary this value arbitrarily. In the Clock Control Module, PLL(2X) output= PLL*2 = 24MHz* N * K . The PLL output clock must be in the range of 200MHz~1.8GHz.  Its default value is 600MHz. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  The PLL Output = 24MHz* N * K /2. The PLL Output should be fixed to 600MHz, it is not recommended to vary this value arbitrarily. In the Clock Control Module, PLL(2X) output= PLL*2 = 24MHz* N * K . The PLL output clock must be in the range of 200MHz~1.8GHz.  Its default value is 600MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL is stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL is stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_BYPASS_EN</name>
              <description>PLL Output Bypass Enable.  
0: Disable 
1: Enable  If the bypass is enabled, the PLL output is 24MHz. </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  If the bypass is enabled, the PLL output is 24MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_CLK_OUT_EN</name>
              <description>PLL clock Output Enable.  
0: Disable 
1: Enable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_24M_OUT_EN</name>
              <description>PLL 24MHz Output Enable.  
0: Disable  
1: Enable  When 25MHz crystal is used, this PLL can output 24MHz. </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  When 25MHz crystal is used, this PLL can output 24MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_24M_POST_DIV</name>
              <description>PLL 24M Output Clock Post Divider (When 25MHz crystal is used). 1/2/3/4. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3  ...  Factor=31, N=32 </description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_K</name>
              <description>PLL Factor K.(K=Factor + 1 ) The range is from 1 to 4. </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_M</name>
              <description>PLL Factor M (M = Factor + 1) is only valid in plltest debug. The PLL_PERIPH back door clock output =24MHz* N * K / M . The range is from 1 to 4. </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_PERIPH1_BIAS_REG</name>
          <description>PLL_PERIPH1 Bias Register</description>
          <addressOffset>0x244</addressOffset>
          <resetValue>0x10100010</resetValue>
          <resetMask>0x1F1F0013</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS</name>
              <description>PLL VCO Bias[4:0]. </description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_BIAS_CUR_CTRL</name>
              <description>PLL Bias Current Control. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_BANDW_CTRL</name>
              <description>PLL Band Width Control.  
0: Narrow 
1: Wide </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Narrow</name>
                  <description>Narrow</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wide</name>
                  <description>Wide</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_DAMP_FACTOR_CTRL</name>
              <description>PLL Damping Factor Control[1:0]. </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_PERIPH1_CTRL_REG</name>
          <description>PLL_PERIPH1 Control Register</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x41811</resetValue>
          <resetMask>0x93171F33</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable  The PLL Output = 24MHz* N * K /2. The PLL Output should be fixed to 600MHz, it is not recommended to vary this value arbitrarily. In the Clock Control Module, PLL(2X) output= PLL*2 = 24MHz* N * K . The PLL output clock must be in the range of 200MHz~1.8GHz.  Its default value is 600MHz. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  The PLL Output = 24MHz* N * K /2. The PLL Output should be fixed to 600MHz, it is not recommended to vary this value arbitrarily. In the Clock Control Module, PLL(2X) output= PLL*2 = 24MHz* N * K . The PLL output clock must be in the range of 200MHz~1.8GHz.  Its default value is 600MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL is stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL is stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_BYPASS_EN</name>
              <description>PLL Output Bypass Enable.  
0: Disable 
1: Enable  If the bypass is enabled, the PLL output is 24MHz. </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  If the bypass is enabled, the PLL output is 24MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_CLK_OUT_EN</name>
              <description>PLL clock Output Enable.  
0: Disable 
1: Enable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_24M_OUT_EN</name>
              <description>PLL 24MHz Output Enable.  
0: Disable  
1: Enable  When 25MHz crystal used, this PLL can output 24MHz. </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  When 25MHz crystal used, this PLL can output 24MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_24M_POST_DIV</name>
              <description>PLL 24M Output Clock Post Divider (When 25MHz crystal used). 1/2/3/4. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3  ...  Factor=31, N=32 </description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_K</name>
              <description>PLL Factor K.(K=Factor + 1 ) The range is from 1 to 4. </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FACTOR_M</name>
              <description>PLL Factor M (M = Factor + 1) is only valid in plltest debug. The PLL_PERIPH back door clock output =24MHz* N * K / M . The range is from 1 to 4. </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_PERIPH1_PAT_CTRL_REG</name>
          <description>PLL_PERIPH1_PAT_CTRL_REG</description>
          <addressOffset>0x2A4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-Delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode.  
00: DC=0 
01: DC=1 
1X: Triangular </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency.  
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_STABLE_TIME_REG0</name>
          <description>PLL Stable Time Register 0</description>
          <addressOffset>0x200</addressOffset>
          <resetValue>0xFF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>PLL_LOCK_TIME</name>
              <description>PLL Lock Time (Unit: us). Note:  When any PLL (except PLL_CPU) is enabled or changed, the corresponding PLL lock bit will be set after the PLL Lock Time. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_STABLE_TIME_REG1</name>
          <description>PLL Stable Time Register 1</description>
          <addressOffset>0x204</addressOffset>
          <resetValue>0xFF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>PLL_CPU_LOCK_TIME</name>
              <description>PLL_CPU Lock Time (Unit: us). Note: When PLL_CPU is enabled or changed, the PLL_CPU lock bit will be set after the PLL_CPU Lock Time. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VE_BIAS_REG</name>
          <description>PLL_VE Bias Register</description>
          <addressOffset>0x22C</addressOffset>
          <resetValue>0x10100000</resetValue>
          <resetMask>0x1F1F0007</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control[4:0]. </description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_BIAS_CTRL</name>
              <description>PLL Bias Control[4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DAMP_FACTOR_CTRL</name>
              <description>PLL Damping Factor Control[2:0]. </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VE_CTRL_REG</name>
          <description>PLL_VE Control Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x3006207</resetValue>
          <resetMask>0x93107F0F</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable  In the integer mode, The PLL Output = (24MHz* N )/ M . In the fractional mode, the PLL Output is selected by FRAC_CLK_OUT . The PLL output clock must be in the range of 30MHz~600MHz. Its default value is 297MHz. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  In the integer mode, The PLL Output = (24MHz* N )/ M . In the fractional mode, the PLL Output is selected by FRAC_CLK_OUT . The PLL output clock must be in the range of 30MHz~600MHz. Its default value is 297MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL is stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL is stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRAC_CLK_OUT</name>
              <description>PLL clock output when PLL_MODE_SEL =0( PLL_PREDIV_M factor must be set to 0). No meaning when PLL_MODE_SEL =1.  
0: PLL Output = 270MHz 
1: PLL Output = 297MHz </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_Output__equals__270MHz</name>
                  <description>PLL Output = 270MHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_Output__equals__297MHz</name>
                  <description>PLL Output = 297MHz</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_MODE_SEL</name>
              <description>0: Fractional Mode 
1: Integer Mode  When in Fractional mode, the Per Divider M should be set to 0. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Fractional</name>
                  <description>Fractional Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Integer</name>
                  <description>Integer Mode  When in Fractional mode, the Per Divider M should be set to 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3 ...  Factor=31, N=32 ...  Factor=127, N=128 </description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_PREDIV_M</name>
              <description>PLL Pre Divider M (M = Factor+1). The range is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VE_PAT_CTRL_REG</name>
          <description>PLL_VE Pattern Control Register</description>
          <addressOffset>0x28C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode.  
00: DC=0 
01: DC=1 
1X: Triangular </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency.  
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VIDEO_BIAS_REG</name>
          <description>PLL_VIDEO Bias Register</description>
          <addressOffset>0x228</addressOffset>
          <resetValue>0x10100000</resetValue>
          <resetMask>0x1F1F0007</resetMask>
          <fields>
            <field>
              <name>PLL_VCO_BIAS_CTRL</name>
              <description>PLL VCO Bias Control[4:0]. </description>
              <bitRange>[28:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_BIAS_CTRL</name>
              <description>PLL Bias Control[4:0]. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_DAMP_FACTOR_CTRL</name>
              <description>PLL Damping Factor Control[2:0]. </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VIDEO_CTRL_REG</name>
          <description>PLL_VIDEO Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x3006207</resetValue>
          <resetMask>0xD3107F0F</resetMask>
          <fields>
            <field>
              <name>PLL_ENABLE</name>
              <description>0: Disable 
1: Enable  In the integer mode, the PLL Output = (24MHz* N )/ M . In the fractional mode, the PLL Output is selected by FRAC_CLK_OUT .  In the Clock Control Module, PLL(1X) Output = PLL, PLL(2X) Output = PLL * 2. The PLL output clock must be in the range of 30MHz~600MHz.  Its default value is 297MHz. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  In the integer mode, the PLL Output = (24MHz* N )/ M . In the fractional mode, the PLL Output is selected by FRAC_CLK_OUT .  In the Clock Control Module, PLL(1X) Output = PLL, PLL(2X) Output = PLL * 2. The PLL output clock must be in the range of 30MHz~600MHz.  Its default value is 297MHz.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_MODE</name>
              <description>0: Manual Mode 
1: Auto Mode (Controlled by DE) </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Manual</name>
                  <description>Manual Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto</name>
                  <description>Auto Mode (Controlled by DE)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOCK</name>
              <description>0: Unlocked 
1: Locked (It indicates that the PLL is stable.)  </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unlocked</name>
                  <description>Unlocked</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Locked</name>
                  <description>Locked (It indicates that the PLL is stable.)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FRAC_CLK_OUT</name>
              <description>PLL clock output when PLL_MODE_SEL =0( PLL_PREDIV_M factor must be set to 0). No meaning when PLL_MODE_SEL =1.  
0: PLL Output = 270MHz 
1: PLL Output = 297MHz </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_Output__equals__270MHz</name>
                  <description>PLL Output = 270MHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_Output__equals__297MHz</name>
                  <description>PLL Output = 297MHz</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_MODE_SEL</name>
              <description>0: Fractional Mode 
1: Integer Mode  When in Fractional mode, the Per Divider M should be set to 0. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Fractional</name>
                  <description>Fractional Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Integer</name>
                  <description>Integer Mode  When in Fractional mode, the Per Divider M should be set to 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_SDM_EN</name>
              <description>0: Disable 
1: Enable </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PLL_FACTOR_N</name>
              <description>PLL Factor N. Factor=0, N=1 Factor=1, N=2 Factor=2, N=3 ...  Factor=127, N=128 </description>
              <bitRange>[14:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_PREDIV_M</name>
              <description>PLL Pre-div Factor M (M = Factor+1). The range is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PLL_VIDEO_PAT_CTRL_REG</name>
          <description>PLL_VIDEO_PAT_CTRL_REG</description>
          <addressOffset>0x288</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF7FFFF</resetMask>
          <fields>
            <field>
              <name>SIG_DELT_PAT_EN</name>
              <description>Sigma-delta Pattern Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SPR_FREQ_MODE</name>
              <description>Spread Frequency Mode.  
00: DC=0 
01: DC=1 
1X: Triangular </description>
              <bitRange>[30:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DC_equals_0</name>
                  <description>DC=0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DC_equals_1</name>
                  <description>DC=1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Triangular</name>
                  <description>Triangular</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_STEP</name>
              <description>Wave Step. </description>
              <bitRange>[28:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FREQ</name>
              <description>Frequency.  
00: 31.5KHz 
01: 32KHz 
10: 32.5KHz 
11: 33KHz </description>
              <bitRange>[18:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_31_point_5KHz</name>
                  <description>31.5KHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32KHz</name>
                  <description>32KHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_5KHz</name>
                  <description>32.5KHz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_33KHz</name>
                  <description>33KHz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAVE_BOT</name>
              <description>Wave Bottom. </description>
              <bitRange>[16:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PS_CNT_REG</name>
          <description>PS Counter Register</description>
          <addressOffset>0x304</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>PS_CNT</name>
              <description>PS Counter. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PS_CTRL_REG</name>
          <description>PS Control Register</description>
          <addressOffset>0x300</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>DEC_SEL</name>
              <description>Device Select </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DET_FIN</name>
              <description>Detect Finish.  
0: Unfinished 
1: Finished  Setting 1 to this bit will clear it. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unfinished</name>
                  <description>Unfinished</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Finished</name>
                  <description>Finished  Setting 1 to this bit will clear it.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLY_SEL</name>
              <description>Delay Select  
0: 1 Cycle 
1: 2 Cycles </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_Cycle</name>
                  <description>1 Cycle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 Cycles</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OSC_SEL</name>
              <description>OSC Select.  
00: IDLE 
01: SVT 
10: LVT 
11: ULVT </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IDLE</name>
                  <description>IDLE</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SVT</name>
                  <description>SVT</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LVT</name>
                  <description>LVT</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ULVT</name>
                  <description>ULVT</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIME_DET</name>
              <description>Time Detect.  
000: 0.5/4 us 
001: 0.5/2 us 
010: 0.5/1 us 
011: 0.5*2us ........... 111:0.5*2^5us </description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0_point_5_slash_4</name>
                  <description>0.5/4 us</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_5_slash_2</name>
                  <description>0.5/2 us</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_5_slash_1</name>
                  <description>0.5/1 us</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_5_times_2us</name>
                  <description>0.5*2us ........... 111:0.5*2^5us</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MOD_EN</name>
              <description>Module Enable.  
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC0_CLK_REG</name>
          <description>SMHC0 Clock Register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 100MHz)  
0: Clock is OFF 
1: Clock is ON.  SCLK = CLK_SRC_SEL / CLK_DIV_RATIO_N / CLK_DIV_RATIO_M . </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.  SCLK = CLK_SRC_SEL / CLK_DIV_RATIO_N / CLK_DIV_RATIO_M .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select  
00: OSC24M 
01: PLL_PERIPH0(2X) 
10: PLL_PERIPH1(2X) 
11: / </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH0(2X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH1(2X)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (n)  
00: /1 
01: /2 
10: /4 
11: /8. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider M is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC1_CLK_REG</name>
          <description>SMHC1 Clock Register</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz)  
0: Clock is OFF 
1: Clock is ON.  SCLK = CLK_SRC_SEL / CLK_DIV_RATIO_N / CLK_DIV_RATIO_M . </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.  SCLK = CLK_SRC_SEL / CLK_DIV_RATIO_N / CLK_DIV_RATIO_M .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select  
00: OSC24M 
01: PLL_PERIPH0(2X) 
10: PLL_PERIPH1(2X) 
11: / </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH0(2X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH1(2X)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre-Divide Ratio (n)  
00: /1 
01: /2 
10: /4 
11: /8. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider M is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC2_CLK_REG</name>
          <description>SMHC2 Clock Register</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz)  
0: Clock is OFF 
1: Clock is ON.  SCLK = CLK_SRC_SEL / CLK_DIV_RATIO_N / CLK_DIV_RATIO_M . </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.  SCLK = CLK_SRC_SEL / CLK_DIV_RATIO_N / CLK_DIV_RATIO_M .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select  
00: OSC24M 
01: PLL_PERIPH0(2X) 
10: PLL_PERIPH1(2X) 
11: / </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH0(2X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_2X_closingparen_</name>
                  <description>PLL_PERIPH1(2X)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (n)  
00: /1 
01: /2 
10: /4 
11: /8. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider M is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI0_CLK_REG</name>
          <description>SPI0 Clock Register</description>
          <addressOffset>0xA0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz)  
0: Clock is OFF 
1: Clock is ON.  SCLK = CLK_SRC_SEL / CLK_DIV_RATIO_N / CLK_DIV_RATIO_M . </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.  SCLK = CLK_SRC_SEL / CLK_DIV_RATIO_N / CLK_DIV_RATIO_M .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select  
00: OSC24M 
01: PLL_PERIPH0(1X) 
10: PLL_PERIPH1(1X) 
11: / </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH0(1X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH1(1X)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (n)  
00: /1 
01: /2 
10: /4 
11: /8. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider M is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI1_CLK_REG</name>
          <description>SPI1 Clock Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8303000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz)  
0: Clock is OFF 
1: Clock is ON.  SCLK= CLK_SRC_SEL / CLK_DIV_RATIO_N / CLK_DIV_RATIO_M . </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.  SCLK= CLK_SRC_SEL / CLK_DIV_RATIO_N / CLK_DIV_RATIO_M .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select  
00: OSC24M 
01: PLL_PERIPH0(1X) 
10: PLL_PERIPH1(1X) 
11: / </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH0(1X)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH1(1X)</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (n)  
00: /1 
01: /2 
10: /4 
11: /8. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider M is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CLK_REG</name>
          <description>TCON0 Clock Register</description>
          <addressOffset>0x118</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8700000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock  
0: Clock is OFF 
1: Clock is ON. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select  
000: PLL_VIDEO  Others: /. </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_VIDEO</name>
                  <description>PLL_VIDEO</description>
                  <value>0b000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider M is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_CLK_REG</name>
          <description>THS Clock Register</description>
          <addressOffset>0x74</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x83000003</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock.  
0: Clock is OFF 
1: Clock is ON  This special clock = THS_CLK_SRC_SEL / THS_CLK_DIV_RATIO . </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON  This special clock = THS_CLK_SRC_SEL / THS_CLK_DIV_RATIO .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>THS_CLK_SRC_SEL</name>
              <description>Clock Source Select  
00: OSC24M 
01: / 
10: / 
11: / </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b00</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>THS_CLK_DIV_RATIO</name>
              <description>THS Clock Divide Ratio.  
00: /1 
01: /2 
10: /4 
11: /6 </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_6</name>
                  <description>/6</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TSC_CLK_REG</name>
          <description>TSC Clock Register</description>
          <addressOffset>0x98</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8F03000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock(Max Clock = 200MHz)  
0: Clock is OFF 
1: Clock is ON.  SCLK = CLK_SRC_SEL / CLK_DIV_RATIO_N / CLK_DIV_RATIO_M . </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.  SCLK = CLK_SRC_SEL / CLK_DIV_RATIO_N / CLK_DIV_RATIO_M .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select  
0000: OSC24M 
0001: PLL_PERIPH0(1X) Others: / </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH0_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH0(1X) Others: /</description>
                  <value>0b0001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock pre-divide ratio (n) The select clock source is pre-divided by 2^n. The divider is 1/2/4/8.  
00: /1 
01: /2 
10: /4 
11: /8 </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock divide ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TVE_CLK_REG</name>
          <description>TVE Clock Register</description>
          <addressOffset>0x120</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8700000F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING</name>
              <description>Gating Special Clock  
0: Clock is OFF 
1: Clock is ON SCLK= CLK_SRC_SEL / CLK_DIV_RATIO_M . </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON SCLK= CLK_SRC_SEL / CLK_DIV_RATIO_M .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SRC_SEL</name>
              <description>Clock Source Select  
000: PLL_DE 
001: PLL_PERIPH1(1X) Others: / </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PLL_DE</name>
                  <description>PLL_DE</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PLL_PERIPH1_openingparen_1X_closingparen_</name>
                  <description>PLL_PERIPH1(1X) Others: /</description>
                  <value>0b001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_M</name>
              <description>Clock Divide Ratio (m) The pre-divided clock is divided by (m+1). The divider is from 1 to 16. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USBPHY_CFG_REG</name>
          <description>USBPHY Configuration Register</description>
          <addressOffset>0xCC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF0F0F</resetMask>
          <fields>
            <field>
              <name>SCLK_GATING_OHCI3</name>
              <description>Gating Special Clock for OHCI3   
0: Clock is OFF 
1: Clock is ON </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_GATING_OHCI2</name>
              <description>Gating Special Clock for OHCI2   
0: Clock is OFF 
1: Clock is ON </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_GATING_OHCI1</name>
              <description>Gating Special Clock for OHCI1   
0: Clock is OFF 
1: Clock is ON </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_GATING_OTG_OHCI0</name>
              <description>Gating Special Clock for USB OTG_OHCI0   
0: Clock is OFF 
1: Clock is ON </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_GATING_USBPHY3</name>
              <description>Gating Special Clock for USB PHY3  
0: Clock is OFF 
1: Clock is ON </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_GATING_USBPHY2</name>
              <description>Gating Special Clock for USB PHY2  
0: Clock is OFF 
1: Clock is ON </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_GATING_USBPHY1</name>
              <description>Gating Special Clock for USB PHY1  
0: Clock is OFF 
1: Clock is ON </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_GATING_USBPHY0</name>
              <description>Gating Special Clock for USB PHY0  
0: Clock is OFF 
1: Clock is ON </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBPHY3_RST</name>
              <description>USB PHY3 Reset Control  
0: Assert 
1: De-assert </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBPHY2_RST</name>
              <description>USB PHY2 Reset Control  
0: Assert 
1: De-assert. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBPHY1_RST</name>
              <description>USB PHY1 Reset Control  
0: Assert 
1: De-assert </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>USBPHY0_RST</name>
              <description>USB PHY0 Reset Control  
0: Assert 
1: De-assert </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>VE_CLK_REG</name>
          <description>VE Clock Register</description>
          <addressOffset>0x13C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80070000</resetMask>
          <fields>
            <field>
              <name>VE_SCLK_GATING</name>
              <description>Gating Special Clock  
0: Clock is OFF 
1: Clock is ON.  SCLK = PLL_VE / CLK_DIV_RATIO_N . </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>Clock is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>Clock is ON.  SCLK = PLL_VE / CLK_DIV_RATIO_N .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_DIV_RATIO_N</name>
              <description>Clock Pre Divide Ratio (N) The select clock source is pre-divided by (n+1). The divider N is from 1 to 8. </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>EMAC</name>
      <description>EMAC</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C30000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>7</dim>
          <dimIncrement>8</dimIncrement>
          <dimIndex>1,2,3,4,5,6,7</dimIndex>
          <name>_N_%s</name>
          <addressOffset>0x58</addressOffset>
          <register>
            <name>ADDRN_HIGH</name>
            <description>ADDRN_HIGH</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0xFFFF</resetValue>
            <resetMask>0xFF00FFFF</resetMask>
            <fields>
              <field>
                <name>MAC_ADDR_CTL</name>
                <description>0: MAC address N(N: 1~7) is not valid, and it will be ignored by the address filter 
1: MAC address N(N:1~7) is valid </description>
                <bitRange>[31:31]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>MAC_address_N_openingparen_N</name>
                    <description>MAC address N(N: 1~7) is not valid, and it will be ignored by the address filter</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>MAC_address_N_openingparen_N_colon_1_tilde_7_closingparen_</name>
                    <description>MAC address N(N:1~7) is valid</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>MAC_ADDR_TYPE</name>
                <description>1: MAC address N(N:1~7) is used to compare with the source address of the received frame 
0: MAC address n(N:1~7) is used to compare with the destination address of the received frame </description>
                <bitRange>[30:30]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>MAC_address_N_openingparen_N_colon_1_tilde_7_closingparen__is_used_to_compare_with_the_source</name>
                    <description>MAC address N(N:1~7) is used to compare with the source address of the received frame</description>
                    <value>0b1</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>MAC_address_n_openingparen_N_colon_1_tilde_7_closingparen__is_used_to_compare_with_the_destination</name>
                    <description>MAC address n(N:1~7) is used to compare with the destination address of the received frame</description>
                    <value>0b0</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>MAC_ADDR_BYTE_CTL</name>
                <description>MAC address byte control mask.  The lower bit of mask controls the lower byte of in MAC address N(N:1~7). When the bit of mask is 1, do not compare the corresponding byte. </description>
                <bitRange>[29:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>MAC_ADDR_N_HIGH</name>
                <description>The upper 16bits of the MAC address N(N:1~7). </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>ADDRN_LOW</name>
            <description>ADDRN_LOW</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0xFFFFFFFF</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>MAC_ADDR_N_LOW</name>
                <description>The lower 32bits of MAC address N(N:1~7). </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>ADDR0_HIGH</name>
          <description>ADDR0_HIGH</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0xFFFF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>MAC_ADDR_0_HIGH</name>
              <description>The upper 16bits of the 1 MAC address. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ADDR0_LOW</name>
          <description>ADDR0_LOW</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MAC_ADDR_0_LOW</name>
              <description>The lower 32bits of 1 MAC address. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BASIC_CTL_0</name>
          <description>Basic Control 0 Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>SPEED</name>
              <description>00: 1000Mbps 
11: 100Mbps 
10: 10Mbps 
01: Reserved </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1000Mbps</name>
                  <description>1000Mbps</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_100Mbps</name>
                  <description>100Mbps</description>
                  <value>0b11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_10Mbps</name>
                  <description>10Mbps</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOPBACK</name>
              <description>0: Disable  
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DUPLEX</name>
              <description>0: Half-duplex 
1: Full-duplex </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>half_duplex</name>
                  <description>Half-duplex</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>full_duplex</name>
                  <description>Full-duplex</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>BASIC_CTL_1</name>
          <description>Basic Control 1 Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x8000000</resetValue>
          <resetMask>0x3F000003</resetMask>
          <fields>
            <field>
              <name>BURST_LEN</name>
              <description>The burst length of RX and TX DMA transfer.  </description>
              <bitRange>[29:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_TX_PRI</name>
              <description>0: RX DMA and TX DMA have same priority 
1: RX DMA has priority over TX DMA </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_DMA_and</name>
                  <description>RX DMA and TX DMA have same priority</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_DMA</name>
                  <description>RX DMA has priority over TX DMA</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SOFT_RST</name>
              <description>When this bit is set, soft reset all registers and logic. All clock inputs must be valid before soft rest. This bit is cleared internally when the reset operation is completed fully. Before write any register, this bit should read a 0. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_EN</name>
          <description>Interrupt Enable Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F3F</resetMask>
          <fields>
            <field>
              <name>RX_EARLY_INT_EN</name>
              <description>0: Disable early receive interrupt enable 
1: Enable early receive interrupt enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable early receive interrupt enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable early receive interrupt enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_OVERFLOW_INT_EN</name>
              <description>0: Disable overflow interrupt 
1: Enable overflow interrupt </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable overflow interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable overflow interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_TIMEOUT_INT_EN</name>
              <description>0: Disable receive timeout interrupt 
1: Enable receive timeout interrupt </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable receive timeout interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable receive timeout interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_DMA_STOPPED_INT_EN</name>
              <description>0: Disable receive DMA FSM stopped interrupt 
1: Enable receive DMA FSM stopped interrupt </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable receive DMA FSM stopped interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable receive DMA FSM stopped interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_BUF_UA_INT_EN</name>
              <description>0: Disable receive buffer unavailable interrupt 
1: Enable receive buffer unavailable interrupt </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable receive buffer unavailable interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable receive buffer unavailable interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_INT_EN</name>
              <description>0: Disable receive interrupt 
1: Enable receive interrupt </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable receive interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable receive interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_EARLY_INT_EN</name>
              <description>0: Disable early transmit interrupt  
1: Enable early transmit interrupt  </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable early transmit interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable early transmit interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_UNDERFLOW_INT_EN</name>
              <description>0: Disable underflow interrupt 
1: Enable underflow interrupt </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable underflow interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable underflow interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_TIMEOUT_INT_EN</name>
              <description>0: Disable transmit timeout interrupt 
1: Enable transmit timeout interrupt </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable transmit timeout interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable transmit timeout interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_BUF_UA_INT_EN</name>
              <description>0: Disable transmit buffer available interrupt 
1: Enable transmit buffer available interrupt </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable transmit buffer available interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable transmit buffer available interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_DMA_STOPPED_INT_EN</name>
              <description>0: Disable transmit DMA FSM stopped interrupt 
1: Enable transmit DMA FSM stopped interrupt </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable transmit DMA FSM stopped interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable transmit DMA FSM stopped interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_INT_EN</name>
              <description>0: Disable transmit interrupt 
1: Enable transmit interrupt </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable transmit interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable transmit interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_STA</name>
          <description>Interrupt Status Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x13F3F</resetMask>
          <fields>
            <field>
              <name>RGMII_LINK_STA_INT</name>
              <description>When this bit is asserted, the link status of RGMII interface is changed. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_EARLY_INT</name>
              <description>When this bit asserted, the RX DMA had filled the first data buffer of the receive frame.  </description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_OVERFLOW_INT</name>
              <description>When this bit is asserted, the RX FIFO had an overflow error. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_TIMEOUT_INT</name>
              <description>When this bit asserted, the length of receive frame is greater than 2048 bytes(10240 when JUMBO_FRM_EN is set) </description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_DMA_STOPPED_INT</name>
              <description>When this bit asserted, the RX DMA FSM is stopped. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_BUF_UA_INT</name>
              <description>Whe  this asse ted, the RX DMA a t a ui e e t RX des ipto a d RX DMA FSM is suspended. The ownership of next RX descriptor should be changed to RX DMA. The RX DMA FSM will resume when write to DMA_RX_START bit or next receive frame is coming. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_INT</name>
              <description>When this bit is asserted, a frame reception is completed. The RX DMA FSM remains in the running state. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_EARLY_INT</name>
              <description>When this bit asserted , the frame is transmitted to FIFO totally. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_UNDERFLOW_INT</name>
              <description>When this bit is asserted, the TX FIFO had an underflow error. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_TIMEOUT_INT</name>
              <description>When this bit is asserted, the transmitter had been excessively active. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_BUF_UA_INT</name>
              <description>When this asserted, the TX DMA can not acquire next TX descriptor and TX DMA FSM is suspended. The ownership of next TX descriptor should be changed to TX DMA. The TX DMA FSM will resume when write to DMA_TX_START bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_DMA_STOPPED_INT</name>
              <description>When this bit is asserted, the TX DMA FSM is stopped. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_INT</name>
              <description>When this bit is asserted, a frame transmission is completed. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MII_CMD</name>
          <description>Management Interface Command Register</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x71F1F3</resetMask>
          <fields>
            <field>
              <name>MDC_DIV_RATIO_M</name>
              <description>MDC clock divide ration(m). The source of MDC clock is AHB clock.  
000: 16 
001: 32 
010: 64 
011: 128 Others: Reserved </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32</name>
                  <description>32</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_128</name>
                  <description>128 Others: Reserved</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PHY_ADDR</name>
              <description>Select a PHY device from 32 possible candidates. </description>
              <bitRange>[16:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PHY_REG_ADDR</name>
              <description>Select register in the selected PHY device </description>
              <bitRange>[8:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MII_WR</name>
              <description>0: Read register in selected PHY and return data in EMAC_GMII_DATA 
1: Write register in selected PHY using data in EMAC_GMII_DATA </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Read</name>
                  <description>Read register in selected PHY and return data in EMAC_GMII_DATA</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Write</name>
                  <description>Write register in selected PHY using data in EMAC_GMII_DATA</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MII_BUSY</name>
              <description>This bit indicates that a read or write operation is in progress. When prepared the data and register address for a write operation or the register address for a read operation, set this bit and start to access register in PHY.  When this bit is cleared automatically, the read or write operation is over and the data in EMAC_GMII_DATA is valid for a read operation. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>MII_DATA</name>
          <description>Management Interface Data Register</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>MII_DATA</name>
              <description>The 16-bit data to be written to or read from the register in the selected PHY. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RGMII_STA</name>
          <description>RGMII Status Register</description>
          <addressOffset>0xD0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>RGMII_LINK</name>
              <description>The link status of RGMII interface  
0: Down 
1: Up </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Down</name>
                  <description>Down</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Up</name>
                  <description>Up</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RGMII_LINK_SPD</name>
              <description>The link speed of RGMII interface  
00: 2.5 MHz  
01: 25 MHz 
10: 125 MHz </description>
              <bitRange>[2:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2_point_5</name>
                  <description>2.5 MHz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_25</name>
                  <description>25 MHz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_125</name>
                  <description>125 MHz</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RGMII_LINK_MD</name>
              <description>The link Mode of RGMII interface  
0: Half-Duplex 
1: Full-Duplex </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>half_Duplex</name>
                  <description>Half-Duplex</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>full_Duplex</name>
                  <description>Full-Duplex</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_CTL_0</name>
          <description>Receive Control 0 Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF8030000</resetMask>
          <fields>
            <field>
              <name>RX_EN</name>
              <description>Enable receiver   
0: Disable receiver after current reception 
1: Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable receiver after current reception</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_FRM_LEN_CTL</name>
              <description>0: Allow to receive frames less than or equal to 2,048 bytes (10,240 if JUMBO_FRM_EN is set) and cuts off any bytes received after that 
1: Allow to receive frames of up to 16,384 bytes </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Allow_to_receive_frames_less</name>
                  <description>Allow to receive frames less than or equal to 2,048 bytes (10,240 if JUMBO_FRM_EN is set) and cuts off any bytes received after that</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Allow_to_receive_frames_of</name>
                  <description>Allow to receive frames of up to 16,384 bytes</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>JUMBO_FRM_EN</name>
              <description>When set, allows Jumbo frames of 9,018 bytes without reporting a giant frame error in the receive frame status. </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STRIP_FCS</name>
              <description>Whe set, st ip the Pad/FCS field o  e ei ed f a es o l  he the le gth s field value is less than or equal to 1,500 bytes. </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CHECK_CRC</name>
              <description>When set, calculate CRC and check the IPv4 Header Checksum. </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_PAUSE_FRM_MD</name>
              <description>0: Only detect multicast pause frame specified in the 802.3x standard. 
1: In addition to detect multicast pause frame specified in the 802.3x standard, also detect unicast pause frame with address specified in MAC Address 0 High Register and MAC address 0 Low Register. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Only_detect</name>
                  <description>Only detect multicast pause frame specified in the 802.3x standard.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>In</name>
                  <description>In addition to detect multicast pause frame specified in the 802.3x standard, also detect unicast pause frame with address specified in MAC Address 0 High Register and MAC address 0 Low Register.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_FLOW_CTL_EN</name>
              <description>When set, enable the functionality that decode the received pause frame and disable its transmitter for a specified time by pause frame. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_CTL_1</name>
          <description>Receive Control 1 Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC1F0003F</resetMask>
          <fields>
            <field>
              <name>RX_DMA_START</name>
              <description>When set, the RX DMA will not go to work. It is cleared internally and always read a 0. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_DMA_EN</name>
              <description>0: Stop RX DMA after finish receiving current frame  
1: Start and run RX DMA </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop</name>
                  <description>Stop RX DMA after finish receiving current frame</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start_and</name>
                  <description>Start and run RX DMA</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_FIFO_FLOW_CTL</name>
              <description>0: Disable RX flow control 
1: Enable RX flow control based on RX_FLOW_CTL_TH_DEACT and RX_FLOW_CTL_TH_ACT  </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable RX flow control</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable RX flow control based on RX_FLOW_CTL_TH_DEACT and RX_FLOW_CTL_TH_ACT</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_FLOW_CTL_TH_DEACT</name>
              <description>The threshold for deactivating flow control in both half-duplex mode and full-duplex mode.  
00: Full minus 1 KB  
01: Full minus 2 KB  
10: Full minus 3 KB  
11: Full minus 4 KB   </description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Full_minus_1</name>
                  <description>Full minus 1 KB</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_minus_2</name>
                  <description>Full minus 2 KB</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_minus_3</name>
                  <description>Full minus 3 KB</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_minus_4</name>
                  <description>Full minus 4 KB</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_FLOW_CTL_TH_ACT</name>
              <description>The threshold for activating flow control in both half-duplex mode and full-duplex mode.   
00: Full minus 1 KB  
01: Full minus 2 KB 
10: Full minus 3 KB 
11: Full minus 4 KB  </description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Full_minus_1</name>
                  <description>Full minus 1 KB</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_minus_2</name>
                  <description>Full minus 2 KB</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_minus_3</name>
                  <description>Full minus 3 KB</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_minus_4</name>
                  <description>Full minus 4 KB</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_TH</name>
              <description>The threshold value of RX DMA FIFO. When RX_MD is 0, RX DMA starts to transfer data when the size of received frame in RX DMA FIFO is greater than the threshold. In addition, full frames with a length less than the threshold are transferred automatically.   
00: 64  
01: 32 
10: 96 
11: 128 </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32</name>
                  <description>32</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_96</name>
                  <description>96</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_128</name>
                  <description>128</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_ERR_FRM</name>
              <description>0: RX DMA drops frames with error 
1: RX DMA forwards frames with error </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_DMA_drops</name>
                  <description>RX DMA drops frames with error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_DMA_forwards</name>
                  <description>RX DMA forwards frames with error</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_RUNT_FRM</name>
              <description>When set, forward undersized frames with no error and length less than 64bytes. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_MD</name>
              <description>0: RX DMA reads data from RX DMA FIFO to host memory after the number of data in RX DAM FIFO is greater than RX_TH 
1: RX DMA reads data from RX DMA FIFO to host memory after a complete frame has been written to RX DMA FIFO </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_DMA_reads_data_from_RX_DMA_FIFO_to_host_memory_after_the_number</name>
                  <description>RX DMA reads data from RX DMA FIFO to host memory after the number of data in RX DAM FIFO is greater than RX_TH</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_DMA_reads_data_from_RX_DMA_FIFO_to_host_memory_after_a_complete</name>
                  <description>RX DMA reads data from RX DMA FIFO to host memory after a complete frame has been written to RX DMA FIFO</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FLUSH_RX_FRM</name>
              <description>The functionality that flush the frames when receive descriptors/buffers is unavailable.  
0: Enable 
1: Disable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_DMA_CUR_BUF</name>
          <description>RX_DMA_CUR_BUF</description>
          <addressOffset>0xC8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CURRENT_RECEIVE</name>
              <description>The address of current receive DMA buffer </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_DMA_CUR_DESC</name>
          <description>RX_DMA_CUR_DESC</description>
          <addressOffset>0xC4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CURRENT_RECEIVE</name>
              <description>The address of current receive descriptor </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_DMA_LIST</name>
          <description>RX_DMA_LIST</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_DESC_LIST</name>
              <description>The base address of receive descriptor list. It must be 3</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_DMA_STA</name>
          <description>Receive DMA Status Register</description>
          <addressOffset>0xC0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>RX_DMA_STA</name>
              <description>The state of RX DMA FSM.  
000: STOP. When reset or disable RX DMA  
001: RUN_FETCH_DESC. Fetching RX DMA descriptor 
011: RUN_WAIT_FRM. Waiting for frame  
100: SUSPEND. RX descriptor unavailable  
101: RUN_CLOSE_DESC. Closing RX descriptor 
111: RUN_TRANS_DATA. Passing frame from host memory to RX DMA FIFO  010, 110: Reserved  </description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STOP</name>
                  <description>STOP. When reset or disable RX DMA</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_FETCH_DESC</name>
                  <description>RUN_FETCH_DESC. Fetching RX DMA descriptor</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_WAIT_FRM</name>
                  <description>RUN_WAIT_FRM. Waiting for frame</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SUSPEND</name>
                  <description>SUSPEND. RX descriptor unavailable</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_CLOSE_DESC</name>
                  <description>RUN_CLOSE_DESC. Closing RX descriptor</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_TRANS_DATA</name>
                  <description>RUN_TRANS_DATA. Passing frame from host memory to RX DMA FIFO  010, 110: Reserved</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_FRM_FLT</name>
          <description>Receive Frame Filter Register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80033373</resetMask>
          <fields>
            <field>
              <name>DIS_ADDR_FILTER</name>
              <description>0: Enable address filter 
1: Disable address filter  </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable address filter</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable address filter</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIS_BROADCAST</name>
              <description>0: Receive all broadcast frames 
1: Drop all broadcast frames </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive</name>
                  <description>Receive all broadcast frames</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Drop</name>
                  <description>Drop all broadcast frames</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_ALL_MULTICAST</name>
              <description>0: Filter multicast frame according to HASH_MULTICAST 
1: Receive all multicast frames </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Filter</name>
                  <description>Filter multicast frame according to HASH_MULTICAST</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive</name>
                  <description>Receive all multicast frames</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTL_FRM_FILTER</name>
              <description>00, 01: Drop all control frames 
10: Receive all control frames 
11: Receive all control frames when pass the address filter </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HASH_MULTICAST</name>
              <description>0: Filter multicast frames by comparing the DA field with the values in DA MAC address registers 
1: Filter multicast frames according to the hash table </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Filter_multicast_frames_by</name>
                  <description>Filter multicast frames by comparing the DA field with the values in DA MAC address registers</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Filter_multicast_frames_according</name>
                  <description>Filter multicast frames according to the hash table</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HASH_UNICAST</name>
              <description>0: Filter unicast frames by comparing the DA field with the values in DA MAC address registers 
1: Filter unicast frames according to the hash table </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Filter_unicast_frames_by</name>
                  <description>Filter unicast frames by comparing the DA field with the values in DA MAC address registers</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Filter_unicast_frames_according</name>
                  <description>Filter unicast frames according to the hash table</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SA_FILTER_EN</name>
              <description>0: Receive frames and update the result of SA filter 
1: Update the result of SA filter. In addition, if the SA field of received frame does not match the values in SA MAC address registers, drop this frame. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive</name>
                  <description>Receive frames and update the result of SA filter</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update the result of SA filter. In addition, if the SA field of received frame does not match the values in SA MAC address registers, drop this frame.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SA_INV_FILTER</name>
              <description>0: When the SA field of current frame matches the values in SA MAC address registers, it passes the SA filter 
1: When the SA filed of current frame does not match the values in SA MAC address registers,, it passes the SA filter </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>When_the_SA_field</name>
                  <description>When the SA field of current frame matches the values in SA MAC address registers, it passes the SA filter</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>When_the_SA_filed</name>
                  <description>When the SA filed of current frame does not match the values in SA MAC address registers,, it passes the SA filter</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DA_INV_FILTER</name>
              <description>0: Normal filtering of frames is performed  
1: Filter both unicast and multicast frames by comparing DA field in inverse filtering mode </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal filtering of frames is performed</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Filter_both</name>
                  <description>Filter both unicast and multicast frames by comparing DA field in inverse filtering mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FLT_MD</name>
              <description>0: If the HASH_MULTICAST or HASH_UNICAST is set, the frame is passed only when it matches the Hash filter 
1: Receive the frame when it pass the address register filter or the hash filter(set by HASH_MULTICAST or HASH_UNICAST) </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>If</name>
                  <description>If the HASH_MULTICAST or HASH_UNICAST is set, the frame is passed only when it matches the Hash filter</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive</name>
                  <description>Receive the frame when it pass the address register filter or the hash filter(set by HASH_MULTICAST or HASH_UNICAST)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_ALL</name>
              <description>0: Receive the frames that pass the SA/DA address filter 
1: Receive all frames and update the result of address filter(pass or fail) in the receive status word </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_the_frames</name>
                  <description>Receive the frames that pass the SA/DA address filter</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_all</name>
                  <description>Receive all frames and update the result of address filter(pass or fail) in the receive status word</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_HASH_0</name>
          <description>Hash Table 0 Register</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HASH_TAB_0</name>
              <description>The upper 32 bits of hash table for receive frame filter. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RX_HASH_1</name>
          <description>Hash Table 1 Register</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HASH_TAB_1</name>
              <description>The lower 32 bits of hash table for receive frame filter. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_CTL_0</name>
          <description>Transmit Control 0 Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC0000000</resetMask>
          <fields>
            <field>
              <name>TX_EN</name>
              <description>Enable transmitter.  
0: Disable transmitter after current transmission 
1: Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable transmitter after current transmission</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_FRM_LEN_CTL</name>
              <description>0: Allow to transmit frames no more than 2,048 bytes (10,240 if JUMBO_FRM_EN is set) and cut off any bytes after that 
1: Allow to transmit frames of up to 16,384 bytes </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Allow_to_transmit_frames_no_more</name>
                  <description>Allow to transmit frames no more than 2,048 bytes (10,240 if JUMBO_FRM_EN is set) and cut off any bytes after that</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Allow_to_transmit_frames_of</name>
                  <description>Allow to transmit frames of up to 16,384 bytes</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_CTL_1</name>
          <description>Transmit Control 1 Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC0000703</resetMask>
          <fields>
            <field>
              <name>TX_DMA_START</name>
              <description>When set this bit, the TX DMA FSM will go no to work. It is cleared internally and always read a 0. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_DMA_EN</name>
              <description>0: Stop TX DMA after the completion of current frame transmission. 
1: Start and run TX DMA. </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop</name>
                  <description>Stop TX DMA after the completion of current frame transmission.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start_and</name>
                  <description>Start and run TX DMA.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_TH</name>
              <description>The threshold value of TX DMA FIFO. When TX_MD is 0, transmission starts when the size of frame in TX DMA FIFO is greater than the threshold. In addition, full frames with a length less than the threshold are transferred automatically.   
000: 64  
001: 128 
010: 192 
011: 256  Others: Reserved </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_128</name>
                  <description>128</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_192</name>
                  <description>192</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_256</name>
                  <description>256</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_MD</name>
              <description>0: Transmission starts after the number of data in TX DAM FIFO is greater than TX_TH 
1: Transmission starts after a full frame located in TX DMA FIFO </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Transmission_starts_after_the_number</name>
                  <description>Transmission starts after the number of data in TX DAM FIFO is greater than TX_TH</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Transmission_starts_after_a_full</name>
                  <description>Transmission starts after a full frame located in TX DMA FIFO</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FLUSH_TX_FIFO</name>
              <description>The functionality that flush the data in the TX FIFO.  
0: Enable 
1: Disable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_DMA_CUR_BUF</name>
          <description>TX_DMA_CUR_BUF</description>
          <addressOffset>0xB8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CURRENT_TRANSMIT</name>
              <description>The address of current transmit DMA buffer </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_DMA_CUR_DESC</name>
          <description>TX_DMA_CUR_DESC</description>
          <addressOffset>0xB4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CURRENT_TRANSMIT</name>
              <description>The address of current transmit descriptor.  </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_DMA_LIST</name>
          <description>TX_DMA_LIST</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_DESC_LIST</name>
              <description>The base address of transmi </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_DMA_STA</name>
          <description>Transmit DMA Status Register</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>TX_DMA_STA</name>
              <description>The state of Transmit DMA FSM.   
000: STOP: When reset or disable TX DMA 
001: RUN_FETCH_DESC: Fetching TX DMA descriptor 
010: RUN_WAIT_STA: Waiting for the status of TX frame 
011: RUN_TRANS_DATA: Passing frame from host memory to TX DMA FIFO  
111: RUN_CLOSE_DESC: Closing TX descriptor. 
110: SUSPEND: TX descriptor unavailable or TX DMA FIFO underflow  100, 101: Reserved </description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>STOP</name>
                  <description>STOP: When reset or disable TX DMA</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_FETCH_DESC</name>
                  <description>RUN_FETCH_DESC: Fetching TX DMA descriptor</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_WAIT_STA</name>
                  <description>RUN_WAIT_STA: Waiting for the status of TX frame</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_TRANS_DATA</name>
                  <description>RUN_TRANS_DATA: Passing frame from host memory to TX DMA FIFO</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RUN_CLOSE_DESC</name>
                  <description>RUN_CLOSE_DESC: Closing TX descriptor.</description>
                  <value>0b111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SUSPEND</name>
                  <description>SUSPEND: TX descriptor unavailable or TX DMA FIFO underflow  100, 101: Reserved</description>
                  <value>0b110</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TX_FLOW_CTL</name>
          <description>Transmit Flow Control Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x803FFFF3</resetMask>
          <fields>
            <field>
              <name>TX_FLOW_CTL_STA</name>
              <description>This bit indicates a pause frame transmission is in progress. When the configuration of flow control is ready, set this bit to transmit a pause frame in full-duplex mode or activate the backpressure function. After completion of transmission, this bit will be cleared automatically. Before write register TX_FLOW_CTRL, this bit must be read as 0. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_PAUSE_FRM_SLOT</name>
              <description>The threshold of the pause timer at which the input flow control signal is checked for automatic retransmission of pause frame. The threshold values should be always less than the PAUSE_TIME </description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PAUSE_TIME</name>
              <description>The pause time field in the transmitted control frame.  </description>
              <bitRange>[19:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ZQP_FRM_EN</name>
              <description>When set, enable the functionality to generate Zero-Quanta Pause control frame. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_FLOW_CTL_EN</name>
              <description>When set, enable flow control operation to transmit pause frames in full-duplex mode, or enable the back-pressure operation in half-duplex mode.  
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>RTC</name>
      <description>RTC</description>
      <groupName>generic</groupName>
      <baseAddress>0x1F00000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>ALARM0_COUNTER_REG</name>
          <description>Alarm 0 Counter Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ALARM0_COUNTER</name>
              <description>Alarm 0 Counter is based on second. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM0_CUR_VLU_REG</name>
          <description>Alarm 0 Counter Current Value Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>ALARM0_CUR_VLU</name>
              <description>Check Alarm 0 Counter Current Values. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM0_ENABLE_REG</name>
          <description>Alarm 0 Enable Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ALM_0_EN</name>
              <description>Alarm 0 Enable. If this it is set to , th e valid bits of Alarm 0 Counter Register  will down ou t to ze o, a d the ala pe di g it ill e set to .  
0: Disable  
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM0_IRQ_EN</name>
          <description>Alarm 0 IRQ Enable Register</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ALARM0_IRQ_EN</name>
              <description>Alarm 0 IRQ Enable.  
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM0_IRQ_STA_REG</name>
          <description>Alarm 0 IRQ Status Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ALARM0_IRQ_PEND</name>
              <description>Alarm 0 IRQ Pending bit.  
0: No effect 
1: Pending, alarm 0 counter value is reached  If alarm 0 irq enable is set to 1, the pending bit will be sent to the interrupt controller. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, alarm 0 counter value is reached  If alarm 0 irq enable is set to 1, the pending bit will be sent to the interrupt controller.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM1_EN_REG</name>
          <description>ALARM1_EN_REG</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>WK6_ALM1_EN</name>
              <description>Week 6 (Sunday) Alarm 1 Enable.  
0: Disable 
1: Enable  If this it is set to , o l  he the alid its of Alarm 1 Week HH-MM-SS Register  is equal to the bit[20:0] of RTC HH-MM-SS Register  and the bit[31:29] of RTC HH-MM-SS Register is 6, the week 6 alarm irq pending bit ill e set to .  </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  If this it is set to , o l  he the alid its of Alarm 1 Week HH-MM-SS Register  is equal to the bit[20:0] of RTC HH-MM-SS Register  and the bit[31:29] of RTC HH-MM-SS Register is 6, the week 6 alarm irq pending bit ill e set to .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WK5_ALM1_EN</name>
              <description>Week 5 (Saturday) Alarm 1 Enable.  
0: Disable 
1: Enable  If this it is set to , o l  he the alid its of Alarm 1 Week HH-MM-SS Register is equal to the bit[20:0] of RTC HH-MM-SS Register  and the bit[31:29] of RTC HH-MM-SS Register is 5, the week 5 alarm irq pending bit ill e set to . </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  If this it is set to , o l  he the alid its of Alarm 1 Week HH-MM-SS Register is equal to the bit[20:0] of RTC HH-MM-SS Register  and the bit[31:29] of RTC HH-MM-SS Register is 5, the week 5 alarm irq pending bit ill e set to .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WK4_ALM1_EN</name>
              <description>Week 4 (Friday) Alarm 1 Enable.  
0: Disable  
1: Enable  If this it is set to , o l  he the alid its of Alarm 1 Week HH-MM-SS Register is equal to the bit[20:0] of RTC HH-MM-SS Register and the register bit[31:29] of RTC HH-MM-SS Register is 4, the week 4 alarm irq pending bit ill e set to . </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  If this it is set to , o l  he the alid its of Alarm 1 Week HH-MM-SS Register is equal to the bit[20:0] of RTC HH-MM-SS Register and the register bit[31:29] of RTC HH-MM-SS Register is 4, the week 4 alarm irq pending bit ill e set to .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WK3_ALM1_EN</name>
              <description>Week 3 (Thursday) Alarm 1 Enable.  
0: Disable 
1: Enable  If this it is set to , o l  he the alid its of Alarm 1 Week HH-MM-SS Register  is equal to the bit[20:0] of RTC HH-MM-SS Register  and the bit[31:29] of RTC HH-MM-SS Register is 3, the week 3 alarm irq pending bit ill e set to . </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  If this it is set to , o l  he the alid its of Alarm 1 Week HH-MM-SS Register  is equal to the bit[20:0] of RTC HH-MM-SS Register  and the bit[31:29] of RTC HH-MM-SS Register is 3, the week 3 alarm irq pending bit ill e set to .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WK2_ALM1_EN</name>
              <description>Week 2 (Wednesday) Alarm 1 Enable.  
0: Disable 
1: Enable  If this it is set to , o l  he the alid its of Alarm 1 Week HH-MM-SS Register is equal to the bit[20:0] of RTC HH-MM-SS Register  and the bit[31:29] of RTC HH-MM-SS Register is 2, the week 2 alarm irq pending bit ill e set to . </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  If this it is set to , o l  he the alid its of Alarm 1 Week HH-MM-SS Register is equal to the bit[20:0] of RTC HH-MM-SS Register  and the bit[31:29] of RTC HH-MM-SS Register is 2, the week 2 alarm irq pending bit ill e set to .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WK1_ALM1_EN</name>
              <description>Week 1 (Tuesday) Alarm 1 Enable.  
0: Disable 
1: Enable  If this it is set to , o l  he the alid its of Alarm 1 Week HH-MM-SS Register is equal to the bit[20:0] of RTC HH-MM-SS Register and the bit[31:29] of RTC HH-MM-SS Register is 1, the week 1 alarm irq pending bit ill e set to . </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  If this it is set to , o l  he the alid its of Alarm 1 Week HH-MM-SS Register is equal to the bit[20:0] of RTC HH-MM-SS Register and the bit[31:29] of RTC HH-MM-SS Register is 1, the week 1 alarm irq pending bit ill e set to .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WK0_ALM1_EN</name>
              <description>Week 0 (Monday) Alarm 1 Enable.  
0: Disable 
1: Enable  If this bi t is set to , o l  he the alid its of Alarm 1 Week HH-MM-SS Register is equal to the bit[20:0] of RTC HH-MM-SS Register and the bit[31:29] of RTC HH-MM-SS Register is 0, the week 0 alarm irq pending bit ill e set to .  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  If this bi t is set to , o l  he the alid its of Alarm 1 Week HH-MM-SS Register is equal to the bit[20:0] of RTC HH-MM-SS Register and the bit[31:29] of RTC HH-MM-SS Register is 0, the week 0 alarm irq pending bit ill e set to .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM1_IRQ_EN</name>
          <description>Alarm 1 IRQ Enable Register</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ALARM1_IRQ_EN</name>
              <description>Alarm 1 IRQ Enable.  
0: Disable 
1: Enable  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM1_IRQ_STA_REG</name>
          <description>Alarm 1 IRQ Status Register</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ALARM1_WEEK_IRQ_PEND</name>
              <description>Alarm 1 Week (0/1/2/3/4/5/6) IRQ Pending.  
0: No effect 
1: Pending, week counter value is reached  If alarm 1 week irq enable is set to 1, the pending bit will be sent to the interrupt controller.  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, week counter value is reached  If alarm 1 week irq enable is set to 1, the pending bit will be sent to the interrupt controller.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM1_WK_HH_MM_SS</name>
          <description>ALARM1_WK_HH_MM_SS</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>HOUR</name>
              <description>Range from 0~23. </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MINUTE</name>
              <description>Range from 0~59. </description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SECOND</name>
              <description>Range from 0~59. </description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ALARM_CONFIG_REG</name>
          <description>Alarm Configuration Register</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ALARM_WAKEUP</name>
              <description>Configuration of alarm wake up output.  
0: Disable alarm wake up output 
1: Enable alarm wake up output  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable alarm wake up output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable alarm wake up output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CRY_CONFIG_REG</name>
          <description>Crypto Configuration Register</description>
          <addressOffset>0x210</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>KEY_FIELD</name>
              <description>Key Field </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CRY_EN_REG</name>
          <description>Crypto Enable Register</description>
          <addressOffset>0x218</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>CRY_EN</name>
              <description>Crypto Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CRY_KEY_REG</name>
          <description>Crypto Key Register</description>
          <addressOffset>0x214</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CRY_KEY</name>
              <description>Crypto Key </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GPL_HOLD_OUTPUT_REG</name>
          <description>GPL Hold Output Register</description>
          <addressOffset>0x180</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>GPL11_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL11 when the power of system is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on.  
0: Hold disable 
1: Hold enable </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL10_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL10 when the power of system is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on.  
0: Hold disable 
1: Hold enable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL9_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL9 when the power of system is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on.  
0: Hold disable 
1: Hold enable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL8_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL8 when the power of system is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on.  
0: Hold disable 
1: Hold enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL7_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL7 when the power of system is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on.  
0: Hold disable 
1: Hold enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL6_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL6 when the power of system is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on.  
0: Hold disable 
1: Hold enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL5_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL5 when the power of system is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on.  
0: Hold disable 
1: Hold enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL4_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL4 when the power of system is changing. The output must be low level (0) or high level (1) or High-Z; any other output may not hold on.  
0: Hold disable 
1: Hold enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL3_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL3 when the power of system is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on.  
0: Hold disable 
1: Hold enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL2_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL2 when the power of system is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on.  
0: Hold disable 
1: Hold enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL1_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL1 when the power of system is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on.  
0: Hold disable 
1: Hold enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GPL0_HOLD_OUTPUT</name>
              <description>Hold the output of GPIOL0 when the power of system is changing. The output must be low level (0) or high level (1) or High-Z; any other outputs may not hold on.  
0: Hold disable 
1: Hold enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Hold_disable</name>
                  <description>Hold disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Hold_enable</name>
                  <description>Hold enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>8</dim>
          <dimIncrement>4</dimIncrement>
          <name>GP_DATA_REGN[%s]</name>
          <description>GP_DATA_REGN[%s]</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>GP_DATA</name>
              <description>Data [31:0]. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>IC_CHARA_REG</name>
          <description>IC Characteristic Register</description>
          <addressOffset>0x1F0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IC_CHARA</name>
              <description>Key Field. The field should be written to 0x16AA. Writing any other value in this field aborts the write operation. </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ID_DATA</name>
              <description>Return 0x16AA only if the KEY_FIELD is set as 0x16AA when read those bits, otherwise return 0x0. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INTOSC_CLK_PRESCAL_REG</name>
          <description>Internal OSC Clock Prescalar Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0xF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>INTOSC_CLK_PRESCAL</name>
              <description>Internal OSC Clock Prescalar value N.  
0x000: 1 
0x001: 2 
0x002: 3 ...... 
0x1F: 32  </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1</description>
                  <value>0x000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0x001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3</name>
                  <description>3 ......</description>
                  <value>0x002</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32</name>
                  <description>32</description>
                  <value>0x1F</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>LOSC_AUTO_SWT_STA_REG</name>
          <description>LOSC Auto Switch Status Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>LOSC_AUTO_SWT_PEND</name>
              <description>LOSC auto switch pending.  
0: No effect 
1: Auto switches pending  Setting 1 to this bit will clear it. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto</name>
                  <description>Auto switches pending  Setting 1 to this bit will clear it.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOSC_SRC_SEL_STA</name>
              <description>Che ki g LOSC Clo k Sou e Status. N  is the alue of Internal OSC Clock Prescalar Register .  
0: InternalOSC /32/ N  
1: External 32.768KHz OSC  (InternalOSC = 16MHz)  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>InternalOSC</name>
                  <description>InternalOSC /32/ N</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>External</name>
                  <description>External 32.768KHz OSC  (InternalOSC = 16MHz)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>LOSC_CTRL_REG</name>
          <description>Low Oscillator Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x4000</resetValue>
          <resetMask>0xFFFF438D</resetMask>
          <fields>
            <field>
              <name>KEY_FIELD</name>
              <description>Key Field.  This field should be filled with 0x16AA, and then the bit 0 can be written with the new value. </description>
              <bitRange>[31:16]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>LOSC_AUTO_SWT_EN</name>
              <description>LOSC auto switch enable.  
0: Disable  
1: Enable. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ALM_DDHHMMSS_ACCE</name>
              <description>ALARM DD-HH-MM-SS access. After writing the Alarm 1 Week HH-MM-SS Register , this bit is set and it will be cleared until the real writing operation is finished. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_HHMMSS_ACCE</name>
              <description>RTC HH-MM-SS access. After writing the RTC HH-MM-SS Register , this bit is set and it will be cleared until the real writing operation is finished. After writing the RTC HH-MM-SS Register , the RTC HH-MM-SS Register will be refreshed for at most one second. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_YYMMDD_ACCE</name>
              <description>RTC YY-MM-DD access. After writing the RTC YY-MM-DD Register , this bit is set and it will be cleared until the real writing operation is finished. After writing the RTC YY-MM-DD Register , the RTC YY-MM-DD Register  will be refreshed for at most one second. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EXT_LOSC_GSM</name>
              <description>External 32768Hz Crystal GSM.  
00: Low 
01: / 
10: / 11 High </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Low</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/ 11 High</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOSC_SRC_SEL</name>
              <description>LOSC Clo k sou e Sele t. N  is the alue of Internal OSC Clock Prescalar Register .  
0: InternalOSC /32/ N  
1: External 32.768kHz OSC.  (InternalOSC = 16MHz) </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>InternalOSC</name>
                  <description>InternalOSC /32/ N</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>External</name>
                  <description>External 32.768kHz OSC.  (InternalOSC = 16MHz)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>LOSC_OUT_GATING_REG</name>
          <description>LOSC Output Gating Register</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>LOSC_OUT_GATING</name>
              <description>Configuration of LOSC output, and without LOSC output by default.  
0: Enable LOSC output gating 
1: Disable LOSC output gating  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable LOSC output gating</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable LOSC output gating</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_HH_MM_SS_REG</name>
          <description>RTC Hour-Minute-Second Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xE0000000</resetMask>
          <fields>
            <field>
              <name>WK_NO</name>
              <description>Week number.  
000: Monday 
001: Tuesday 
010: Wednesday 
011: Thursday 
100: Friday 
101: Saturday 
110: Sunday 
111: / </description>
              <bitRange>[31:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Monday</name>
                  <description>Monday</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Tuesday</name>
                  <description>Tuesday</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wednesday</name>
                  <description>Wednesday</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Thursday</name>
                  <description>Thursday</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Friday</name>
                  <description>Friday</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Saturday</name>
                  <description>Saturday</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Sunday</name>
                  <description>Sunday</description>
                  <value>0b110</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HOUR</name>
              <description>Range from 0~23 </description>
              <bitRange>[20:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MINUTE</name>
              <description>Range from 0~59  </description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SECOND</name>
              <description>Range from 0~59 </description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_VIO_REG</name>
          <description>RTC_VIO_REG</description>
          <addressOffset>0x190</addressOffset>
          <resetValue>0x4</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>RTC_VIO_REGU</name>
              <description>These bits are useful for regulating the RTC-VIO from 0.776V to 1.535V.  
000: 0.235 * VCC-RTC ( 0.776V) 
001: 0.265 * VCC-RTC (0.8745V) 
010: 0.3 * VCC-RTC (0.99V) 
011: 0.335 * VCC-RTC (1.1055V) 
100: 0.365 * VCC-RTC (1.205V) 
101: 0.4 * VCC-RTC (1.32V) 
110: 0.435 * VCC-RTC (1.4355V) 
111: 0.465 * VCC-RTC (1.535V)  Note: VCC-RTC = 3.3V </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0_point_235</name>
                  <description>0.235 * VCC-RTC ( 0.776V)</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_265</name>
                  <description>0.265 * VCC-RTC (0.8745V)</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_3</name>
                  <description>0.3 * VCC-RTC (0.99V)</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_335</name>
                  <description>0.335 * VCC-RTC (1.1055V)</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_365</name>
                  <description>0.365 * VCC-RTC (1.205V)</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_4</name>
                  <description>0.4 * VCC-RTC (1.32V)</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_435</name>
                  <description>0.435 * VCC-RTC (1.4355V)</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0_point_465</name>
                  <description>0.465 * VCC-RTC (1.535V)  Note: VCC-RTC = 3.3V</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_YY_MM_DD_REG</name>
          <description>RTC Year-Month-Day Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x400000</resetMask>
          <fields>
            <field>
              <name>LEAP</name>
              <description>Leap Year.  
0: Not  
1: Leap year.  This bit can not set by hardware. It should be set or cleared by software. </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not</name>
                  <description>Not</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Leap</name>
                  <description>Leap year.  This bit can not set by hardware. It should be set or cleared by software.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>YEAR</name>
              <description>Year. Range from 0~63. </description>
              <bitRange>[21:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MONTH</name>
              <description>Month. Range from 1~12.  </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DAY</name>
              <description>Day. Range from 1~31. </description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>USB_HCI1</name>
      <description>USB_HCI1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C1B000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>ASYNCLISTADDR</name>
          <description>ASYNCLISTADDR</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>LINK</name>
              <description>Link Pointer (LP) This field contains the address of the next asynchronous queue head to be executed.  These bits correspond to memory address signals [31:5], respectively. </description>
              <bitRange>[31:5]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CAPLENGTH</name>
          <description>CAPLENGTH</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x10</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>CAPLENGTH</name>
              <description>The value in these bits indicates an offset to add to register base to find the beginning of the Operational Register Space. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CONFIGFLAG</name>
          <description>CONFIGFLAG</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>CONFIGURE</name>
              <description>Configure Flag(CF) Host software sets this bit as the last action in its process of configuring the Host Controller. This bit controls the default port-routing control logic as follow: Value Meaning 0 Port routing control logic default-routs each port to an implementation dependent classic host controller. 1 Port routing control logic default-routs all ports to this host controller. The default alue of this field is . </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>FRINDEX</name>
          <description>FRINDEX</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>FRAME</name>
              <description>Frame Index The value in this register increment at the end of each time frame (e.g. micro-frame).Bits[N:3] are used for the Frame List current index. It Means that each location of the frame list is accessed 8 times(frames or  Micro-frames) before moving to the next index. The following illustrates Values of N based on the value of the Frame List Size field in the USBCMD register. USBCMD[Frame List Size] Number Elements N 00b 1024 12 01b 512 11 10b 256 10 11b Reserved  </description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCCPARAMS</name>
          <description>HCCPARAMS</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x780FF</resetMask>
          <fields>
            <field>
              <name>EHCI</name>
              <description>Extended Capabilities Pointer (EECP) This optional field indicates the existence of a capabilities list. A value of 00b indicates no extended capabilities are implemented. A non-zero value in this register indicates the offset in PCI configuration space of the first EHCI extended capabiliby. The pointer value must be 40h or greater if implemented to maintain to consistency of the PCI header defined for this calss of device. The alue of this field is al a s . </description>
              <bitRange>[18:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ISOCHRONOUS</name>
              <description>Isochronous Scheduling Threshold This field indicates, relative to the current position of the executing host controller, where software can reliably update the isochronous schedule. When bit[7] is zero, the value of the least significant 3 bits indicates the number of micro-frames a host controller can hold a set of isochronous data structures(one or more) before flushing the state. When bit[7] is a one, then host software assumes the host controller may cache an isochronous data structure for an entire frame. </description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ASYNCHRONOUS</name>
              <description>Asynchronous Schedule Park Capability If this bit is set to a one, then the host controller supports the park feature for high-speed queue heads in the Asynchronous Schedule. The feature can be disabled or enabled and set to a specific level by using the Asynchronous Schedule Park Mode Enable and Asynchronous Schedule Park Mode Count fields in the USBCMD register. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PROGRAMMABLE</name>
              <description>Programmable Frame List Flag If this bit is set to a zero, then system software must use a frame list length of 1024 elements with this host controller.The USBCMD register  Frame List Size field is a read-only register and should be set to zero. If set to 1,then system software can specify and use the frame list in the  USBCMD register Frame List Size field to cofigure the host controller. The frame list must always aligned on a 4K page boundary.This requirement ensures that the frame list is always physically contiguous. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCIVERSION</name>
          <description>HCIVERSION</description>
          <addressOffset>0x2</addressOffset>
          <resetValue>0x100</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>HCIVERSION</name>
              <description>This is a 16-bit register containing a BCD encoding of the EHCI revision number supported by this host controller. The most significant byte of this register represents a major revision and the least significant byte is the minor revision. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCI_ICR</name>
          <description>HCI_ICR</description>
          <addressOffset>0x800</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x130F03</resetMask>
          <fields>
            <field>
              <name>EHCI_HS_FORCE_SET</name>
              <description>EHCI HS force Set 1 to this field force the ehci enter the high speed mode during bus reset. This field only valid when the bit 1 is set. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSIC_CONNECT_DETECT_IN</name>
              <description>HSIC Connect detect 1 in this field enable the hsic phy to detect device connect pulse on the bus. This field only valid when the bit 1 is set. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HSIC_CONNECT_INTERRUPT_ENABLE_ENABLE</name>
              <description>HSIC Connect Interrupt Enable Enable the HSIC connect interrupt. This field only valid when the bit 1 is set. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AHB_MASTER_INTERFACE_INCR16_ENABLE</name>
              <description>AHB Master interface INCR16 enable  
1: Use INCR16 when appropriate 
0: Do not use INCR16,use other enabled INCRX or unspecified length burst INCR </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Use_INCR16</name>
                  <description>Use INCR16 when appropriate</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Do_not_use_INCR16_comma_use</name>
                  <description>Do not use INCR16,use other enabled INCRX or unspecified length burst INCR</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AHB_MASTER_INTERFACE_INCR8_ENABLE</name>
              <description>AHB Master interface INCR8 enable  
1: Use INCR8 when appropriate 
0: do not use INCR8,use other enabled INCRX or unspecified length burst INCR </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Use_INCR8</name>
                  <description>Use INCR8 when appropriate</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>do_not_use_INCR8_comma_use</name>
                  <description>do not use INCR8,use other enabled INCRX or unspecified length burst INCR</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AHB_MASTER_INTERFACE_BURST_TYPE</name>
              <description>AHB Master interface burst type INCR4 enable  
1: Use INCR4 when appropriate 
0: do not use INCR4,use other enabled INCRX or unspecified length burst INCR </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Use_INCR4</name>
                  <description>Use INCR4 when appropriate</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>do_not_use_INCR4_comma_use</name>
                  <description>do not use INCR4,use other enabled INCRX or unspecified length burst INCR</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AHB_MASTER_INTERFACE_INCRX_ALIGN</name>
              <description>AHB Master interface INCRX align enable  
1: Start INCRx burst only on burst x-align address 
0: Start burst on any double word boundary Note: This bit must enable if any bit of 11:9 is enabled </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Start_INCRx</name>
                  <description>Start INCRx burst only on burst x-align address</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start_burst</name>
                  <description>Start burst on any double word boundary Note: This bit must enable if any bit of 11:9 is enabled</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HSIC</name>
              <description>HSIC   0:/ 1:HSIC This meaning is only valid when the controller is HCI1. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ULPI_BYPASS_ENABLE</name>
              <description>ULPI bypass enable  
1: Enable UTMI interface, disable ULPI interface(SP used utmi    interface) 
0: Enable ULPI interface, disable UTMI interface </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable_UTMI</name>
                  <description>Enable UTMI interface, disable ULPI interface(SP used utmi    interface)</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable_ULPI</name>
                  <description>Enable ULPI interface, disable UTMI interface</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>HCSPARAMS</name>
          <description>HCSPARAMS</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF0FF80</resetMask>
          <fields>
            <field>
              <name>DEBUG_PORT_NUMBER</name>
              <description>Debug Port Number This register identifies which of the host controller ports is the debug port. The value is the port number (one based) of the debug port. This field will al a s e . </description>
              <bitRange>[23:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NUMBER_OF_COMPANION</name>
              <description>Number of Companion Controller (N_CC) This field indicates the number of companion controllers associated with this USB2.0 host controller. A zero in this field indicates there are no companion host controllers. And a value larger than zero in this field indicates there are companion USB1.1 host controller(s). This field ill al a s e . </description>
              <bitRange>[15:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NUMBER_OF_PORT</name>
              <description>Number of  Port per Companion Controller(N_PCC) This field indicates the number of ports supported per companion host controller host controller. It is used to indicate the port routing configuration to system software. This field ill al a s fi  ith . </description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PORT_ROUTING_RULES</name>
              <description>Port Routing Rules This field indicates the method used by this implementation for how all ports are mapped to companion controllers. The value of this field has the following interpretation: Value Meaning 0 The first N_PCC ports are routed to the lowest numbered function companion host controller, the next N_PCC port are routed to the next lowest function companion controller, and so on.   1 The port routing is explicitly enumerated by the first N_PORTS elements of the HCSP-PORTTOUTE array. This field ill al a s e . </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>N_PORTS_THIS</name>
              <description>0x1 N_PORTS This field specifies the number of physical downstream ports implemented on this host controller. The value of this field determines how many port registers are addressable in the Operational Register Space. Valid values are in the range of 0x1 to 0x0f. This field is always 1. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HCSP_PORTROUTE</name>
          <description>HCSP_PORTROUTE</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>HCSP_PORTROUTE</name>
              <description>This optional field is valid only if Port Routing Rules field in HCSPARAMS register is set to a one. This field is used to allow a host controller implementation to explicitly describe to which companion host controller each implemented port is mapped. This field is a 15-element nibble array (each 4 bit is one array element). Each array location corresponds one-to-one with a physical port provided by the host controller (e.g. PORTROUTE [0] corresponds to the first PORTSC port, PORTROUTE [1] to the second PORTSC port, etc.). The value of each element indicates to which of the companion host controllers this port is routed. Only the first N_PORTS elements have valid information. A value of zero indicates that the port is routed to the lowest numbered function companion host controller. A value of one indicates that the port is routed to the next lowest numbered function companion host controller, and so on. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HSIC_STATUS</name>
          <description>HSIC_STATUS</description>
          <addressOffset>0x804</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x10000</resetMask>
          <fields>
            <field>
              <name>HSIC</name>
              <description>Connect Status 1 in this field indicates a device connect pulse being detected on the bus. This field only valid when the EHCI HS force bit and the HSIC Phy Select bit is set. When the HSIC Connect Interrupt Enable is set, 1 in this bit will generate an interrupt to the system. This register is valid on HCI1. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcBulkCurrentED__BCED_</name>
          <description>HcBulkCurrentED__BCED_</description>
          <addressOffset>0x42C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BULKCURRENTED_31_4</name>
              <description>BulkCurrentED[31:4] This is advanced to the next ED after the HC has served the present one. HC continues processing the list from where it left off in the last Frame. When it reaches the end of the Bulk list, HC checks the ControlListFilled of HcControl. If set, it copies the content of HcBulkHeadED to HcBulkCurrentED and clears the bit. If it is not set, it does nothing. HCD is only allowed to modify this register when the BulkListEnable of HcControl is cleared. When set, the HCD only reads the instantaneous value of this register. This is initially set to zero to indicate the end of the Bulk list. </description>
              <bitRange>[31:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BULK_CURRENT_ED</name>
              <description>BulkCurrentED [3:0] Because the general TD length is 16 bytes, the memory structure for the TD must be aligned to a 16-byte boundary. So the lower bits in the PCED, through bit 0 to bit 3 must be zero in this field. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcBulkHeadED_BHED_</name>
          <description>HcBulkHeadED_BHED_</description>
          <addressOffset>0x428</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BHED_31_4</name>
              <description>BHED[31:4] The HcBulkHeadED register contains the physical address of the first Endpoint Descriptor of the Bulk list. HC traverses the Bulk list starting with the HcBulkHeadED pointer. The content is loaded from HCCA during the initialization of HC. </description>
              <bitRange>[31:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BHED_3_0</name>
              <description>BHED[3:0] Because the general TD length is 16 bytes, the memory structure for the TD must be aligned to a 16-byte boundary. So the lower bits in the PCED, through bit 0 to bit 3 must be zero in this field. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcCommandStatus</name>
          <description>HcCommandStatus</description>
          <addressOffset>0x408</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3000F</resetMask>
          <fields>
            <field>
              <name>SCHEDULING_OVERRUN_COUNT</name>
              <description>SchedulingOverrunCount These bits are incremented on each scheduling overrun error. It is initialized to 00b and wraps around at 11b. This will be incremented when a scheduling overrun is detected even if SchedulingOverrun in HcInterruptStatus has already been set. This is used by HCD to monitor any persistent scheduling problem. </description>
              <bitRange>[17:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>OWERSHIP_CHANGE_REQUEST</name>
              <description>OwershipChangeRequest This bit is set by an OS HCD to request a change of control of the HC. When set HC will set the OwnershipChange field in HcInterruptStatus. After the changeover, this bit is cleared and remains so until the next request from OS HCD. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BULKL_LIST_FILLED</name>
              <description>BulklListFilled This bit is used to indicate whether there are any TDs on the Bulk list. It is set by HCD whenever it adds a TD to an ED in the Bulk list.  When HC begins to process the head of the Bulk list, it checks BLF. As long as BulkListFilled is 0, HC will not start processing the Bulk list. If BulkListFilled is 1, HC will start processing the Bulk list and will set BF to 0. If HC finds a TD on the list, then HC will set BulkListFilled to 1 causing the Bulk list processing to continue. If no TD is found on the Bulk list, and if HCD does not set BulkListFilled, then BulkListFilled will still be 0 when HC completes processing the Bulk list and Bulk list processing will stop. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONTROL_LIST_FILLED</name>
              <description>ControlListFilled This bit is used to indicate whether there are any TDs on the Control list. It is set by HCD whenever it adds a TD to an ED in the Control list. When HC begins to process the head of the Control list, it checks CLF. As long as ControlListFilled is 0, HC will not start processing the Control list. If CF is 1, HC will start processing the Control list and will set ControlListFilled to 0. If HC finds a TD on the list, then HC will set ControlListFilled to 1 causing the Control list processing to continue. If no TD is found on the Control list, and if the HCD does not set ControlListFilled, then ControlListFilled will still be 0 when HC completes processing the Control list and Control list processing will stop. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HOST_CONTROLLER_RESET</name>
              <description>HostControllerReset This bit is by HCD to initiate a software reset of HC. Regardless of the functional state of HC, it moves to the USBSuspend state in which most of the operational registers are reset except those stated otherwise; e.g, the InteruptRouting field of HcControl, and no Host bus accesses are allowed. This bit is cleared by HC upon the completion of the reset operation. The reset operation must be completed within 10 ms. This bit, when set, should not cause a reset to the Root Hub and no subsequent reset signaling should be asserted to its downstream ports. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcControl</name>
          <description>HcControl</description>
          <addressOffset>0x404</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FF</resetMask>
          <fields>
            <field>
              <name>REMOTE_WAKEUP_ENABLE</name>
              <description>RemoteWakeupEnable This bit is used by HCD to enable or disable the remote wakeup feature upon the detection of upstream resume signaling. When this bit is set and the ResumeDetected bit in HcInterruptStatus is set, a remote wakeup is signaled to the host system. Setting this bit has no impact on the generation of hardware interrupt. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>REMOTE_WAKEUP_CONNECTED</name>
              <description>RemoteWakeupConnected This bit indicates whether HC supports remote wakeup signaling. If remote wakeup is supported and used by the system, it is the responsibility of system firmware to set this bit during POST. HC clear the bit upon a hardware reset but does not alter it upon a software reset. Remote wakeup signaling of the host system is host-bus-specific and is not described in this specification. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTERRUPT_ROUTING</name>
              <description>InterruptRouting This bit determines the routing of interrupts generated by events registered in HcInterruptStatus. If clear, all interrupt are routed to the normal host bus interrupt mechanism. If set interrupts are routed to the System Management Interrupt. HCD clears this bit upon a hardware reset, but it does not alter this bit upon a software reset. HCD uses this bit as a tag to indicate the ownership of HC. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HOST_CONTROLLER_FUNCTIONAL_STATE</name>
              <description>HostControllerFunctionalState for USB 00b USBReset 01b USBResume 10b USBOperational 11b USBSuspend A transition to USBOperational from another state causes SOF generation to begin 1 ms later. HCD may determine whether HC has begun sending SOFs by reading the StartoFrame field of  HcInterruptStatus. This field may be changed by HC only when in the USBSUSPEND state. HC may move from the USBSUSPEND state to the USBRESUME state after detecting the resume signaling from a downstream port. HC enters USBSUSPEND after a software reset, whereas it enters USBRESET after a hardware reset. The latter also resets the Root Hub and asserts subsequent reset signaling to downstream ports. </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BULK_LIST_ENABLE</name>
              <description>BulkListEnable This bit is set to enable the processing of the Bulk list in the next Frame. If cleared by HCD, processing of the Bulk list does not occur after the next SOF. HC checks this bit whenever it determines to process the list. When disabled, HCD may modify the list. If HcBulkCurrentED is pointing to an ED to be removed, HCD must advance the pointer by updating HcBulkCurrentED before re-enabling processing of the list. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONTROL_LIST_ENABLE</name>
              <description>ControlListEnable This bit is set to enable the processing of the Control list in the next Frame. If cleared by HCD, processing of the Control list does not occur after the next SOF. HC must check this bit whenever it determines to process the list. When disabled, HCD may modify the list. If HcControlCurrentED is pointing to an ED to be removed, HCD must advance the pointer by updating HcControlCurrentED before re-enabling processing of the list. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ISOCHRONOUS_ENABLE</name>
              <description>IsochronousEnable This bit is used by HCD to enable/disable processing of isochronous EDs. While processing the periodic list in a Frame, HC checks the status of this bit when it finds an Isochronous ED (F=1). If set (enabled), HC continues processing the EDs. If cleared (disabled), HC halts processing of the periodic list (which now contains only isochronous EDs) and begins processing the Bulk/Control lists. Setting this bit is guaranteed to take effect in the next Frame (not the current Frame). </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PERIODIC_LIST_ENABLE</name>
              <description>PeriodicListEnable  This bit is set to enable the processing of periodic list in the next Frame. If cleared by HCD, processing of the periodic list does not occur after the next SOF. HC must check this bit before it starts processing the list. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONTROL_BULK_SERVICE_RATIO</name>
              <description>ControlBulkServiceRatio This specifies the service ratio between Control and Bulk EDs. Before processing any of the nonperiodic lists, HC must compare the ratio specified with its internal count on how many nonempty Control EDs have been processed, in determining whether to continue serving another Control ED or switching to Bulk EDs. The internal count will be retained when crossing the frame boundary. In case of reset, HCD is responsible for restoring this value. CBSR No. of Control EDs Over Bulk EDs Served 0                1:1 1                2:1 2                3:1 3                4:1 The default value is 0x0. </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcControlCurrentED_CCED_</name>
          <description>HcControlCurrentED_CCED_</description>
          <addressOffset>0x424</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CCED_31_4</name>
              <description>CCED[31:4] The pointer is advanced to the next ED after serving the present one. HC will continue processing the list from where it left off in the last Frame. When it reaches the end of the Control list, HC checks the ControlListFilled of in HcCommandStatus. If set, it copies the content of HcControlHeadED to HcControlCurrentED and clears the bit. If not set, it does nothing.  HCD is allowed to modify this register only when the ControlListEnable of HcControl is cleared. When set, HCD only reads the instantaneous value of this register. Initially, this is set to zero to indicate the end of the Control list. </description>
              <bitRange>[31:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CCED_3_0</name>
              <description>CCED[3:0] Because the general TD length is 16 bytes, the memory structure for the TD must be aligned to a 16-byte boundary. So the lower bits in the PCED, through bit 0 to bit 3 must be zero in this field. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcControlHeadED_CHED_</name>
          <description>HcControlHeadED_CHED_</description>
          <addressOffset>0x420</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EHCD_31_4</name>
              <description>EHCD[31:4] The HcControlHeadED register contains the physical address of the first  Endpoint Descriptor of the Control list. HC traverse the Control list starting with the HcControlHeadED pointer. The content is loaded from HCCA during the initialization of HC. </description>
              <bitRange>[31:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EHCD_3_0</name>
              <description>EHCD[3:0] Because the general TD length is 16 bytes, the memory structure for the TD must be aligned to a 16-byte boundary. So the lower bits in the PCED, through bit 0 to bit 3 must be zero in this field. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcDoneHead</name>
          <description>HcDoneHead</description>
          <addressOffset>0x430</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HCDONEHEAD_31_4</name>
              <description>HcDoneHead[31:4] When a TD is completed, HC writes the content of HcDoneHead to the NextTD field of the TD. HC then overwrites the content of HcDoneHead with the address of this TD. This is set to zero whenever HC writes the content of this register to HCCA. It also sets the WritebackDoneHead of HcInterruptStatus. </description>
              <bitRange>[31:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HCDONEHEAD_3_0</name>
              <description>HcDoneHead[3:0] Because the general TD length is 16 bytes, the memory structure for the TD must be aligned to a 16-byte boundary. So the lower bits in the PCED, through bit 0 to bit 3 must be zero in this field. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcFmInterval_Register</name>
          <description>HcFmInterval_Register</description>
          <addressOffset>0x434</addressOffset>
          <resetValue>0x2EDF</resetValue>
          <resetMask>0xFFFF3FFF</resetMask>
          <fields>
            <field>
              <name>FRAME_INTERVAL_TOGGLER</name>
              <description>FrameIntervalToggler HCD toggles this bit whenever it loads a new value to FrameInterval. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FS_LARGEST_DATA_PACKET</name>
              <description>FSLargestDataPacket This field specifies a value which is loaded into the Largest Data Packet Counter at the beginning of each frame. The counter value represents the largest amount of data in bits which can be sent or received by the HC in a single transaction at any given time without causing scheduling overrun. The field value is calculated by the HCD. </description>
              <bitRange>[30:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_INTERVAL</name>
              <description>FrameInterval This specifies the interval between two consecutive SOFs in bit times. The nominal value is set to be 11,999. HCD should store the current value of this field before resetting HC. By setting the HostControllerReset field of HcCommandStatus as this will cause the HC to reset this field to its nominal value. HCD may choose to restore the stored value upon the completion of the Reset sequence. </description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcFmNumber</name>
          <description>HcFmNumber</description>
          <addressOffset>0x43C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>FRAME_NUMBER</name>
              <description>FrameNumber This is incremented when HcFmRemaining is re-loaded. It will be rolled over to 0x0 after 0x0ffff. When entering the USBOPERATIONAL state, this will be incremented automatically. The content will be written to HCCA after HC has incremented the FrameNumber at each frame boundary and sent a SOF but before HC reads the first ED in that Frame. After writing to HCCA, HC will set the StartofFrame in HcInterruptStatus. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcFmRemaining</name>
          <description>HcFmRemaining</description>
          <addressOffset>0x438</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80003FFF</resetMask>
          <fields>
            <field>
              <name>FRAME_REMAINING</name>
              <description>FrameRemaining Toggle This bit is loaded from the FrameIntervalToggle field of HcFmInterval whenever FrameRemaining reaches 0. This bit is used by HCD for the synchronization between FrameInterval and FrameRemaining. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FRAM_REMAINING</name>
              <description>FramRemaining This counter is decremented at each bit time. When it reaches zero, it is reset by loading the FrameInterval value specified in HcFmInterval at the next bit time boundary. When entering the USBOPERATIONAL state, HC re-loads the content with the FrameInterval of HcFmInterval and uses the updated value from the next SOF. </description>
              <bitRange>[13:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcHCCA</name>
          <description>HcHCCA</description>
          <addressOffset>0x418</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>HCCA_31_8</name>
              <description>HCCA[31:8] This is the base address of the Host Controller Communication Area. This area is used to hold the control structures and the Interrupt table that are accessed by both the Host Controller and the Host Controller Driver. </description>
              <bitRange>[31:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HCCA_7_0</name>
              <description>HCCA[7:0] The alignment restriction in HcHCCA register is evaluated by examining the number of zeros in the lower order bits. The minimum alignment is 256 bytes, therefore, bits 0 through 7 must always return 0 when read.  </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcInterruptDisable_Register</name>
          <description>HcInterruptDisable_Register</description>
          <addressOffset>0x414</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8000007F</resetMask>
          <fields>
            <field>
              <name>MASTER_INTERRUPT_ENABLE</name>
              <description>MasterInterruptEnable A itte  to this field is ig o ed  HC. A  itte to this field disa les interrupt generation due events specified in the other bits of this register. This field is set after a hardware or software reset. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ROOT_HUB_STATUS_CHANGE</name>
              <description>RootHubStatusChange Interrupt Disable 0 Ignore; 1 Disable interrupt generation due to Root Hub Status Change; </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_NUMBER_OVERFLOW</name>
              <description>FrameNumberOverflow Interrupt Disable 0 Ignore; 1 Disable interrupt generation due to Frame Number Over Flow; </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UNRECOVERABLE_ERROR</name>
              <description>UnrecoverableError Interrupt Disable 0 Ignore; 1 Disable interrupt generation due to Unrecoverable Error; </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RESUME_DETECTED</name>
              <description>ResumeDetected Interrupt Disable 0 Ignore; 1 Disable interrupt generation due to Resume Detected; </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STARTOF_FRAME</name>
              <description>StartofFrame Interrupt Disable 0 Ignore; 1 Disable interrupt generation due to Start of  Flame; </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WRITEBACK_DONE_HEAD</name>
              <description>WritebackDoneHead Interrupt Disable 0 Ignore; 1 Disable interrupt generation due to Write back Done Head; </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCHEDULING_OVERRUN</name>
              <description>SchedulingOverrun Interrupt Disable 0 Ignore; 1 Disable interrupt generation due to Scheduling Overrun; </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcInterruptEnable_Register</name>
          <description>HcInterruptEnable_Register</description>
          <addressOffset>0x410</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8000007F</resetMask>
          <fields>
            <field>
              <name>MASTER_INTERRUPT_ENABLE</name>
              <description>MasterInterruptEnable A  itte to this field is ig o ed  HC. A  itte to this field e a les interrupt generation due to events specified in the other bits of this register. This is used by HCD as Master Interrupt Enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ROOT_HUB_STATUS_CHANGE</name>
              <description>RootHubStatusChange Interrupt Enable 0 Ignore; 1 Enable interrupt generation due to Root Hub Status Change; </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_NUMBER_OVERFLOW</name>
              <description>FrameNumberOverflow Interrupt Enable 0 Ignore; 1 Enable interrupt generation due to Frame Number Over Flow; </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UNRECOVERABLE_ERROR</name>
              <description>UnrecoverableError Interrupt Enable 0 Ignore; 1 Enable interrupt generation due to Unrecoverable Error; </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RESUME_DETECTED</name>
              <description>ResumeDetected Interrupt Enable 0 Ignore; 1 Enable interrupt generation due to Resume Detected; </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STARTOF_FRAME</name>
              <description>StartofFrame Interrupt Enable 0 Ignore; 1 Enable interrupt generation due to Start of  Flame; </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WRITEBACK_DONE_HEAD</name>
              <description>WritebackDoneHead Interrupt Enable 0 Ignore; 1 Enable interrupt generation due to Write back Done Head; </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCHEDULING_OVERRUN</name>
              <description>SchedulingOverrun Interrupt Enable 0 Ignore; 1 Enable interrupt generation due to Scheduling Overrun; </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcInterruptStatus</name>
          <description>HcInterruptStatus</description>
          <addressOffset>0x40C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>ROOT_HUB_STATUS_CHANGE</name>
              <description>RootHubStatusChange This bit is set when the content of HcRhStatus or the content of any of HcRhPortStatus[NumberofDownstreamPort] has changed. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_NUMBER_OVERFLOW</name>
              <description>FrameNumberOverflow This bit is set when the MSb of HcFmNumber (bit 15) changes value, from 0 to 1 or from 1 to 0, and after HccaFrameNumber has been updated. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>UNRECOVERABLE_ERROR</name>
              <description>UnrecoverableError This bit is set when HC detects a system error not related to USB. HC should not proceed with any processing nor signaling before the system error has been corrected. HCD clears this bit after HC has been reset. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RESUME_DETECTED</name>
              <description>ResumeDetected This bit is set when HC detects that a device on the USB is asserting resume signaling. It is the transition from no resume signaling to resume signaling causing this bit to be set. This bit is not set when HCD sets the USBRseume state. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STARTOF_FRAME</name>
              <description>StartofFrame This bit is set by HC at each start of frame and after the update of HccaFrameNumber. HC also generates a SOF token at the same time. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WRITEBACK_DONE_HEAD</name>
              <description>WritebackDoneHead This bit is set immediately after HC has written HcDoneHead to HccaDoneHead. Further updates of the HccaDoneHead will not occur until this bit has been cleared. HCD should only clear this bit after it has saved the content of HccaDoneHead. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCHEDULING_OVERRUN</name>
              <description>SchedulingOverrun This bit is set when the USB schedule for the current Frame overruns and after the update of HccaFrameNumber. A scheduling overrun will also cause the SchedulingOverrunCount of HcCommandStatus to be incremented. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcLSThreshold</name>
          <description>HcLSThreshold</description>
          <addressOffset>0x444</addressOffset>
          <resetValue>0x628</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>LS_THRESHOLD</name>
              <description>LSThreshold This field contains a value which is compared to the FrameRemaining field prior to initiating a Low Speed transaction. The transaction is started only if FrameRemaining   this field. The value is calculated by HCD with the consideration of transmission and setup overhead. </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcPeriodCurrentED</name>
          <description>HcPeriodCurrentED</description>
          <addressOffset>0x41C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PCED_31_4</name>
              <description>PCED[31:4] This is used by HC to point to the head of one of the Periodec list which will be processed in the current Frame. The content of this register is updated by HC after a periodic ED has been processed. HCD may read the content in determining which ED is currently being processed at the time of reading. </description>
              <bitRange>[31:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PCED_3_0</name>
              <description>PCED[3:0] Because the general TD length is 16 bytes, the memory structure for the TD must be aligned to a 16-byte boundary. So the lower bits in the PCED, through bit 0 to bit 3 must be zero in this field. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcPeriodicStatus</name>
          <description>HcPeriodicStatus</description>
          <addressOffset>0x440</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>PERIODIC_START</name>
              <description>PeriodicStart After a hardware reset, this field is cleared. This is then set by HCD during the HC initialization. The value is calculated roughly as 10% off from HcFmInterval. A typical value will be 0x2A3F (0x3e67). When HcFmRemaining reaches the value specified, processing of the periodic lists will have priority over Control/Bulk processing. HC will therefore start processing the Interrupt list after completing the current Control or Bulk transaction that is in progress. </description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcRevision</name>
          <description>HcRevision</description>
          <addressOffset>0x400</addressOffset>
          <resetValue>0x10</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>REVISION</name>
              <description>Revision This read-only field contains the BCD representation of the version of the HCI specification that is implemented by this HC. For example, a value of 0x11 corresponds to version 1.1. All of the HC implementations that are compliant with this specification will have a value of 0x10. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcRhDescriptorA</name>
          <description>HcRhDescriptorA</description>
          <addressOffset>0x448</addressOffset>
          <resetValue>0x2001201</resetValue>
          <resetMask>0xFF001FFF</resetMask>
          <fields>
            <field>
              <name>POWERONTOPOWERGOODTIME</name>
              <description>PowerOnToPowerGoodTime[POTPGT] This byte specifies the duration HCD has to wait before accessing a powered-on port of the Root Hub. It is implementation-specific. The unit of time is 2 ms. The duration is calculated as POTPGT * 2ms. </description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NO_OVER_CURRENT_PROTECTION</name>
              <description>NoOverCurrentProtection This bit describes how the overcurrent status for the Root Hub ports are reported. When this bit is cleared, the OverCurrentProtectionMode field specifies global or per-port reporting. 0  Over-current status is reported collectively for all downstream ports. 1 No overcurrent protection supported. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OVER_CURRENT_PROTECTION_MODE</name>
              <description>OverCurrentProtectionMode This bit describes how the overcurrent status for the Root Hub ports are reported. At reset, these fields should reflect the same mode as PowerSwitchingMode. This field is valid only if the NoOverCurrentProtection field is cleared. 0 Over-current status is reported collectively for all downstream ports. 1 Over-current status is reported on per-port basis. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DEVICE</name>
              <description>Device Type This bit specifies that the Root Hub is not a compound device. The Root Hub is not permitted to be a compound device. This field should always read/write 0. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>POWER_SWITCHING_MODE</name>
              <description>PowerSwitchingMode This bit is used to specify how the power switching of the Root Hub ports is controlled. It is implementation-specific. This field is only valid if the NoPowerSwitching field is cleared. 0 All ports are powered at the same time. 1 Each port is powered individually. This mode allows port power to be controlled by either the global switch or per-port switching. If the PortPowerControlMask bit is set, the port responds only to port power commands (Set/ClearPortPower). If the port mask is cleared, then the port is controlled only by the global power switch (Set/ClearGlobalPower). </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NO_POWER_SWITHCING</name>
              <description>NoPowerSwithcing These bits are used to specify whether power switching is supported or ports are always powered. It is implementation-specific. When this bit is cleared, the PowerSwitchingMode specifies global or per-port switching. 0 Ports are power switched. 1 Ports are always powered on when the HC is powered on. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NUMBER_DOWNSTREAM_PORTS</name>
              <description>NumberDownstreamPorts These bits specify the number of downstream ports supported by the Root Hub. It is implementation-specific. The minimum number of ports is 1. The maximum number of ports supported. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcRhDescriptorB_Register</name>
          <description>HcRhDescriptorB_Register</description>
          <addressOffset>0x44C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PORT_POWER_CONTROL_MASK</name>
              <description>PortPowerControlMask Each bit indicates if a port is affected by a global power control command when PowerSwitchingMode is set. When set, the port's power state is only affected by per-port power control (Set/ClearPortPower). When cleared, the port is controlled by the global power switch (Set/ClearGlobalPower). If the device is configured to global switching mode (PowerSwitchingMode = 0 ), this field is not valid. Bit0 Reserved Bit1 Ganged-power mask on Port #1. Bit2 Ganged-power mask on Port #2. ...   Bit15 Ganged-power mask on Port #15. </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DEVICE_REMOVABLE</name>
              <description>DeviceRemovable Each bit is dedicated to a port of the Root Hub. When cleared, the attached device is removable. When set, the attached device is not removable. Bit0 Reserved Bit1 Device attached to Port #1. Bit2 Device attached to Port #2. ...   Bit15 Device attached to Port #15. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcRhPortStatus</name>
          <description>HcRhPortStatus</description>
          <addressOffset>0x454</addressOffset>
          <resetValue>0x100</resetValue>
          <resetMask>0x1F011F</resetMask>
          <fields>
            <field>
              <name>PORT_RESET_STATUS_CHANGE</name>
              <description>PortResetStatusChange This bit is set at the end of the 10-ms port reset signal. The HCD writes a  to lea this it. W iti g a  has o effe t.  0 port reset is not completed 1 port reset is completed </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PORT_OVER_CURRENT_INDICATOR_CHANGE</name>
              <description>PortOverCurrentIndicatorChange This bit is valid only if overcurrent conditions are reported on a per-port basis. This bit is set when Root Hub changes the Po tO e Cu e tI di ato  it. The HCD ites a  to lea  this it. W iti g a  has o effe t.  0 no change in PortOverCurrentIndicator 1 PortOverCurrentIndicator has changed </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PORT_SUSPEND_STATUS_CHANGE</name>
              <description>PortSuspendStatusChange This bit is set when the full resume sequence has been completed. This sequence includes the 20-s resume pulse, LS EOP, and 3-ms es h o izatio dela . The HCD ites a  to lea this it. W iti g a  has no effect. This bit is also cleared when ResetStatusChange is set. 0 resume is not completed 1 resume completed </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PORT_ENABLE_STATUS_CHANGE</name>
              <description>PortEnableStatusChange This bit is set when hardware events cause the PortEnableStatus bit to be lea ed. Cha ges f o HCD ites do ot set this it. The HCD ites a  to clear this it. W iti g a  has o effe t.  0 no change in PortEnableStatus 1 change in PortEnableStatus </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONNECT_STATUS_CHANGE</name>
              <description>ConnectStatusChange This bit is set whenever a connect or disconnect event occurs. The HCD ites a  to lea this it. W iti g a  has no effect. If CurrentConnectStatus is cleared when a SetPortReset,SetPortEnable, or SetPortSuspend write occurs, this bit is set to force the driver to re-evaluate the connection status since these writes should not occur if the port is disconnected. 0 no change in PortEnableStatus 1 change in PortEnableStatus  Note: If the DeviceRemovable[NDP] bit is set, this bit is set only after a Root Hub reset to inform the system that the device is attached. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_LOW_SPEED_DEVICE_ATTACHED_W_CLEAR_PORT_POWER</name>
              <description>(read)LowSpeedDeviceAttached This bit indicates the speed of the device attached to this port. When set, a Low Speed device is attached to this port. When clear, a Full Speed device is attached to this port. This field is valid only when the CurrentConnectStatus is set. 0 full speed device attached 1 low speed device attached  (write)ClearPortPower The HCD lea s the Po tPo e Status it  iti g a  to this it. W iti g a  has o effe t. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_PORT_POWER_STATUS_W_SET_PORT_POWER</name>
              <description>(read)PortPowerStatus This it efle ts the po t s po e status, egardless of the type of power switching implemented. This bit is cleared if an overcurrent condition is detected. HCD sets this bit by writing SetPortPower or SetGlobalPower. HCD clears this bit by writing ClearPortPower or ClearGlobalPower. Which power control switches are enabled is determined by PowerSwitchingMode and PortPortControlMask[NumberDownstreamPort]. In global switching mode(PowerSwitchingMode=0), only Set/ClearGlobalPower controls this bit. In per-port power switching (PowerSwitchingMode=1), if the PortPowerControlMask[NDP] bit for the port is set, only Set/ClearPortPower commands are enabled. If the mask is not set, only Set/ClearGlobalPower commands are enabled. When port power is disabled, CurrentConnectStatus, PortEnableStatus, PortSuspendStatus, and PortResetStatus should be reset. 0 port power is off 1 port power is on  (write)SetPortPower The HCD ites a  to set the Po tPo e Status it. W iti g a  has o effect.  Note: This it is al a s eads  if po e s it hi g is ot supp orted. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_PORT_RESET_STATUS_W_SET_PORT_RESET</name>
              <description>(read)PortResetStatus When this bit is set by a write to SetPortReset, port reset signaling is asserted. When reset is completed, this bit is cleared when PortResetStatusChange is set. This bit cannot be set if CurrentConnectStatus is cleared. 0 port reset signal is not active 1 port reset signal is active  (write)SetPortReset The HCD sets the po t eset sig ali g  iti g a  to this it. W iti g a  has o effe t. If Cu e tCo e tStatus is lea ed, this  write does not set PortResetStatus, but instead sets ConnectStatusChange. This informs the driver that it attempted to reset a disconnected port. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_PORT_OVER_CURRENT_INDICATOR_W_CLEAR_SUSPEND_STATUS</name>
              <description>(read)PortOverCurrentIndicator This bit is only valid when the Root Hub is configured in such a way that overcurrent conditions are reported on a per-port basis. If per-port overcurrent reporting is not supported, this bit is set to 0. If cleared, all power operations are normal for this port. If set, an overcurrent condition exists on this port. This bit always reflects the overcurrent input signal. 0 no overcurrent condition. 1 overcurrent condition detected.  (write)ClearSuspendStatus The HCD ites a  to i itiate a esu e. W iti g a  has o effe t. A resume is initiated only if PortSuspendStatus is set. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_PORT_SUSPEND_STATUS_W_SET_PORT_SUSPEND</name>
              <description>(read)PortSuspendStatus This bit indicates the port is suspended or in the resume sequence. It is set by a SetSuspendState write and cleared when PortSuspendStatusChange is set at the end of the resume interval. This bit cannot be set if CurrentConnectStatus is cleared. This bit is also cleared when PortResetStatusChange is set at the end of the port reset or when the HC is placed in the USBRESUME state. If an upstream resume is in progress, it should propagate to the HC. 0 port is not suspended 1 port is suspended  (write)SetPortSuspend The HCD sets the Po tSuspe dStatus it  iti g a  to this it. W iti g a  has o effe t. If Cu e tCo e tStatus is lea ed, this ite does ot set PortSuspendStatus; instead it sets ConnectStatusChange. This informs the driver that it attempted to suspend a disconnected port. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_PORT_ENABLE_STATUS_W_SET_PORT_ENABLE</name>
              <description>(read)PortEnableStatus This bit indicates whether the port is enabled or disabled. The Root Hub may clear this bit when an overcurrent condition, disconnect event, switched-off power, or operational bus error such as babble is detected. This change also causes PortEnabledStatusChange to be set. HCD sets this bit by writing SetPortEnable and clears it by writing ClearPortEnable. This bit cannot be set when CurrentConnectStatus is cleared. This bit is also set, if not already, at the completion of a port reset when ResetStatusChange is set or port suspend when SuspendStatusChange is set. 0 port is disabled 1 port is enabled  (write)SetPortEnable T he HCD sets Po tE a leStatus  iti g a . W iti g a  has o effe t. If CurrentConnectStatus is cleared, this write does not set PortEnableStatus, but instead sets ConnectStatusChange. This informs the driver that it attempted to enable a disconnected Port. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_CURRENT_CONNECT_STATUS_W_CLEAR_PORT_ENABLE</name>
              <description>(read)CurrentConnectStatus This bit reflects the current state of the downstream port. 0 No device connected 1 Device connected (write)ClearPortEnable The HCD ites a  to lea the Po tE a leStatus it. W iti g  has o effect. The CurrentConnectStatus is not affected by any write. Note: This it is al a s ead  he  the atta hed de i e is nonremovalble(DviceRemoveable[NumberDownstreamPort]). </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HcRhStatus_Register</name>
          <description>HcRhStatus_Register</description>
          <addressOffset>0x450</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80038003</resetMask>
          <fields>
            <field>
              <name>W_ITE_A_LEA_S</name>
              <description>(write)ClearRemoteWakeupEnable W ite a  lea s De i eRe oteWakeupE a le. W ite a  has o effe t. </description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>OVER_CURRENT_INDICATOR_CHANG</name>
              <description>OverCurrentIndicatorChang This bit is set by hardware when a change has occurred to the OverCurrentIndicator field of this register. The HCD clears this bit by iti g a . W iti g a  has o effe t. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_LOCAL_POWER_STARTUS_CHANGE_W_SET_GLOBAL_POWER</name>
              <description>(read)LocalPowerStartusChange The Root Hub does not support the local power status features, thus, this it is al a s ead as .  (write)SetGlobalPower In global power ode Po e S it hi gMode= , This it is itte to  to turn on power to all ports (clear PortPowerStatus). In per-port power mode, it sets PortPowerStatus only on ports whose Po tPo e Co t olMask it is ot set. W iti g a  has o effe t. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>R_DEVICE_REMOTE_WAKEUP_ENABLE_W_SET_REMOTE_WAKEUP_ENABLE</name>
              <description>(read)DeviceRemoteWakeupEnable This bit enables a ConnectStatusChange bit as a resume event, causing a USBSUSPEND to USBRESUME state transition and setting the ResumeDetected interrupt. 0 ConnectStatusChange is not a remote wakeup event. 1 ConnectStatusChange is a remote wakeup event.  (write)SetRemoteWakeupEnable W iti g a  sets De i eRe o eWakeupE a le. W iti g a  has o effect. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OVER_CURRENT_INDICATOR</name>
              <description>OverCurrentIndicator This bit reports overcurrent conditions when the global reporting is implemented. When set, an overcurrent condition exists. When cleared, all power operations are normal.  If per- po t o e u e t p ote tio is i ple e ted this it is al a s  </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>R_LOCAL_POWER_STATUS_W_CLEAR_GLOBAL_POWER</name>
              <description>(Read)LocalPowerStatus When read, this bit returns the LocalPowerStatus of the Root Hub. The Root Hub does not support the local power status feature; thus, this bit is al a s ead as .  (Write)ClearGlobalPower When write, this bit is operated as the ClearGlobalPower. In global power mode (PowerSwitchingMode=0), T his it is itte  to  to tu  off power to all ports (clear PortPowerStatus). In per-port power mode, it clears PortPowerStatus only on ports whose PortPowerControlMask bit is ot set. W iti g a  has o effe t. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PERIODICLISTBASE</name>
          <description>PERIODICLISTBASE</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>BASE</name>
              <description>Base Address These bits correspond to memory address signals [31:12], respectively. This register contains the beginning address of the Periodic Frame List in the system memory.  System software loads this register prior to starting the schedule execution by the Host Controller. The memory structure referenced by this physical memory pointer is assumed to be 4-K byte aligned. The contents of this register are combined with the Frame Index Register (FRINDEX) to enable the Host Controller to step through the Periodic Frame List in sequence. </description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PORTSC</name>
          <description>PORTSC</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x2000</resetValue>
          <resetMask>0x3FEDFF</resetMask>
          <fields>
            <field>
              <name>WKDSCNNT_E_WRITING</name>
              <description>WKDSCNNT_E Writing this bit to a one enables the port to be sensitive to device disconnects as wake-up events. This field is zero if Port Power is zero. The default alue i this field is . </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WKCNNT_E_WRITING</name>
              <description>WKCNNT_E Writing this bit to a one enable the port to be sensitive to device connects as wake-up events. This field is zero if Port Power is zero. The default alue i this field is . </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PORT_TEST</name>
              <description>Port Test Control The value in this field specifies the test mode of the port. The encoding of the test mode bits are as follow: Bits Test Mode 0000b The port is NOT operating in a test mode. 0001b Test J_STATE 0010b Test K_STATE 0011b Test SE0_NAK 0100b Test Packet 0101b Test FORCE_ENABLE 0110b- 1111b  Reserved The default alue i this field is . </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PORT_OWNER</name>
              <description>Port Owner This bit unconditionally goes to a 0b when the Configured bit in the CONFIGFLAG register makes a 0b to 1b transition. This bit unconditionally goes to 1b whenever the Configured bit is zero. System software uses this field to release ownership of the port to selected host controller (in the event that the attached device is not a high-speed device).Software writes a one to this bit when the attached device is not a high-speed device. A one in this bit means that a companion host controller owns and controls the port. Default Value = 1b. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LINE_STATUS</name>
              <description>Line Status These bits reflect the current logical levels of the D+ (bit11) and D-(bit10) signal lines. These bits are used for detection of low-speed USB devices prior to port reset and enable sequence. This read only field is valid only when the port enable bit is zero and the current connect status bit is set to a one. The encoding of the bits are: Bit[11:10] USB State Interpretation 00b SE0 Not Low-speed device, perform EHCI reset. 10b J-state Not Low-speed device, perform EHCI reset. 01b K-state Low-speed device, release ownership of port. 11b Undefined Not Low-speed device, perform EHCI reset. This value of this field is undefined if Port Power is zero. </description>
              <bitRange>[11:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PORT_RESET</name>
              <description>Port Reset 1=Port is in Reset. 0=Port is not in Reset. Default = 0. When software writes a one to this bit (from a zero), the bus reset sequence as defined in the USB Specification Revision 2.0 is started. Software writes a zero to this bit to terminate the bus reset sequence. Software must keep this bit at a one long enough to ensure the reset sequence, as specified in the USB Specification Revision 2.0, completes. Notes: when software writes this bit to a one , it must also write a zero to the Port Enable bit. Note that when software writes a zero to this bit there may be a delay before the bit status changes to a zero. The bit status will not read as a zero until after the reset has completed. If the port is in high-speed mode after reset is complete, the host controller will automatically enable this port (e.g. set the Port Enable bit to a one). A host controller must terminate the reset and stabilize the state of the port within 2 milliseconds of software transitioning this bit from a one to a zero. For example: if the port detects that the attached device is high-speed during reset, then the host controller must have the port in the enabled state with 2ms of software writing this bit to a zero. The HC Halted bit in the USBSTS register should be a zero before software attempts to use this bit. The host controller may hold Port Reset asserted to a one when the HC Halted bit is a one. This field is zero if Port Power is zero. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SUSPEND_PORT</name>
              <description>Suspend Port Enabled Bit and Suspend bit of this register define the port states as follows: Bits[Port Enables, Suspend] Port State      0x Disable      10 Enable      11 Suspend When in suspend state, downstream propagation of data is blocked on this port, except for port reset. The blocking occurs at the end of the current transaction, if a transaction was in progress when this bit was written to 1. In the suspend state, the port is sensitive to resume detection. Not that the bit status does not change until the port is suspend and that there may be a delay in suspending a port if there is a transaction currently in progress on the USB. A write of zero to this bit is ignored by the host controller. The host controller will unconditionally set this bit to a zero when:  Soft a e sets t he Force Port Resume bit to a zero(from a one).  Soft a e sets the Po t Reset it to a o e f o a ze o .  If host software sets this bit to a one when the port is not enabled(i.e. Port enabled bit is a zero), the results are undefined. This field is zero if Port Power is zero. The default alue i this field is . </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCE_PORT</name>
              <description>Force Port Resume 1 = Resume detected/driven on port. 0 = No resume (K-state) detected/   driven on port. Default = 0. This functionality defined for manipulating this bit depends on the value of the Suspend bit. For example, if the port is not suspend and software transitions this bit to a one, then the effects on the bus are undefined. Software sets this bit to a 1 drive resume signaling. The Host Controller sets this bit to a 1 if a J-to-K transition is detected while the port is in the Suspend state. When this bit transitions to a one because a J-to-K transition is detected, the Port Change Detect bit in the USBSTS register is also set to a one. If software sets this bit to a one, the host controller must not set the Port Change Detect bit. Note that when the EHCI controller owns the port, the resume sequence follows the defined sequence documented in the USB Specification Revision 2.0. The resume signaling (Full- speed K is d i e on the port as long as this remains a one. Software must appropriately time the Resume and set this bit to a zero when the appropriate amount of time has elapsed. Writing a zero (from one) causes the port to return high-speed mode (forcing the bus below the port into a high-speed idle). This bit will remain a one until the port has switched to high-speed idle. The host controller must complete this transition within 2 milliseconds of software setting this bit to a zero. This field is zero if Port Power is zero. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>OVER_CURRENT_CHANGE</name>
              <description>Over-current Change Default = 0. This bit gets set to a one when there is a change to Over-current Active. Software clears this bit by writing a one to this bit position. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>OVER_CURRENT_ACTIVE</name>
              <description>Over-current Active 0 = This port does not have an over-current condition. 1 = This port currently has an over-current condition. This bit will automatically transition from a one to a zero when the over current condition is removed. The default alue of this it is . </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PORT_ENABLE/DISABLE</name>
              <description>Port Enable/Disable Change Default = 0. 1 = Port enabled/disabled status has changed. 0 = No change. For the root hub, this bit gets set to a one only when a port is disabled due to the appropriate conditions existing at the EOF2 point (See Chapter 11 of the USB Specification for the definition of a Port Error). Software clears this bit by writing a 1 to it. This field is zero if Port Power is zero. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>PORT_ENABLED/DISABLED</name>
              <description>Port Enabled/Disabled 1=Enable, 0=Disable. Ports can only be enabled by the host controller as a part of the reset and enable. Software cannot enable a port by writing a one to this field. The host controller will only set this bit to a one when the reset sequence determines that the attached device is a high-speed device. Ports can be disabled by either a fault condition(disconnect event or other fault condition) or by host software. Note that the bit status does not change until the port state actually changes. There may be a delay in disabling or enabling a port due to other host controller and bus events.  When the port is disabled, downstream propagation of data is blocked on this port except for reset. The default alue of this field is .  This field is zero if Port Power is zero. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONNECT_STATUS</name>
              <description>Connect Status Change 1=Change in Current Connect Status, 0=No change, Default=0. In di ates a ha ge has o u ed i  the po t s Cu e t Co e t Status. The host controller sets this bit for all changes to the port device connect status, even if system software has not cleared an existing connect status change. For example, the insertion status changes twice before system software has lea ed the ha ged o ditio , hu ha d a e ill e setti g a al ead -set bit. Software sets this bit to 0 by writing a 1 to it. This field is zero if Port Power is zero. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>CURRENT_CONNECT</name>
              <description>Current Connect Status Device is present on port when the value of this field is a one, and no device is present on port when the value of this field is a zero. This value reflects the current state of the port, and may not correspond directly to the event that caused the Connect Status Change(Bit 1) to be set. This field is zero if Port Power zero. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USBCMD</name>
          <description>USBCMD</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x80000</resetValue>
          <resetMask>0xFF0BFF</resetMask>
          <fields>
            <field>
              <name>INTERRUPT_THRESHOLD_CONTROL_THE_VALUE</name>
              <description>Interrupt Threshold Control The value in this field is used by system software to select the maximum rate at which the host controller will issue interrupts. The only valid values are defined below: Value Minimum Interrupt Interval 0x00 Reserved 0x01 1 micro-frame 0x02 2 micro-frame 0x04 4 micro-frame 0x08 8 micro-frame(default, equates to 1 ms) 0x10 16 micro-frame(2ms) 0x20 32 micro-frame(4ms) 0x40 64 micro-frame(8ms) Any other value in this register yields undefined results. The default value in this field is 0x08 . Software modifications to this bit while HC Halted bit is equal to zero results in undefined behavior. </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ASYNCHRONOUS_SCHEDULE_PARK_MODE_ENABLE</name>
              <description>Asynchronous Schedule Park Mode Enable If the Asynchronous Park Capability bit in the HCCPARAMS register is a one, then this bit defaults to a 1 and is R/W. Otherwise the bit must be a zero and is Read Only. Software uses this bit to enable or disable Park mode. When this bit is one, Park mode is enabled. When this bit is zero, Park mode is disabled. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ASYNCHRONOUS_SCHEDULE_PARK_MODE_COUNT</name>
              <description>Asynchronous Schedule Park Mode Count Asynchronous Park Capability bit in the HCCPARAMS register is a one.Then this field defaults to 0x3 and is W/R. Otherwise it defaults to zero and is R. It contains a count of the number of successive transactions the host controller is allowed to execute from a high-speed queue head on the Asynchronous schedule before continuing traversal of the Asynchronous schedule. Valid value are 0x1 to 0x3.Software must not write a zero to this bit when Park Mode Enable is a one as it will result in undefined behavior. </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LIGHT_HOST_CONTROLLER_RESET_THIS</name>
              <description>Light Host Controller Reset This control bit is not required. If implemented, it allows the driver to reset the EHCI controller without affecting the state of the ports or relationship to the companion host controllers. For example, the PORSTC registers should not be reset to their default values and the CF bit setting should not go to zero (retaining port ownership relationships). A host software read of this bit as zero indicates the Light Host Controller Reset has completed and it si safe for software to re-initialize the host controller. A host software read of this bit as a one indicates the Light Host  </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTERRUPT_ON_ASYNC_ADVANCE_DOORBELL</name>
              <description>Interrupt on Async Advance Doorbell This bit is used as a doorbell by software to tell the host controller to issue an interrupt the next time it advances asynchronous schedule. Soft- Ware must write a 1 to this bit to ring the doorbell. When the host controller has evicted all appropriate cached schedule state, it sets the Interrupt on Async Advance status bit in the USBSTS. if the Interrupt on Async Advance Enable bit in the USBINTR register is a one then the host controller will assert an interrupt at the next interrupt threshold. The host controller sets this bit to a zero after it has set the Interrupt on Async Advance status bit in the USBSTS register to a one. Software should not write a one to this bit when the asynchronous schedule is disabled. Doing so will yield undefined results. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ASYNCHRONOUS_SCHEDULE_ENABLE_THIS_BIT</name>
              <description>Asynchronous Schedule Enable This bit controls whether the host controller skips processing the Asynchronous Schedule. Values mean: Bit Value Meaning 0 Do not process the Asynchronous Schedule.  1 Use the ASYNLISTADDR register to access the Asynchronous Schedule. The default alue of this field is . </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PERIODIC_SCHEDULE_ENABLE_THIS_BIT</name>
              <description>Periodic Schedule Enable This bit controls whether the host controller skips processing the Periodic Schedule. Values mean: Bit Value Meaning 0 Do not process the Periodic Schedule.  1 Use the PERIODICLISTBASE register to access the Periodic Schedule. The default alue of this field is . </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_LIST_SIZE_THIS_FIELD</name>
              <description>Frame List Size This field is R/W only if Programmable Frame List Flag in the HCCPARAMS registers is set to a one. This field specifies the size of the  Frame list. The size the frame list controls which bits in the Frame Index  Register should be used for the Frame List Current index. Values mean: Bits Meaning 00b 1024 elements(4096bytes)Default 01b 512 elements(2048byts) 10b 256 elements(1024bytes)For resource-constrained condition 11b reserved The default alue is . </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HOST_CONTROLLER_RESET_THIS_CONTROL</name>
              <description>Host Controller Reset This control bit is used by software to reset the host controller. The effects of this on Root Hub registers are similar to a Chip Hardware Reset. When software writes a one to this bit, the Host Controller resets its internal pipelines, timers, counters, state machines, etc. to their initial value. Any transaction currently in progress on USB is immediately terminated. A USB reset is not driven on downstream ports. All operational registers, including port registers and port state machines are set to their initial values. Port ownership reverts to the companion host controller(s). Software must reinitialize the host controller as described in Section 4.1 of the CHEI Specification in order to return the host controller to an operational state. This bit is set to zero by the Host Controller when the reset process is complete. Software cannot terminate the reset process early by writing a zero to this register. Software should not set this bit to a one when the HC Halted bit in the USBSTS register is a zero. Attempting to reset an actively running host controller will result in undefined behavior. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RUN/STOP_WHEN_SET</name>
              <description>Run/Stop When set to a 1, the Host Controller proceeds with execution of the schedule. When set to 0, the Host Controller completes the current and any actively pipelined transactions on the USB and then halts. The Host Controller must halt within 16 micro-frames after software clears this bit. The HC Halted bit indicates when the Host Controller has finished its pending pipelined transactions and has entered the stopped state. Software must not write a one to this field unless the Host Controller is in the Halt State. The default value is 0x0. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USBINTR</name>
          <description>USBINTR</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>INTERRUPT_ON_ASYNC_ADVANCE_ENABLE</name>
              <description>Interrupt on Async Advance Enable When this bit is 1, and the Interrupt on Async Advance bit in the USBSTS register is 1, the host controller will issue an interrupt at the next interrupt threshold. The interrupt is acknowledged by software clearing the Interrupt on Async Advance bit. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HOST_SYSTEM_ERROR_ENABLE</name>
              <description>Host System Error Enable When this bit is 1, and the Host System Error Status bit in the USBSTS register is 1, the host controller will issue an interrupt. The interrupt is acknowledged by software clearing the Host System Error bit. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRAME_LIST_ROLLOVER_ENABLE</name>
              <description>Frame List Rollover Enable When this bit is 1, and the Frame List Rollover bit in the USBSTS register is 1, the host controller will issue an interrupt. The interrupt is acknowledged by software clearing the Frame List Rollover bit. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PORT_CHANGE_INTERRUPT_ENABLE</name>
              <description>Port Change Interrupt Enable When this bit is 1, and the Port Chang Detect bit in the USBSTS register is 1, the host controller will issue an interrupt. The interrupt is acknowledged by software clearing the Port Chang Detect bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_ERROR_INTERRUPT_ENABLE</name>
              <description>USB Error Interrupt Enable When this bit is 1, and the USBERRINT bit in the USBSTS register is 1,the host controller will issue an interrupt at the next interrupt threshold. The interrupt is acknowledged by software clearing the USBERRINT bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_INTERRUPT_ENABLE_WHEN_THIS</name>
              <description>USB Interrupt Enable When this bit is 1, and the USBINT bit in the USBSTS register is 1,the host controller will issue an interrupt at the next interrupt threshold. The interrupt is acknowledged by software clearing the USBINT bit </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USBSTS</name>
          <description>USBSTS</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x1000</resetValue>
          <resetMask>0xF03F</resetMask>
          <fields>
            <field>
              <name>ASYNCHRONOUS_SCHEDULE_STATUS_THE_BIT</name>
              <description>Asynchronous Schedule Status The bit reports the current real status of Asynchronous Schedule. If this bit is a zero then the status of the Asynchronous Schedule is disabled. If this bit is a one then the status of the Asynchronous Schedule is enabled. The Host Controller is not required to immediately disable or enable the Asynchronous Schedule when software transitions the Asynchronous Schedule Enable bit in the USBCMD register. When this bit and the Asynchronous Schedule Enable bit are the same value, the Asynchronous Schedule is either enabled (1) or disabled (0).  </description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PERIODIC_SCHEDULE_STATUS_THE_BIT</name>
              <description>Periodic Schedule Status The bit reports the current real status of the Periodic Schedule. If this bit is a zero then the status of the Periodic Schedule is disabled. If this bit is a one then the status of the Periodic Schedule is enabled. The Host Controller is not required to immediately disable or enable the Periodic Schedule when software transitions the Periodic Schedule Enable bit in the USBCMD register. When this bit and the Periodic Schedule Enable bit are the same value, the Periodic Schedule is either enabled (1) or disabled (0). </description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RECLAMATION_THIS_IS_A_READ_ONLY</name>
              <description>Reclamation This is a read-only status bit, which is used to detect an empty asynchronous schedule. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>HC_HALTED_THIS_BIT</name>
              <description>HC Halted This bit is a zero whenever the Run/Stop bit is a one. The Host Controller Sets this bit to one after it has stopped executing as a result of the Run/Stop bit being set to 0, either by software or by the Host Controller Hardware (e.g. internal error). The default alue is . </description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>INTERRUPT_ON_ASYNC_ADVANCE_SYSTEM</name>
              <description>Interrupt on Async Advance System software can force the host controller to issue an interrupt the next time the host controller advances the asynchronous schedule by writing a one to the Interrupt on Async Advance Doorbell bit in the USBCMD register. This status bit indicates the assertion of that interrupt source. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>HOST_SYSTEM_ERROR_THE_HOST</name>
              <description>Host System Error The Host Controller set this bit to 1 when a serious error occurs during a host system access involving the Host Controller module. When this error occurs, the Host Controller clears the Run/Stop bit in the Command register to prevent further execution of the scheduled TDs. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>FRAME_LIST_ROLLOVER_THE_HOST</name>
              <description>Frame List Rollover The Host Controller sets this bit to a one when the Frame List Index rolls over from its maximum value to zero. The exact value at which the rollover occurs depends on the frame list size. For example, if the frame list size is 1024, the Frame Index Register rolls over every time FRINDEX [13] toggles. Similarly, if the size is 512, the Host Controller sets this bit to a one every time FRINDEX [12] toggles. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>PORT_CHANGE_DETECT_THE_HOST</name>
              <description>Port Change Detect The Host Controller sets this bit to a one when any port for which the Port Owner bit is set to zero has a change bit transition from a zero to a one or a Force Port Resume bit transition from a zero to a one as a result of a J-K transition detected on a suspended port. This bit will also be set as a result of the Connect Status Chang being set to a one after system software has eli uished o e ship of a o e ted po t  iti g a o e to a po t s Po t Owner bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>USB_ERROR_INTERRUPT_THE_HOST</name>
              <description>USB Error Interrupt The Host Controller sets this bit to 1 when completion of USB transaction results in an error condition(e.g. error counter underflow).If the TD on which the error interrupt occurred also had its IOC bit set, both. This bit and USBINT bit are set. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
            <field>
              <name>USB_INTERRUPT_THE_HOST_CONTROLLER</name>
              <description>USB Interrupt The Host Controller sets this bit to a one on the completion of a USB transaction, which results in the retirement of a Transfer Descriptor that had its IOC bit set. The Host Controller also sets this bit to 1 when a short packet is detected (actual number of bytes received was less than the expected number of bytes) </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>clear</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="USB_HCI1">
      <name>USB_HCI2</name>
      <description>USB_HCI2</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C1C000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="USB_HCI1">
      <name>USB_HCI3</name>
      <description>USB_HCI3</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C1D000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>TIMER</name>
      <description>TIMER</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C20C00</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>AVS_CNT0_REG</name>
          <description>AVS Counter 0 Register</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>AVS_CNT0</name>
              <description>Counter 0 for Audio/ Video Sync Application The high 32 bits of the internal 33 bits counter register. The initial value of the internal 33 bits counter register can be set by software. The LSB bit of the 33 bits counter register should be zero when the initial value is updated. It will count from the initial value. The initial value can be updated at any time. It can also be paused by setting AVS_CNT0_PS  to . Whe it is paused, the counter will not increase. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AVS_CNT1_REG</name>
          <description>AVS Counter 1 Register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>AVS_CNT1</name>
              <description>Counter 1 for Audio/ Video Sync Application The high 32 bits of the internal 33 bits counter register. The initial value of the internal 33 bits counter register can be set by software. The LSB bit of the 33 bits counter register should be zero when the initial value is updated. It will count from the initial value. The initial value can be updated at any time. It can also be paused by setting AVS_CNT1_PS  to . Whe it is paused, the counter will not increase. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>AVS_CNT_CTL_REG</name>
          <description>AVS Control Register</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x303</resetMask>
          <fields>
            <field>
              <name>AVS_CNT1_PS</name>
              <description>Audio/Video Sync Counter 1 Pause Control  
0: Not pause 
1: Pause Counter 1. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_pause</name>
                  <description>Not pause</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pause</name>
                  <description>Pause Counter 1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVS_CNT0_PS</name>
              <description>Audio/Video Sync Counter 0 Pause Control  
0: Not pause 
1: Pause Counter 0. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_pause</name>
                  <description>Not pause</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pause</name>
                  <description>Pause Counter 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVS_CNT1_EN</name>
              <description>Audio/Video Sync Counter 1 Enable/ Disable.  The counter source is OSC24M.  
0: Disable 
1: Enable. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AVS_CNT0_EN</name>
              <description>Audio/Video Sync Counter 1 Enable/ Disable.  The counter source is OSC24M.  
0: Disable 
1: Enable. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>AVS_CNT_DIV_REG</name>
          <description>AVS Divisor Register</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0x5DB05DB</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>AVS_CNT1_D</name>
              <description>Divisor N for AVS Counter 1 AVS CN1 CLK=24MHz/Divisor_N1. Divisor N1 = Bit [27:16] + 1.  The number N is from 1 to 0x7ff. The zero value is reserved. The internal 33 bits counter engine will maintain another 12 bits counter. The 12 bits counter is used for counting the cycle number of one 24MHz clock. When the 12 bits counter reaches (&gt;= N) the divisor value, the internal 33 bits counter register will increase 1 and the 12 bits counter will reset to zero and restart again. </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AVS_CNT0_D</name>
              <description>Divisor N for AVS Counter 0 AVS CN0 CLK=24MHz/Divisor_N0. Divisor N0 = Bit [11:0] + 1  The number N is from 1 to 0x7ff. The zero value is reserved. The internal 33 bits counter engine will maintain another 12 bits counter. The 12 bits counter is used for counting the cycle number of one 24MHz clock. When the 12 bits counter reaches (&gt;= N) the divisor value, the internal 33 bits counter register will increase 1 and the 12 bits counter will reset to zero and restart again. </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR0_CTRL_REG</name>
          <description>Timer 0 Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x4</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>TMR0_MODE</name>
              <description>Timer 0 mode.  
0: Continuous mode. When interval value reached, the timer will not disable automatically. 
1: Single mode. When interval value reached, the timer will disable automatically. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Continuous</name>
                  <description>Continuous mode. When interval value reached, the timer will not disable automatically.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Single</name>
                  <description>Single mode. When interval value reached, the timer will disable automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR0_CLK_PRES</name>
              <description>Select the pre-scale of timer 0 clock source.  
000: /1 
001: /2 
010: /4 
011: /8 
100: /16 
101: /32 
110: /64 
111: /128 </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_16</name>
                  <description>/16</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_32</name>
                  <description>/32</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_64</name>
                  <description>/64</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_128</name>
                  <description>/128</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR0_CLK_SRC</name>
              <description>Timer 0 Clock Source.   
00: Internal OSC / N 
01: OSC24M. 
10: / 
11: /  Internal OSC / N is about 32KHz. </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Internal</name>
                  <description>Internal OSC / N</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M.</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/  Internal OSC / N is about 32KHz.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR0_RELOAD</name>
              <description>Timer 0 Reload.  
0: No effect 
1: Reload timer 0 Interval value.  After the bit is set, it can not be written again before it is cleared automatically. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToSet</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reload</name>
                  <description>Reload timer 0 Interval value.  After the bit is set, it can not be written again before it is cleared automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR0_EN</name>
              <description>Timer 0 Enable.  
0: Stop/Pause 
1: Start.  When the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0.  If the current counter does not reach the zero, the TMR0_EN  bit is set to , the u e t alue ou te  ill pause. At least ait fo   les, the TMR0_EN bit can be set to 1. In timer pause state, Timer 0 Interval Value Register can be modified. If the timer is started again, and the software hope Timer 0 Current Value Register to down-count from the new interval value, the Timer 0 Reload bit and the Timer 0 Enable bit should be set to 1 at the same time. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop_slash_Pause</name>
                  <description>Stop/Pause</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start</name>
                  <description>Start.  When the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0.  If the current counter does not reach the zero, the TMR0_EN  bit is set to , the u e t alue ou te  ill pause. At least ait fo   les, the TMR0_EN bit can be set to 1. In timer pause state, Timer 0 Interval Value Register can be modified. If the timer is started again, and the software hope Timer 0 Current Value Register to down-count from the new interval value, the Timer 0 Reload bit and the Timer 0 Enable bit should be set to 1 at the same time.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR0_CUR_VALUE_REG</name>
          <description>Timer 0 Current Value Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TMR0_CUR_VALUE</name>
              <description>Timer 0 Current Value. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR0_INTV_VALUE_REG</name>
          <description>Timer 0 Interval Value Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TMR0_INTV_VALUE</name>
              <description>Timer 0 Interval Value. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR1_CTRL_REG</name>
          <description>Timer 1 Control Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x4</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>TMR1_MODE</name>
              <description>Timer 1 mode.  
0: Continuous mode. When interval value reached, the timer will not disable automatically. 
1: Single mode. When interval value reached, the timer will disable automatically. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Continuous</name>
                  <description>Continuous mode. When interval value reached, the timer will not disable automatically.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Single</name>
                  <description>Single mode. When interval value reached, the timer will disable automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR1_CLK_PRES</name>
              <description>Select the pre-scale of timer 1 clock source.  
000: /1 
001: /2 
010: /4 
011: /8 
100: /16 
101: /32 
110: /64 
111: /128 </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_16</name>
                  <description>/16</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_32</name>
                  <description>/32</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_64</name>
                  <description>/64</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_128</name>
                  <description>/128</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR1_CLK_SRC</name>
              <description>00: Internal OSC / N 
01: OSC24M. 
10: / 
11: /.  Internal OSC / N is about 32KHz. </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Internal</name>
                  <description>Internal OSC / N</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M.</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_</name>
                  <description>/.  Internal OSC / N is about 32KHz.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR1_RELOAD</name>
              <description>Timer 1 Reload.  
0: No effect  
1: Reload timer 1 Interval value.  Afte  the it is set, it a  ot e itte  agai  efo e it s lea ed automatically. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToSet</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reload</name>
                  <description>Reload timer 1 Interval value.  Afte  the it is set, it a  ot e itte  agai  efo e it s lea ed automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR1_EN</name>
              <description>Timer 1 Enable.  
0: Stop/Pause  
1: Start.  If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the TMR1_EN  it is set to , the current value counter will pause. At least wait for 2 cycles, the TMR1_EN  bit can be set to 1. In timer pause state, Timer 1 Interval Value Register can be modified. If the timer is started again, and the software hope Timer 1 Current Value Register  to down-count from the new interval value, the Timer 1 Reload  bit and the Timer 1 Enable bit should be set to 1 at the same time. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop_slash_Pause</name>
                  <description>Stop/Pause</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start</name>
                  <description>Start.  If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the TMR1_EN  it is set to , the current value counter will pause. At least wait for 2 cycles, the TMR1_EN  bit can be set to 1. In timer pause state, Timer 1 Interval Value Register can be modified. If the timer is started again, and the software hope Timer 1 Current Value Register  to down-count from the new interval value, the Timer 1 Reload  bit and the Timer 1 Enable bit should be set to 1 at the same time.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR1_CUR_VALUE_REG</name>
          <description>Timer 1 Current Value Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TMR1_CUR_VALUE</name>
              <description>Timer 1 Current Value. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR1_INTV_VALUE_REG</name>
          <description>Timer 1 Interval Value Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TMR1_INTV_VALUE</name>
              <description>Timer 1 Interval Value. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR_IRQ_EN_REG</name>
          <description>Timer IRQ Enable Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>TMR1_IRQ_EN</name>
              <description>Timer 1 Interrupt Enable.  
0: No effect.  
1: Timer 1 interval value reached interrupt enable. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToSet</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Timer</name>
                  <description>Timer 1 interval value reached interrupt enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR0_IRQ_EN</name>
              <description>Timer 0 Interrupt Enable.  
0: No effect.  
1: Timer 0 interval value reached interrupt enable. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToSet</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Timer</name>
                  <description>Timer 0 interval value reached interrupt enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TMR_IRQ_STA_REG</name>
          <description>Timer Status Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>TMR1_IRQ_PEND</name>
              <description>Timer 1 IRQ Pending.  Setting 1 to the bit will clear it.  
0: No effect. 
1: Pending, timer 1 interval value is reached. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, timer 1 interval value is reached.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TMR0_IRQ_PEND</name>
              <description>Timer 0 IRQ Pending.  Setting 1 to the bit will clear it.  
0: No effect. 
1: Pending, timer 0 interval value is reached. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending, timer 0 interval value is reached.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>WDOG0_CFG_REG</name>
          <description>Watchdog 0 Configuration Register</description>
          <addressOffset>0xB4</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>WDOG0_CONFIG</name>
              <description>Watchdog0 generates a reset signal   
00: / 
01: To whole system 
10: Only interrupt 
11: / </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>To_whole</name>
                  <description>To whole system</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Only_interrupt</name>
                  <description>Only interrupt</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>WDOG0_CTRL_REG</name>
          <description>Watchdog 0 Control Register</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF</resetMask>
          <fields>
            <field>
              <name>WDOG0_KEY_FIELD</name>
              <description>Watchdog0 Key Field. Should be written at value 0xA57. Writing any other value in this field aborts the write operation. </description>
              <bitRange>[12:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WDOG0_RSTART</name>
              <description>Watchdog0 Restart.  
0: No effect.  
1: Restart watchdog0. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToSet</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Restart</name>
                  <description>Restart watchdog0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>WDOG0_IRQ_EN_REG</name>
          <description>Watchdog 0 IRQ Enable Register</description>
          <addressOffset>0xA0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>WDOG0_IRQ_EN</name>
              <description>Watchdog0 Interrupt Enable.  
0: No effect. 
1: Watchdog0 interrupt enable. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Watchdog0</name>
                  <description>Watchdog0 interrupt enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>WDOG0_IRQ_STA_REG</name>
          <description>Watchdog 0 Status Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>WDOG0_IRQ_PEND</name>
              <description>Watchdog0 n IRQ Pending. Setting 1 to the bit will clear it.  
0: No effect. 
1: Pending. Watchdog0 interval value is reached. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending. Watchdog0 interval value is reached.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>WDOG0_MODE_REG</name>
          <description>Watchdog 0 Mode Register</description>
          <addressOffset>0xB8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF1</resetMask>
          <fields>
            <field>
              <name>WDOG0_INTV_VALUE</name>
              <description>Watchdog0 Interval Value Watchdog0 clock source is OSC24M / 750 . If the clock source is turned off, Watchdog 0 will not work.  
0000: 16000 cycles (0.5s) 
0001: 32000 cycles (1s) 
0010: 64000 cycles (2s) 
0011: 96000 cycles (3s) 
0100: 128000 cycles (4s) 
0101: 160000 cycles (5s) 
0110: 192000 cycles (6s) 
0111: 256000 cycles (8s) 
1000: 320000 cycles (10s) 
1001: 384000 cycles (12s) 
1010: 448000 cycles (14s) 
1011: 512000 cycles (16s) others: / </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16000_cycles</name>
                  <description>16000 cycles (0.5s)</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32000_cycles</name>
                  <description>32000 cycles (1s)</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64000_cycles</name>
                  <description>64000 cycles (2s)</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_96000_cycles</name>
                  <description>96000 cycles (3s)</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_128000_cycles</name>
                  <description>128000 cycles (4s)</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_160000_cycles</name>
                  <description>160000 cycles (5s)</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_192000_cycles</name>
                  <description>192000 cycles (6s)</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_256000_cycles</name>
                  <description>256000 cycles (8s)</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_320000_cycles</name>
                  <description>320000 cycles (10s)</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_384000_cycles</name>
                  <description>384000 cycles (12s)</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_448000_cycles</name>
                  <description>448000 cycles (14s)</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_512000_cycles</name>
                  <description>512000 cycles (16s) others: /</description>
                  <value>0b1011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WDOG0_EN</name>
              <description>Watchdog0 Enable.  
0: No effect 
1: Enable watchdog0. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToSet</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable watchdog0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CPU CFG</name>
      <description>CPU CFG</description>
      <groupName>generic</groupName>
      <baseAddress>0x1700000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>CACHE_CFG_REG0</name>
          <description>Cache parameters configuration register0</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x22222222</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>L1SDT_DELAY</name>
              <description></description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L1TLB_DELAY</name>
              <description></description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BTAC_DELAY</name>
              <description></description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L1DY_DELAY</name>
              <description></description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L1DT_DELAY</name>
              <description></description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L1DD_DELAY</name>
              <description></description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L1IT_DELAY</name>
              <description></description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L1ID_DELAY</name>
              <description></description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CACHE_CFG_REG1</name>
          <description>Cache parameters configuration register1</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x2022020</resetValue>
          <resetMask>0x3077070</resetMask>
          <fields>
            <field>
              <name>EMAW</name>
              <description></description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EMA</name>
              <description></description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L2V_DELAY</name>
              <description></description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L2T_DELAY</name>
              <description></description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>C_CPU_STATUS</name>
          <description>Cluster CPU Status Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0xE0000</resetValue>
          <resetMask>0xF0F0F01</resetMask>
          <fields>
            <field>
              <name>SMP</name>
              <description>Indicates whether a core is taking part in coherency.  
0: Disable 
1: Enable </description>
              <bitRange>[27:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>STANDBYWFI</name>
              <description>Indicates if a core is in WFI standby mode:  
0: Processor not in WFI standby mode. 
1: Processor in WFI standby mode </description>
              <bitRange>[19:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>STANDBYWFE</name>
              <description>Indicates if a core is in the WFE standby mode:  
0: Processor not in WFE standby mode 
1: Processor in WFE standby mode </description>
              <bitRange>[11:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>STANDBYWFIL2</name>
              <description>Indicates if the Cluster L2 memory system is in WFI standby mode.  
0: Active 
1: Idle </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Active</name>
                  <description>Active</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>C_CTRL_REG0</name>
          <description>Cluster Control Register0</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x80000000</resetValue>
          <resetMask>0xFF000F10</resetMask>
          <fields>
            <field>
              <name>SYSBAR_DISABLE</name>
              <description>Disable broadcasting of barriers onto system bus  
0: Barriers are broadcast onto system bus, this requires an AMBA4 interconnect. 
1: Barriers are not broadcast onto the system bus. This is compatible with an AXI3 interconnect. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Barriers_are_broadcast</name>
                  <description>Barriers are broadcast onto system bus, this requires an AMBA4 interconnect.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Barriers_are_not_broadcast</name>
                  <description>Barriers are not broadcast onto the system bus. This is compatible with an AXI3 interconnect.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BROADCAST_INNER</name>
              <description>Enable broadcasting of Inner Shareable transactions  
0: Inner shareable transactions are not broadcasted externally. 
1: Inner shareable transactions are broadcasted externally. </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Inner_shareable_transactions_are_not_broadcasted</name>
                  <description>Inner shareable transactions are not broadcasted externally.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Inner_shareable_transactions_are_broadcasted</name>
                  <description>Inner shareable transactions are broadcasted externally.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BROADCAST_OUTER</name>
              <description>Enable broadcasting of outer shareable transactions  
0: Outer Shareable transactions are not broadcasted externally. 
1: Outer Shareable transactions are broadcasted externally. </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Outer_Shareable_transactions_are_not_broadcasted</name>
                  <description>Outer Shareable transactions are not broadcasted externally.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Outer_Shareable_transactions_are_broadcasted</name>
                  <description>Outer Shareable transactions are broadcasted externally.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BROADCAST_CACHE_MAINT</name>
              <description>Enable broadcasting of cache maintenance operations to downstream caches  
0: Cache maintenance operations are not broadcasted to downstream caches. 
1: Cache maintenance operations are broadcasted to downstream caches. </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Cache_maintenance_operations_are_not_broadcasted</name>
                  <description>Cache maintenance operations are not broadcasted to downstream caches.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Cache_maintenance_operations_are_broadcasted</name>
                  <description>Cache maintenance operations are broadcasted to downstream caches.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AA64N_AA32</name>
              <description>AA64nAA32 Register width state. Determines which execution state the processor boots into after a cold reset.  
0: AArch32 
1: AArch64 </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP15S_DISABLE</name>
              <description>Disable write access to some secure CP15 register. </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L2_RST_DISABLE</name>
              <description>Disable automatic L2 cache invalidate at reset  
0: L2 cache is reset by hardware. 
1: L2 cache is not reset by hardware. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>reset</name>
                  <description>L2 cache is reset by hardware.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_reset</name>
                  <description>L2 cache is not reset by hardware.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>C_CTRL_REG1</name>
          <description>Cluster Control Register1</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>ACINACTM</name>
              <description>Snoop interface is inactive and no longer accepting requests.   
0: Snoop interface is active 
1: Snoop interface is inactive </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>active</name>
                  <description>Snoop interface is active</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>inactive</name>
                  <description>Snoop interface is inactive</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>C_RST_CTRL</name>
          <description>Cluster Reset Control Register</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x11101101</resetValue>
          <resetMask>0x11FF110F</resetMask>
          <fields>
            <field>
              <name>DDR_RST</name>
              <description>AXI2MBUS Logic Circuit Reset.  
0: Assert  
1: De-assert </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SOC_DBG_RST</name>
              <description>Cluster SOC Debug P_Reset.  Clear this bit will reset the SOC Debug Bus Logic and it will automatically change to 1 after 64 p_cycles.   
0: Assert 
1: De-assert. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MBIST_RST</name>
              <description>CPUBIST Reset.  The reset signal for test.  
0: Assert  
1: De-assert </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HRESET</name>
              <description>Cluster H_Reset.  Reset all the Cluster Logic and Cluster Interface Logic.  
0: Assert  
1: De-assert </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>L2_RST</name>
              <description>Cluster L2 Cache Reset  
0: Assert  
1: De-assert </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>deassert</name>
                  <description>De-assert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CORE_RESET</name>
              <description>Control a Core Reset Assert.  
0: Assert  
1: De-assert </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>GENER_CTRL_REG0</name>
          <description>General Control Register0</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x10</resetValue>
          <resetMask>0x1F1F110</resetMask>
          <fields>
            <field>
              <name>EVENTI</name>
              <description>Event input for processor wake-up from WFE state.This bit must remain HIGH for at least one clock cycle to be visible by the cores. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EXM_CLR_3_0</name>
              <description>EXM_CLR[3:0] </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLREXMONREQ</name>
              <description>Clearing of the external global exclusive monitor request.When this bit is asserted, it acts as a WFE wake-up event to all the cores in the MPCore device. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CRYPTODISABLE</name>
              <description>Disable the Cryptography Extensions. </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>L2FLUSHREQ</name>
              <description>L2 hardware flush request. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GICCDISABLE</name>
              <description>Globally disables the CPU interface logic and routes the "External" signals directly to the processor:  
0: Enable the GIC CPU interface logic. 
1: Disable the GIC CPU interface logic. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable the GIC CPU interface logic.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable the GIC CPU interface logic.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>L2_STATUS_REG</name>
          <description>L2_STATUS_REG</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x700</resetMask>
          <fields>
            <field>
              <name>L2FLUSHDONE</name>
              <description>L2 hardware flush complete </description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>EVENTO</name>
              <description>Event output. This bit is asserted HIGH for 3 clock cycles when any core in the cluster executes an SEV instruction. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CLREXMONACK</name>
              <description>Clearing of the external global exclusive monitor acknowledge. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RVBARADDR0_H</name>
          <description>Reset Vector Base Address Register0_H</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RVBARDDR_39_32</name>
              <description>RVBARDDR[39:32] Reset Vector Base Address[39:2]for executing in 64-bit state (AArch64) of CPU0. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RVBARADDR0_L</name>
          <description>Reset Vector Base Address Register0_L</description>
          <addressOffset>0xA0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFC</resetMask>
          <fields>
            <field>
              <name>RVBARDDR_31_2</name>
              <description>RVBARDDR[31:2] Reset Vector Base Address[39:2] for executing in 64-bit state (AArch64)of CPU0. </description>
              <bitRange>[31:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RVBARADDR1_H</name>
          <description>Reset Vector Base Address Register1_H</description>
          <addressOffset>0xAC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RVBARDDR_39_32</name>
              <description>RVBARDDR[39:32] Reset Vector Base Address[39:2] for executing in 64-bit state (AArch64) of CPU1. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RVBARADDR1_L</name>
          <description>Reset Vector Base Address Register1_L</description>
          <addressOffset>0xA8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFC</resetMask>
          <fields>
            <field>
              <name>RVBARDDR_31_2</name>
              <description>RVBARDDR[31:2] Reset Vector Base Address[39:2] for executing in 64-bit state (AArch64)of CPU1. </description>
              <bitRange>[31:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RVBARADDR2_H</name>
          <description>Reset Vector Base Address Register2_H</description>
          <addressOffset>0xB4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RVBARDDR_39_32</name>
              <description>RVBARDDR[39:32] Reset Vector Base Address[39:2] for executing in 64-bit state (AArch64) of CPU2. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RVBARADDR2_L</name>
          <description>Reset Vector Base Address Register2_L</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFC</resetMask>
          <fields>
            <field>
              <name>RVBARDDR_31_2</name>
              <description>RVBARDDR[31:2] Reset Vector Base Address[39:2] for executing in 64-bit state (AArch64)of CPU2. </description>
              <bitRange>[31:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RVBARADDR3_H</name>
          <description>Reset Vector Base Address Register3_H</description>
          <addressOffset>0xBC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RVBARDDR_39_32</name>
              <description>RVBARDDR[39:32] Reset Vector Base Address[39:2] for executing in 64-bit state (AArch64) of CPU3. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RVBARADDR3_L</name>
          <description>Reset Vector Base Address Register3_L</description>
          <addressOffset>0xB8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFC</resetMask>
          <fields>
            <field>
              <name>RVBARDDR_31_2</name>
              <description>RVBARDDR[31:2] Reset Vector Base Address[39:2] for executing in 64-bit state (AArch64)of CPU3. </description>
              <bitRange>[31:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CSI0</name>
      <description>CSI0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1CB0000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>CCI_BUS_REG</name>
          <description>CCI_BUS_REG</description>
          <addressOffset>0x300C</addressOffset>
          <resetValue>0x2500</resetValue>
          <resetMask>0xFFFFFF3F</resetMask>
          <fields>
            <field>
              <name>DLY_CYC</name>
              <description>0~65535 FSCL cycles between each transmission </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DLY_TRIG</name>
              <description>0: Disable 
1: Execute transmission after internal counter delay when triggered </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Execute_transmission</name>
                  <description>Execute transmission after internal counter delay when triggered</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_N</name>
              <description>CCI bus sampling clock F0=24MHz/2^CLK_N </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_M</name>
              <description>CCI output SCL frequency is FSCL=F1/10=(F0/(CLK_M+1))/10 </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_STA</name>
              <description>SCL current status </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SDA_STA</name>
              <description>SDA current status </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SCL_PEN</name>
              <description>SCL PAD enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDA_PEN</name>
              <description>SDA PAD enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_MOV</name>
              <description>SCL manual output value </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDA_MOV</name>
              <description>SDA manual output value </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_MOE</name>
              <description>SCL manual output en </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDA_MOE</name>
              <description>SDA manual output en </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCI_CFG_REG</name>
          <description>CCI_CFG_REG</description>
          <addressOffset>0x3004</addressOffset>
          <resetValue>0x10000000</resetValue>
          <resetMask>0xFFFF807F</resetMask>
          <fields>
            <field>
              <name>TIMEOUT_N</name>
              <description>When sending the 9th clock, assert fail signal when slave device does not response after N*FSCL cycles. And software must reset CCI module and send a stop condition to slave. </description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INTERVAL</name>
              <description>Define the interval between each packet in 40*FSCL cycles.  </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PACKET_MODE</name>
              <description>Select where to load slave id / data width  
0: Compact mode 
1: Complete mode  In compact mode, slave id/register width/data width will be loaded from CCI_FMT register, only address and data read from memory. In complete mode, they will be loaded from packet memory. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Compact_mode</name>
                  <description>Compact mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Complete_mode</name>
                  <description>Complete mode  In compact mode, slave id/register width/data width will be loaded from CCI_FMT register, only address and data read from memory. In complete mode, they will be loaded from packet memory.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRIG_MODE</name>
              <description>Transmit mode  
000: Immediately, no trigger 
001: Reserved 
010: CSI0 int trigger 
011: CSI1 int trigger </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Immediately</name>
                  <description>Immediately, no trigger</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI0</name>
                  <description>CSI0 int trigger</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>CSI1</name>
                  <description>CSI1 int trigger</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSI_TRIG</name>
              <description>CSI Int trig signal select  
0000: First HREF start 
0001: Last HREF done 
0010: Line counter trigger other: Reserved </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>First</name>
                  <description>First HREF start</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Last</name>
                  <description>Last HREF done</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Line</name>
                  <description>Line counter trigger other: Reserved</description>
                  <value>0b0010</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CCI_CTRL_REG</name>
          <description>CCI_CTRL_REG</description>
          <addressOffset>0x3000</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF000003</resetMask>
          <fields>
            <field>
              <name>SINGLE_TRAN</name>
              <description>0: Transmission idle 
1: Start single transmission  Auto ati all  lea ed to  he  fi ished. A o t u e t t a s issio  i ediatel  if ha gi g f o   to . If sla e does ot espo d fo  the expected status over the time defined by TIMEOUT, the current transmission will stop. PACKET_CNT will return the sequence number when transmission failed. All format setting and data will be loaded from registers and FIFO when transmission started. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Transmission_idle</name>
                  <description>Transmission idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start</name>
                  <description>Start single transmission  Auto ati all  lea ed to  he  fi ished. A o t u e t t a s issio  i ediatel  if ha gi g f o   to . If sla e does ot espo d fo  the expected status over the time defined by TIMEOUT, the current transmission will stop. PACKET_CNT will return the sequence number when transmission failed. All format setting and data will be loaded from registers and FIFO when transmission started.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REPEAT_TRAN</name>
              <description>0: Transmission idle 
1: Repeated transmission  When this bit is set to 1, transmission repeats when trigger signal (such as VSYNC/ VCAP done ) repeats.  If ha gi g this it f o   to  du i g t a s issio , the u e t transmission will be guaranteed then stop. </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Transmission_idle</name>
                  <description>Transmission idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Repeated_transmission</name>
                  <description>Repeated transmission  When this bit is set to 1, transmission repeats when trigger signal (such as VSYNC/ VCAP done ) repeats.  If ha gi g this it f o   to  du i g t a s issio , the u e t transmission will be guaranteed then stop.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RESTART_MODE</name>
              <description>0: RESTART 
1: STOP+START  Define the CCI action after sent register address. </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RESTART</name>
                  <description>RESTART</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>STOP_plus_START</name>
                  <description>STOP+START  Define the CCI action after sent register address.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>READ_TRAN_MODE</name>
              <description>0: Send slave_id+W 
1: Do not send slave_id+W  Note: Setting this bit to 1 if reading from a slave which register width is equal to 0.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send slave_id+W</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Do_not_send</name>
                  <description>Do not send slave_id+W  Note: Setting this bit to 1 if reading from a slave which register width is equal to 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRAN_RESULT</name>
              <description>000: OK 
001: FAIL Other: Reserved </description>
              <bitRange>[27:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CCI_STA</name>
              <description>0x00: bus error 
0x08: START condition transmitted 
0x10: Repeated START condition transmitted 
0x18: Address + Write bit transmitted, ACK received 
0x20: Address + Write bit transmitted, ACK not received 
0x28: Data byte transmitted in master mode, ACK received 
0x30: Data byte transmitted in master mode, ACK not received 
0x38: Arbitration lost in address or data byte 
0x40: Address + Read bit transmitted, ACK received 
0x48: Address + Read bit transmitted, ACK not received 
0x50: Data byte received in master mode, ACK received 
0x58: Data byte received in master mode, ACK not received 
0x01: Timeout when sending 9th SCL clk Other: Reserved </description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SOFT_RESET</name>
              <description>0: Normal 
1: Reset </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reset</name>
                  <description>Reset</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CCI_EN</name>
              <description>0: Module disable 
1: Module enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Module_disable</name>
                  <description>Module disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Module_enable</name>
                  <description>Module enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <dim>16</dim>
          <dimIncrement>4</dimIncrement>
          <name>CCI_FIFO_ACC_REG[%s]</name>
          <description>CCI_FIFO_ACC_REG[%s]</description>
          <addressOffset>0x3100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DATA_FIFO</name>
              <description>From 0x3100 to 0x313f, CCI data FIFO is 64 bytes, used in FIFO input mode. CCI transmission read/write data from/to FIFO in byte.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCI_FMT_REG</name>
          <description>CCI_FMT_REG</description>
          <addressOffset>0x3008</addressOffset>
          <resetValue>0x110001</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SLV_ID</name>
              <description>7bit address </description>
              <bitRange>[31:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CMD</name>
              <description>0: write 
1: read </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>write</name>
                  <description>write</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>read</name>
                  <description>read</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADDR_BYTE</name>
              <description>How many bytes be sent as address 0~15 </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DATA_BYTE</name>
              <description>How many bytes be sent/received as data 1~15  Normally use ADDR_DATA with 0_2, 1_1, 1_2, 2_1, 2_2 access mode. If DATA byte is 0, transmission will not start. In complete mode, the ADDR_BYTE and DATA_BYTE are defined in the high/low 4bit of a byte. </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PACKET_CNT</name>
              <description>FIFO data is transmitted as PACKET_CNT packets in current format. Total bytes must not exceed 32bytes. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCI_INT_CTRL_REG</name>
          <description>CCI_INT_CTRL_REG</description>
          <addressOffset>0x3014</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x30003</resetMask>
          <fields>
            <field>
              <name>S_TRAN_ERR_INT_EN</name>
              <description></description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>S_TRAN_COM_INT_EN</name>
              <description></description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>S_TRAN_ERR_PD</name>
              <description></description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>S_TRAN_COM_PD</name>
              <description></description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CCI_LC_REG</name>
          <description>CCI_LC_REG</description>
          <addressOffset>0x3018</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF</resetMask>
          <fields>
            <field>
              <name>LN_CNT</name>
              <description>0~8191: Line counter send trigger when 1st~8192th line is received.</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_ACC_ITNL_CLK_CNT_REG</name>
          <description>CSI0_C0_ACC_ITNL_CLK_CNT_REG</description>
          <addressOffset>0x94</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ACC_CLK_CNT</name>
              <description>The accumulated value of FRM_CLK_CNT  for software frame rate statics. Every interrupt of frame done, the software checks this accumulated value and clears it to 0. If the ACC_CLK_CNT is larger than 1, the software has lost frame.  When frame done or vsync comes, ACC_CLK_CNT = ACC_CLK_CNT + 1, and cleared to 0 when writing 0 to this register. </description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>ITNL_CLK_CNT</name>
              <description>The instant value of internal frame clock counter.  When frame-done interrupt comes, the software can query this counter for judging whether it is the time for updating the double buffer address registers. </description>
              <bitRange>[23:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_BUF_LEN_REG</name>
          <description>CSI0_C0_BUF_LEN_REG</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x1400280</resetValue>
          <resetMask>0x3FFF3FFF</resetMask>
          <fields>
            <field>
              <name>BUF_LEN_C</name>
              <description>Buffer length of chroma C in a line. Unit is byte. </description>
              <bitRange>[29:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BUF_LEN</name>
              <description>Buffer length of luminance Y in a line. Unit is byte. </description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_CAP_STA_REG</name>
          <description>CSI0_C0_CAP_STA_REG</description>
          <addressOffset>0x6C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>FIELD_STA</name>
              <description>The status of the received field  
0: Field 0 
1: Field 1 </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Field_0</name>
                  <description>Field 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Field_1</name>
                  <description>Field 1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VCAP_STA</name>
              <description>Video capture in progress Indicates the CSI is capturing video image data (multiple frames). The bit is set at the start of the first frame after enabling video capture. When software disables video capture, it clears itself after the last pixel of the current frame is captured. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SCAP_STA</name>
              <description>Still capture in progress Indicates the CSI is capturing still image data (single frame). The bit is set at the start of the first frame after enabling still frame capture. It clears itself after the last pixel of the first frame is captured. For CCIR656 interface, if the output format is frame planar YCbCr 420 mode, the frame end means the field2 end, the other frame end means filed end. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_CFG_REG</name>
          <description>CSI0_C0_CFG_REG</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x300200</resetValue>
          <resetMask>0xFFFF3F03</resetMask>
          <fields>
            <field>
              <name>PAD_VAL</name>
              <description>Padding value when OUTPUT_FMT is prgb888 </description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INPUT_FMT</name>
              <description>Input data format  
0000: RAW stream 
0001: Reserved 
0010: Reserved 
0011: YUV422 
0100: YUV420 Others: Reserved </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RAW</name>
                  <description>RAW stream</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YUV422</name>
                  <description>YUV422</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YUV420</name>
                  <description>YUV420 Others: Reserved</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OUTPUT_FMT</name>
              <description>Output data format  When the input format is set RAW stream 
0000: field-raw-8 
0001: field-raw-10 
0010: field-raw-12 
0011: reserved 
0100: field-rgb565 
0101: field-rgb888 
0110: field-prgb888 
1000: frame-raw-8 
1001: frame-raw-10 
1010: frame-raw-12 
1011: reserved 
1100: frame-rgb565 
1101: frame-rgb888 
1110: frame-prgb888  When the input format is set YUV422 
0000: field planar YCbCr 422 
0001: field planar YCbCr 420 
0010: frame planar YCbCr 420 
0011: frame planar YCbCr 422 
0100: field planar YCbCr 422 UV combined 
0101: field planar YCbCr 420 UV combined 
0110: frame planar YCbCr 420 UV combined 
0111: frame planar YCbCr 422 UV combined 
1000: field MB YCbCr 422 
1001: field MB YCbCr 420 
1010: frame MB YCbCr 420 
1011: frame MB YCbCr 422 
1100: field planar YCbCr 422 10bit UV combined 
1101: field planar YCbCr 420 10bit UV combined 
1110: Reserved 
1111: Reserved  When the input format is set YUV420 
0000: Reserved 
0001: field planar YCbCr 420 
0010: frame planar YCbCr 420 
0011: Reserved 
0100: Reserved 
0101: field planar YCbCr 420 UV combined 
0110: frame planar YCbCr 420 UV combined 
0111: Reserved 
1000: Reserved 
1001: field MB YCbCr 420 
1010: frame MB YCbCr 420 
1011: Reserved 
1100: Reserved 
1101: field planar YCbCr 420 10bit UV combined 
1110: Reserved 
1111: Reserved </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VFLIP_EN</name>
              <description>Vertical flip enable When enabled, the received data will be arranged in vertical flip.  0:Disable 1:Enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HFLIP_EN</name>
              <description>Horizontal flip enable When enabled, the received data will be arranged in horizontal flip.  0:Disable 1:Enable </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIELD_SEL</name>
              <description>Field selection.   
00: Capturing with field 1. 
01: Capturing with field 2. 
10: Capturing with either field. 
11: Reserved </description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Capturing_with_field_1</name>
                  <description>Capturing with field 1.</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capturing_with_field_2</name>
                  <description>Capturing with field 2.</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Capturing_with_either_field</name>
                  <description>Capturing with either field.</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INPUT_SEQ</name>
              <description>Input data sequence, only valid for YUV422 and YUV420 input format.  All data interleaved in one channel: 
00: YUYV 
01: YVYU 
10: UYVY 
11: VYUY  Y and UV in separated channel: 
x0: UV 
x1: VU </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>YUYV</name>
                  <description>YUYV</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YVYU</name>
                  <description>YVYU</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UYVY</name>
                  <description>UYVY</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VYUY</name>
                  <description>VYUY  Y and UV in separated channel:</description>
                  <value>0b11</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>UV</name>
                  <description>UV</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>VU</name>
                  <description>VU</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MIN_SDR_WR_SIZE</name>
              <description>Minimum size of SDRAM block write  
0: 256 bytes (if hflip is enabled, always select 256 bytes) 
1: 512 bytes  
2: 1K bytes 
3: 2K bytes </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1K</name>
                  <description>1K bytes</description>
                  <value>2</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2K</name>
                  <description>2K bytes</description>
                  <value>3</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_F0_BUFA_REG</name>
          <description>CSI0_C0_F0_BUFA_REG</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>C0F0_BUFA</name>
              <description>FIFO 0 output buffer-A address </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_F1_BUFA_REG</name>
          <description>CSI0_C0_F1_BUFA_REG</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>C0F1_BUFA</name>
              <description>FIFO 1 output buffer-A address </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_F2_BUFA_REG</name>
          <description>CSI0_C0_F2_BUFA_REG</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>C0F2_BUFA</name>
              <description>FIFO 2 output buffer-A address </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_FIFO_STAT_REG</name>
          <description>CSI0_C0_FIFO_STAT_REG</description>
          <addressOffset>0x98</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>FIFO_FRM_MAX</name>
              <description>Indicates the maximum depth of FIFO being occupied for whole frame. Update at every vsync or frame-done.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_FLIP_SIZE_REG</name>
          <description>CSI0_C0_FLIP_SIZE_REG</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0x1E00280</resetValue>
          <resetMask>0x1FFF1FFF</resetMask>
          <fields>
            <field>
              <name>VER_LEN</name>
              <description>Vertical line number when in vflip mode.  </description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VALID_LEN</name>
              <description>Valid components of a line when in flip mode.  </description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_FRM_CLK_CNT_REG</name>
          <description>CSI0_C0_FRM_CLK_CNT_REG</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>FRM_CLK_CNT</name>
              <description>Counter value between every frame. For instant hardware frame rate statics.  The internal counter is added by 1 every 24MHz clock cycle. When frame done or vsync comes, the internal counter value is sampled to FRM_CLK_CNT , and cleared to 0.</description>
              <bitRange>[23:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_HSIZE_REG</name>
          <description>CSI0_C0_HSIZE_REG</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x5000000</resetValue>
          <resetMask>0x1FFF1FFF</resetMask>
          <fields>
            <field>
              <name>HOR_LEN</name>
              <description>Horizontal pixel unit length. Valid pixel of a line. </description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HOR_START</name>
              <description>Horizontal pixel unit start. Pixel is valid from this pixel. </description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_INT_EN_REG</name>
          <description>CSI0_C0_INT_EN_REG</description>
          <addressOffset>0x70</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>VS_INT_EN</name>
              <description>Vsync flag The bit is set when vsync come. And at this time load the buffer address for the coming frame. So after the IRQ come, change the buffer address could only effect next frame.  </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HB_OF_INT_EN</name>
              <description>Hblank FIFO overflow The bit is set when 3 FIFOs still overflow after the hblank. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MUL_ERR_INT_EN</name>
              <description>Multi-channel writing error Indicates error has been detected for writing data to a wrong channel. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO2_OF_INT_EN</name>
              <description>FIFO 2 overflow The bit is set when the FIFO 2 become overflow. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO1_OF_INT_EN</name>
              <description>FIFO 1 overflow The bit is set when the FIFO 1 become overflow. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO0_OF_INT_EN</name>
              <description>FIFO 0 overflow The bit is set when the FIFO 0 become overflow. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FD_INT_EN</name>
              <description>Frame done Indicates the CSI has finished capturing an image frame. Applies to video capture mode. The bit is set after each completed frame capturing data is written to buffer as long as video capture remains enabled. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CD_INT_EN</name>
              <description>Capture done Indicates the CSI has completed capturing the image data. For still capture, the bit is set when one frame data is written to buffer. For video capture, the bit is set when the last frame is written to buffer after video capture has been disabled. For CCIR656 interface, if the output format is frame planar YCbCr 420 mode, the frame end means the field2 end, the other frame end means field end. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_INT_STA_REG</name>
          <description>CSI0_C0_INT_STA_REG</description>
          <addressOffset>0x74</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>VS_PD</name>
              <description>Vsync flag </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HB_OF_PD</name>
              <description>Hblank FIFO overflow </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MUL_ERR_PD</name>
              <description>Multi-channel writing error </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO2_OF_PD</name>
              <description>FIFO 2 overflow </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO1_OF_PD</name>
              <description>FIFO 1 overflow </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO0_OF_PD</name>
              <description>FIFO 0 overflow </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FD_PD</name>
              <description>Frame done </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CD_PD</name>
              <description>Capture done </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_PCLK_STAT_REG</name>
          <description>CSI0_C0_PCLK_STAT_REG</description>
          <addressOffset>0x9C</addressOffset>
          <resetValue>0x7FFF</resetValue>
          <resetMask>0x7FFF7FFF</resetMask>
          <fields>
            <field>
              <name>PCLK_CNT_LINE_MAX</name>
              <description>Indicates maximum pixel clock counter value for each line. Update at every vsync or frame-done. </description>
              <bitRange>[30:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PCLK_CNT_LINE_MIN</name>
              <description>Indicates minimum pixel clock counter value for each line. Update at every vsync or frame-done.</description>
              <bitRange>[14:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_SCALE_REG</name>
          <description>CSI0_C0_SCALE_REG</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>QUART_EN</name>
              <description>When this bit is set to 1, input image will be decimated to quarter size. All input format are supported.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_C0_VSIZE_REG</name>
          <description>CSI0_C0_VSIZE_REG</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x1E00000</resetValue>
          <resetMask>0x1FFF1FFF</resetMask>
          <fields>
            <field>
              <name>VER_LEN</name>
              <description>Vertical line length. Valid line number of a frame. </description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VER_START</name>
              <description>Vertical line start. Data is valid from this line. </description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_CAP_REG</name>
          <description>CSI0_CAP_REG</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>CH0_CAP_MASK</name>
              <description>Vsync number masked before capture. </description>
              <bitRange>[5:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CH0_VCAP_ON</name>
              <description>Video capture control: capture the video image data stream on channel 0.  
0: Disable video capture If video capture is in progress, the CSI stops capturing image data at the end of the current frame, and all the current frame data is written to output FIFO. 
1: Enable video capture  The CSI starts capturing image data at the start of the next frame. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable video capture If video capture is in progress, the CSI stops capturing image data at the end of the current frame, and all the current frame data is written to output FIFO.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable video capture  The CSI starts capturing image data at the start of the next frame.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CH0_SCAP_ON</name>
              <description>Still capture control: capture a single still image frame on channel 0.  
0: Disable still capture. 
1: Enable still capture   The CSI module starts capturing image data at the start of the next frame. The CSI module captures only one frame of image data. This bit is self cleared and always reads as a 0. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable still capture.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable still capture   The CSI module starts capturing image data at the start of the next frame. The CSI module captures only one frame of image data. This bit is self cleared and always reads as a 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_EN_REG</name>
          <description>CSI0_EN_REG</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x40FF011F</resetMask>
          <fields>
            <field>
              <name>VER_EN</name>
              <description>CSI Version Register Read Enable  
0: Disable 
1: Enable </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PTN_CYCLE</name>
              <description>Pattern generating cycle counter. The pattern in dram will be generated in cycles of PTN_CYCLE+1. </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SRAM_PWDN</name>
              <description>0: SRAM in normal 
1: SRAM in power down </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SRAM_in_normal</name>
                  <description>SRAM in normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SRAM_in_power</name>
                  <description>SRAM in power down</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PTN_START</name>
              <description>CSI Pattern Generating Start  
0: Finish 
1: Start Software writes this it to to sta t patte ge e ati g f o DRAM. Whe  fi ished, the ha d a e ill lea  this it to  auto ati all . Ge e ati g cycles depends on PTN_CYCLE. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Finish</name>
                  <description>Finish</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start</name>
                  <description>Start Software writes this it to to sta t patte ge e ati g f o DRAM. Whe  fi ished, the ha d a e ill lea  this it to  auto ati all . Ge e ati g cycles depends on PTN_CYCLE.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_CNT_SPL</name>
              <description>Sampling time for CLK counter per frame  
0: Sampling clock counter every frame done 
1: Sampling clock counter every vsync </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Sampling_clock_counter_every_frame</name>
                  <description>Sampling clock counter every frame done</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Sampling_clock_counter_every_vsync</name>
                  <description>Sampling clock counter every vsync</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_CNT_EN</name>
              <description>CLK count per frame enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PTN_GEN_EN</name>
              <description>Pattern Generation Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CSI_EN</name>
              <description>Enable  
0: Reset and disable the CSI module 
1: Enable the CSI module </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Reset_and</name>
                  <description>Reset and disable the CSI module</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable the CSI module</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_FIFO_THRS_REG</name>
          <description>CSI0_FIFO_THRS_REG</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x40F0400</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>FIFO_NEARLY_FULL_TH</name>
              <description>The threshold of FIFO being nearly full. Indicates that the ISP should stop writing. Only valid when ISP is enabled. The smaller the value of the field, the flag of FIFO being nearly full is easier to reach. </description>
              <bitRange>[28:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PTN_GEN_CLK_DIV</name>
              <description>Packet generator clock divider </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PTN_GEN_DLY</name>
              <description>Clocks delayed before pattern generating start. </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_THRS</name>
              <description>When CSI0 FIFO occupied memory exceed the threshold, dram frequency can not change. </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_IF_CFG_REG</name>
          <description>CSI0_IF_CFG_REG</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x50000</resetValue>
          <resetMask>0x3F0F1F</resetMask>
          <fields>
            <field>
              <name>SRC_TYPE_SOURCE</name>
              <description>SRC_TYPE Source Type  
0: Progressed 
1: Interlaced </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Progressed</name>
                  <description>Progressed</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Interlaced</name>
                  <description>Interlaced</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FPS_DS_FPS</name>
              <description>FPS_DS Fps Down Sample  
0: No down sample 
1: 1/2 fps, only receives the first frame every 2 frames </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_down</name>
                  <description>No down sample</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_slash_2</name>
                  <description>1/2 fps, only receives the first frame every 2 frames</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIELD</name>
              <description>FIELD  For YUV HV timing, Field polarity 
0: Negative(field=0 indicate odd, field=1 indicate even ) 
1: Positive(field=1 indicate odd, field=0 indicate even )  For BT656 timing, Field sequence 
0: Normal sequence (field 0 first) 
1: Inverse sequence (field 1 first) </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Negative_openingparen_field_equals_0</name>
                  <description>Negative(field=0 indicate odd, field=1 indicate even )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Positive_openingparen_field_equals_1</name>
                  <description>Positive(field=1 indicate odd, field=0 indicate even )  For BT656 timing, Field sequence</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal sequence (field 0 first)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Inverse</name>
                  <description>Inverse sequence (field 1 first)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>VREF_POL_VREF</name>
              <description>VREF_POL Vref Polarity  
0: Negative 
1: Positive  The bit does not apply for CCIR656 interface. </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Negative</name>
                  <description>Negative</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Positive</name>
                  <description>Positive  The bit does not apply for CCIR656 interface.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HERF_POL_HREF</name>
              <description>HERF_POL Href Polarity  
0: Negative 
1: Positive  The bit does not apply for CCIR656 interface. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Negative</name>
                  <description>Negative</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Positive</name>
                  <description>Positive  The bit does not apply for CCIR656 interface.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_POL_DATA</name>
              <description>CLK_POL Data Clock Type  
0: Active in rising edge 
1: Active in falling edge </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Active_in_rising_edge</name>
                  <description>Active in rising edge</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Active_in_falling_edge</name>
                  <description>Active in falling edge</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SEQ_8PLUS2</name>
              <description>SEQ_8PLUS2 When select IF_DATA_WIDTH to be 8+2bit, odd/even pixel byte at  CSI- D[ : ] ill e ea a ged to D[ : ]+  at the a tual si data us according to these sequences  : +D[ : ], D[ : ]  : D[ : ], +D[ : ]  : D[ : ], D[ : ]+  : D[ : ], +D[ : ] </description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IF_DATA_WIDTH</name>
              <description>IF_DATA_WIDTH  
00: 8 bits data bus 
01: 10 bits data bus 
10: 12 bits data bus 
11: 8+2 bits data bus  </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8_bits</name>
                  <description>8 bits data bus</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_10_bits</name>
                  <description>10 bits data bus</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12_bits</name>
                  <description>12 bits data bus</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_plus_2_bits</name>
                  <description>8+2 bits data bus</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CSI_IF_YUV</name>
              <description>CSI_IF  YUV: 
00000: YUYV422 Interleaved or RAW (All data in one data bus)  CCIR656: 
00100: YUYV422 Interleaved or RAW (All data in one data bus) Others: Reserved </description>
              <bitRange>[4:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>YUYV422_Interleaved_or_RAW__openingparen_All_data_in_one_data_bus_closingparen__CCIR656</name>
                  <description>YUYV422 Interleaved or RAW (All data in one data bus)  CCIR656:</description>
                  <value>0b00000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>YUYV422_Interleaved_or_RAW__openingparen_All_data_in_one_data_bus_closingparen__Others</name>
                  <description>YUYV422 Interleaved or RAW (All data in one data bus) Others: Reserved</description>
                  <value>0b00100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_PTN_ADDR_REG</name>
          <description>CSI0_PTN_ADDR_REG</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PTN_ADDR</name>
              <description>The pattern DRAM address when generating pattern.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_PTN_LEN_REG</name>
          <description>CSI0_PTN_LEN_REG</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PTN_LEN</name>
              <description>The pattern length in byte when generating pattern.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_SYNC_CNT_REG</name>
          <description>CSI0_SYNC_CNT_REG</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYNC_CNT</name>
              <description>The counter value between vsync of CSI0 channel 0 and vsync of CSI1 channel 0 , using 24MHz. </description>
              <bitRange>[23:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CSI0_VER_REG</name>
          <description>CSI0_VER_REG</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>VER</name>
              <description>Version of hardware circuit. Only can be read when version register read enable is on.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>CE_NS</name>
      <description>CE_NS</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C15000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>CE_CDAR</name>
          <description>Current Destination Address Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DES_ADR</name>
              <description>Current destination address of the executing task </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_CSAR</name>
          <description>Current Source Address Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SRC_ADR</name>
              <description>Current source address of the executing task </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_CTR</name>
          <description>Gating Control Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8</resetMask>
          <fields>
            <field>
              <name>RSA_CLK_GATING</name>
              <description>RSA CLK Gating Enable(only for S world)  
0: RSA clk gating enable  
1: RSA clk gating disable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enable</name>
                  <description>RSA clk gating enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disable</name>
                  <description>RSA clk gating disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DIE</name>
              <description>Die Bonding ID </description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_ESR</name>
          <description>Task Error type Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>CH3_ERROR</name>
              <description>Task channel3 error type  
xxx1: Algorithm not support 
xx1x: Data length error 
x1xx: Keysram access error for AES  
1xxx: Reserved  Write 1 to clear it. </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Algorithm</name>
                  <description>Algorithm not support</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data length error</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Keysram</name>
                  <description>Keysram access error for AES</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reserved</name>
                  <description>Reserved  Write 1 to clear it.</description>
                  <value>0b1000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CH2_ERR</name>
              <description>Task channel2 error type   
xxx1: Algorithm not support 
xx1x: Data length error 
x1xx: Keysram access error for AES  
1xxx: Reserved  Write 1 to clear it. </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Algorithm</name>
                  <description>Algorithm not support</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data length error</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Keysram</name>
                  <description>Keysram access error for AES</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reserved</name>
                  <description>Reserved  Write 1 to clear it.</description>
                  <value>0b1000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CH1_ERR</name>
              <description>Task channel1 error type  
xxx1: Algorithm not support 
xx1x: Data length error 
x1xx: Keysram access error for AES 
1xxx: Reserved  Write 1 to clear it. </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Algorithm</name>
                  <description>Algorithm not support</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data length error</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Keysram</name>
                  <description>Keysram access error for AES</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reserved</name>
                  <description>Reserved  Write 1 to clear it.</description>
                  <value>0b1000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CH0_ERR</name>
              <description>Task channel0 error type  
xxx1: Algorithm not support 
xx1x: Data length error 
x1xx: Keysram access error for AES 
1xxx: Reserved  Write 1 to clear it. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Algorithm</name>
                  <description>Algorithm not support</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data length error</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Keysram</name>
                  <description>Keysram access error for AES</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reserved</name>
                  <description>Reserved  Write 1 to clear it.</description>
                  <value>0b1000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_ICR</name>
          <description>Interrupt Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>TASK_INT_EN</name>
              <description>Task chaining0~3 interrupt enable  
0: Interrupt disable 
1: Interrupt enable </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_ISR</name>
          <description>Interrupt Status Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>TASK_END_PENDING</name>
              <description>Task channel0-3 end pending  
0: Not finished 
1: Finished  It indicates whether task has been completed .  Note: W ite  to lea  it. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_TDA</name>
          <description>CE_TDA</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CE_TDA</name>
              <description>Task Descriptor Address </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_TLR</name>
          <description>Task Load Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>TASK_LOAD</name>
              <description>When set , CE starts to load the configure of task from task descriptor queue and start to perform the task if task FIFO is not full. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_TPR</name>
          <description>Throughput Register</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>THROUGHPUT</name>
              <description>It indicates the throughput of data from the whole processing. W ite 0 to lea it by CPU. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CE_TSR</name>
          <description>CE_TSR</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>TASK_CHANNEL</name>
              <description>Indicate which channel is running  
00: Task channel0 
01: Task channel1 
10: Task channel2 
11: Task channel3 </description>
              <bitRange>[1:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Task_channel0</name>
                  <description>Task channel0</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Task_channel1</name>
                  <description>Task channel1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Task_channel2</name>
                  <description>Task channel2</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Task_channel3</name>
                  <description>Task channel3</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="CE_NS">
      <name>CE_S</name>
      <description>CE_S</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C15800</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>CIR</name>
      <description>CIR</description>
      <groupName>generic</groupName>
      <baseAddress>0x1F02000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>CIR_CTL</name>
          <description>CIR Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x133</resetMask>
          <fields>
            <field>
              <name>CGPO</name>
              <description>General Program Output (GPO) Control in CIR mode for TX Pin  
0: Low level 
1: High level </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Low_level</name>
                  <description>Low level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High_level</name>
                  <description>High level</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CIR_ENABLE</name>
              <description>00~10: Reserved 
11: CIR mode enable </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>CIR_mode</name>
                  <description>CIR mode enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXEN</name>
              <description>Receiver Block Enable  
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GEN</name>
              <description>Global Enable A disable on this bit overrides any other block or channel enables and flushes all FIFOs.  
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_RCR</name>
          <description>CIR_RCR</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x1828</resetValue>
          <resetMask>0x1FFFFFF</resetMask>
          <fields>
            <field>
              <name>SCS2</name>
              <description>Bit2 of Sample Clock Select for CIR This bit is defined by SCS bits below. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATHC</name>
              <description>Active Threshold Control for CIR  
0: ATHR in Unit of (Sample Clock) 
1: ATHR in Unit of (128*Sample Clocks) </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ATHR_in_Unit_of__openingparen_Sample</name>
                  <description>ATHR in Unit of (Sample Clock)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ATHR_in_Unit_of__openingparen_128_times_Sample</name>
                  <description>ATHR in Unit of (128*Sample Clocks)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ATHR</name>
              <description>Active Threshold for CIR These bits control the duration of CIR from Idle to Active State. The duration can be calculated by ((ATHR + 1)*(ATHC? Sample Clock: 128*Sample Clock)). </description>
              <bitRange>[22:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ITHR</name>
              <description>Idle Threshold for CIR The Receiver uses the field to decide whether the CIR command has been received. If there is no CIR signal on the air, the receiver retains in IDLE status. One active pulse will bring the receiver from IDLE status to Receiving status. After the CIR is end, the inputting signal will keep the specified level (high or low level) for a long time. The receiver can use this idle signal duration to decide that it has received the CIR command. The corresponding flag is asserted. If the corresponding interrupt is enabled, the interrupt line is asserted to CPU. When the duration of signal keeps one status (high or low level) for the specified duration ( (ITHR + 1)*128 sample_clk ), this means that the previous CIR command has been finished. </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NTHR</name>
              <description>Noise Threshold for CIR When the duration of signal pulse (high or low level) is less than NTHR, the pulse is taken as noise and should be discarded by hardware.  
000000: All samples are recorded into RX FIFO 
000001: If the signal is only one sample duration, it is taken as noise and discarded. 
000010: If the signal is less than (&lt;=) two sample duration, it is taken as noise and discarded. ... 
111101: If the signal is less than (&lt;=) sixty-one sample duration, it is taken as noise and discarded. </description>
              <bitRange>[7:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCS</name>
              <description>Sample Clock Select for CIR SCS2 SCS[1] SCS[0] Sample Clock 0 0 0 ir_clk/64 0 0 1 ir_clk/128 0 1 0 ir_clk/256 0 1 1 ir_clk/512 1 0 0 ir_clk 1 0 1 Reserved 1 1 0 Reserved 1 1 1 Reserved </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_RXCTL</name>
          <description>CIR Receiver Configure Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x4</resetValue>
          <resetMask>0x4</resetMask>
          <fields>
            <field>
              <name>RPPI</name>
              <description>Receiver Pulse Polarity Invert  
0: Not invert receiver signal 
1: Invert receiver signal </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_RXFIFO</name>
          <description>CIR Receiver FIFO Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RECEIVER</name>
              <description>Receiver Byte FIFO </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_RXINT</name>
          <description>CIR Receiver Interrupt Control Register</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F33</resetMask>
          <fields>
            <field>
              <name>RAL</name>
              <description>RX FIFO Available Received Byte Level for interrupt and DMA request TRIGGER_LEVEL = RAL + 1 </description>
              <bitRange>[13:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRQ_EN</name>
              <description>RX FIFO DMA Enable  
0: Disable 
1: Enable  Whe set to , the Re ei e FIFO DRQ is asse ted if ea hi g RAL . The DRQ is de-asserted when condition fails. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  Whe set to , the Re ei e FIFO DRQ is asse ted if ea hi g RAL . The DRQ is de-asserted when condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RAI_EN</name>
              <description>RX FIFO Available Interrupt Enable  
0: Disable 
1: Enable  Whe set to , the Re ei e FIFO IRQ is asse ted if ea hi g RAL . The IRQ is de-asserted when condition fails. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  Whe set to , the Re ei e FIFO IRQ is asse ted if ea hi g RAL . The IRQ is de-asserted when condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RPEI_EN</name>
              <description>Receiver Packet End Interrupt Enable  
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ROI_EN</name>
              <description>Receiver FIFO Overrun Interrupt Enable  
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>CIR_RXSTA</name>
          <description>CIR Receiver Status Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F93</resetMask>
          <fields>
            <field>
              <name>RAC</name>
              <description>RX FIFO Available Counter  
0000000: No available data in RX FIFO 
0000001: 1 byte available data in RX FIFO 
0000010: 2 byte available data in RX FIFO ... 
1000000: 64 byte available data in RX FIFO </description>
              <bitRange>[14:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_available</name>
                  <description>No available data in RX FIFO</description>
                  <value>0b0000000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 byte available data in RX FIFO</description>
                  <value>0b0000001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 byte available data in RX FIFO ...</description>
                  <value>0b0000010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 byte available data in RX FIFO</description>
                  <value>0b1000000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STAT</name>
              <description>Status of CIR  
0: Idle 
1: Busy </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RA</name>
              <description>RX FIFO Available  
0: RX FIFO not available according its level 
1: RX FIFO available according its level  This it is lea ed  iti g a . </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_FIFO</name>
                  <description>RX FIFO not available according its level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_FIFO_available</name>
                  <description>RX FIFO available according its level  This it is lea ed  iti g a .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RPE</name>
              <description>Receiver Packet End Flag  
0: One CIR symbol is receiving or not detected. 
1: One CIR symbol is received.  This it is lea ed  iti g a . </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>receiving</name>
                  <description>One CIR symbol is receiving or not detected.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>received</name>
                  <description>One CIR symbol is received.  This it is lea ed  iti g a .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ROI</name>
              <description>Receiver FIFO Overrun  
0: Receiver FIFO not overrun 
1: Receiver FIFO overrun  This it is lea ed  iti g a . </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receiver_FIFO_not_overrun</name>
                  <description>Receiver FIFO not overrun</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receiver_FIFO_overrun</name>
                  <description>Receiver FIFO overrun  This it is lea ed  iti g a .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>DMA</name>
      <description>DMA</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C02000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>12</dim>
          <dimIncrement>64</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x100</addressOffset>
          <register>
            <name>DMA_BCNT_LEFT_REG</name>
            <description>DMA Channel Byte Counter Left Register  (N=0~11)</description>
            <addressOffset>0x18</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1FFFFFF</resetMask>
            <fields>
              <field>
                <name>DMA_BCNT_LEFT</name>
                <description>DMA Channel Byte Counter Left, read only. </description>
                <bitRange>[24:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_CFG_REG</name>
            <description>DMA Channel Configuration Register  (N=0~11)</description>
            <addressOffset>0xC</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x6FF06FF</resetMask>
            <fields>
              <field>
                <name>DMA_DEST_DATA_WIDTH</name>
                <description>DMA Destination Data Width.  
00: 8-bit 
01: 16-bit 
10: 32-bit 
11: 64-bit </description>
                <bitRange>[26:25]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_8_bit</name>
                    <description>8-bit</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_16_bit</name>
                    <description>16-bit</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_32_bit</name>
                    <description>32-bit</description>
                    <value>0b10</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_64_bit</name>
                    <description>64-bit</description>
                    <value>0b11</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DMA_DEST_BST_LEN</name>
                <description>DMA Destination Burst Length.  
00: 1 
01: 4 
10: 8 
11: 16 </description>
                <bitRange>[23:22]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_1</name>
                    <description>1</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_4</name>
                    <description>4</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_8</name>
                    <description>8</description>
                    <value>0b10</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_16</name>
                    <description>16</description>
                    <value>0b11</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DMA_ADDR_MODE</name>
                <description>DMA Destination Address Mode  
0: Linear Mode 
1: IO Mode </description>
                <bitRange>[21:21]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Linear</name>
                    <description>Linear Mode</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>IO</name>
                    <description>IO Mode</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DMA_DEST_DRQ_TYPE</name>
                <description>DMA Destination DRQ Type The details is in DMA DRQ Table . </description>
                <bitRange>[20:16]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>DMA_SRC_DATA_WIDTH</name>
                <description>DMA Source Data Width.  
00: 8-bit 
01: 16-bit 
10: 32-bit 
11: 64-bit </description>
                <bitRange>[10:9]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_8_bit</name>
                    <description>8-bit</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_16_bit</name>
                    <description>16-bit</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_32_bit</name>
                    <description>32-bit</description>
                    <value>0b10</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_64_bit</name>
                    <description>64-bit</description>
                    <value>0b11</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DMA_SRC_BST_LEN</name>
                <description>DMA Source Burst Length.  
00: 1 
01: 4 
10: 8 
11: 16 </description>
                <bitRange>[7:6]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_1</name>
                    <description>1</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_4</name>
                    <description>4</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_8</name>
                    <description>8</description>
                    <value>0b10</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_16</name>
                    <description>16</description>
                    <value>0b11</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DMA_SRC_ADDR_MODE</name>
                <description>DMA Source Address Mode  
0: Linear Mode 
1: IO Mode </description>
                <bitRange>[5:5]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Linear</name>
                    <description>Linear Mode</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>IO</name>
                    <description>IO Mode</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DMA_SRC_DRQ_TYPE</name>
                <description>DMA Source DRQ Type The details is in DMA DRQ Table . </description>
                <bitRange>[4:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_CUR_DEST_REG</name>
            <description>DMA Channel Current Destination Register  (N=0~11)</description>
            <addressOffset>0x14</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DMA_CUR_DEST</name>
                <description>DMA Channel Current Destination Address, read only. </description>
                <bitRange>[31:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_CUR_SRC_REG</name>
            <description>DMA Channel Current Source Register  (N=0~11)</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DMA_CUR_SRC</name>
                <description>DMA Channel Current Source Address, read only. </description>
                <bitRange>[31:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_DESC_ADDR_REG</name>
            <description>DMA Channel Start Address Register  (N=0~11)</description>
            <addressOffset>0x8</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DMA_DESC_ADDR</name>
                <description>DMA Channel Descriptor Address. The Descriptor Address  must be word-aligned. </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_EN_REG</name>
            <description>DMA Channel Enable Register    (N=0~11)</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1</resetMask>
            <fields>
              <field>
                <name>DMA_EN</name>
                <description>DMA Channel Enable  
0: Disable 
1: Enable. </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_FDESC_ADDR_REG</name>
            <description>DMA Formar Descriptor Address Register  (N=0~11)</description>
            <addressOffset>0x2C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DMA_FDESC_ADDR</name>
                <description>This register is used to store the former value of DMA Channel Descriptor Address Register . </description>
                <bitRange>[31:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_MODE_REG</name>
            <description>DMA Mode Register  (N=0~11)</description>
            <addressOffset>0x28</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xC</resetMask>
            <fields>
              <field>
                <name>DMA_DST_MODE</name>
                <description>0: Wait mode. 
1: Handshake mode. </description>
                <bitRange>[3:3]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Wait</name>
                    <description>Wait mode.</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Handshake</name>
                    <description>Handshake mode.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>DMA_SRC_MODE</name>
                <description>0: Wait mode. 
1: Handshake mode. </description>
                <bitRange>[2:2]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Wait</name>
                    <description>Wait mode.</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Handshake</name>
                    <description>Handshake mode.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_PARA_REG</name>
            <description>DMA Channel Parameter Register  (N=0~11)</description>
            <addressOffset>0x1C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFF</resetMask>
            <fields>
              <field>
                <name>WAIT_CYC</name>
                <description>Wait Clock Cycles n. </description>
                <bitRange>[7:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_PAU_REG</name>
            <description>DMA Channel Pause Register  (N=0~11)</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1</resetMask>
            <fields>
              <field>
                <name>DMA_PAUSE</name>
                <description>Pausing DMA Channel Transfer Data.  
0: Resume Transferring, 
1: Pause Transferring. </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Resume</name>
                    <description>Resume Transferring,</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pause</name>
                    <description>Pause Transferring.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>DMA_PKG_NUM_REG</name>
            <description>DMA Package Number Register  (N=0~11)</description>
            <addressOffset>0x30</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DMA_PKG_NUM</name>
                <description>This register will record the number of packages which has been completed in one transmission. </description>
                <bitRange>[31:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>DMA_AUTO_GATE_REG</name>
          <description>DMA Auto Gating Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>DMA_MCLK_CIRCUIT</name>
              <description>DMA MCLK interface circuit auto gating bit.  
0: Auto gating enable 
1: Auto gating disable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Auto_gating_enable</name>
                  <description>Auto gating enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto_gating_disable</name>
                  <description>Auto gating disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_COMMON_CIRCUIT</name>
              <description>DMA common circuit auto gating bit.  
0: Auto gating enable 
1: Auto gating disable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Auto_gating_enable</name>
                  <description>Auto gating enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto_gating_disable</name>
                  <description>Auto gating disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_CHAN_CIRCUIT</name>
              <description>DMA channel circuit auto gating bit.  
0: Auto gating enable 
1: Auto gating disable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Auto_gating_enable</name>
                  <description>Auto gating enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Auto_gating_disable</name>
                  <description>Auto gating disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_IRQ_EN_REG0</name>
          <description>DMA IRQ Enable Register0</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>DMA7_QUEUE_IRQ_EN</name>
              <description>DMA 7 Queue End Transfer Interrupt Enable.  
0: Disable  
1: Enable </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA7_PKG_IRQ_EN</name>
              <description>DMA 7 Package End Transfer Interrupt Enable.  
0: Disable  
1: Enable </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA7_HLAF_IRQ_EN</name>
              <description>DMA 7 Half Package Transfer Interrupt Enable.  
0: Disable  
1: Enable </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_QUEUE_IRQ_EN</name>
              <description>DMA 6 Queue End Transfer Interrupt Enable.  
0: Disable  
1: Enable </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_PKG_IRQ_EN</name>
              <description>DMA 6 Package End Transfer Interrupt Enable.  
0: Disable  
1: Enable </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_HLAF_IRQ_EN</name>
              <description>DMA 6 Half Package Transfer Interrupt Enable.  
0: Disable  
1: Enable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_QUEUE_IRQ_EN</name>
              <description>DMA 5 Queue End Transfer Interrupt Enable.  
0: Disable  
1: Enable </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_PKG_IRQ_EN</name>
              <description>DMA 5 Package End Transfer Interrupt Enable.  
0: Disable  
1: Enable </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_HLAF_IRQ_EN</name>
              <description>DMA 5 Half package Transfer Interrupt Enable.  
0: Disable  
1: Enable </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_QUEUE_IRQ_EN</name>
              <description>DMA 4 Queue End Transfer Interrupt Enable.  
0: Disable  
1: Enable </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_PKG_IRQ_EN</name>
              <description>DMA 4 Package End Transfer Interrupt Enable.  
0: Disable  
1: Enable </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_HLAF_IRQ_EN</name>
              <description>DMA 4 Half Package Transfer Interrupt Enable.  
0: Disable  
1: Enable </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_QUEUE_IRQ_EN</name>
              <description>DMA 3 Queue End Transfer Interrupt Enable.  
0: Disable  
1: Enable </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_PKG_IRQ_EN</name>
              <description>DMA 3 Package End Transfer Interrupt Enable.  
0: Disable  
1: Enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_HLAF_IRQ_EN</name>
              <description>DMA 3 Half Package Transfer Interrupt Enable.  
0: Disable  
1: Enable </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_QUEUE_IRQ_EN</name>
              <description>DMA 2 Queue End Transfer Interrupt Enable. 
0: Disable  
1: Enable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_PKG_IRQ_EN</name>
              <description>DMA 2 Package End Transfer Interrupt Enable.  
0: Disable  
1: Enable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_HLAF_IRQ_EN</name>
              <description>DMA 2 Half Package Transfer Interrupt Enable.  
0: Disable  
1: Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_QUEUE_IRQ_EN</name>
              <description>DMA 1 Queue End Transfer Interrupt Enable.  
0: Disable  
1: Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_PKG_IRQ_EN</name>
              <description>DMA 1 Package End Transfer Interrupt Enable.  
0: Disable  
1: Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_HLAF_IRQ_EN</name>
              <description>DMA 1 Half Package Transfer Interrupt Enable.  
0: Disable  
1: Enable. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_QUEUE_IRQ_EN</name>
              <description>DMA 0 Queue End Transfer Interrupt Enable.  
0: Disable  
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_PKG_IRQ_EN</name>
              <description>DMA 0 Package End Transfer Interrupt Enable.  
0: Disable  
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_HLAF_IRQ_EN</name>
              <description>DMA 0 Half Package Transfer Interrupt Enable.  
0: Disable  
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_IRQ_EN_REG1</name>
          <description>DMA IRQ Enable Register1</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7777</resetMask>
          <fields>
            <field>
              <name>DMA11_QUEUE_IRQ_EN</name>
              <description>DMA 11 Queue End Transfer Interrupt Enable.  
0: Disable  
1: Enable </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA11_PKG_IRQ_EN</name>
              <description>DMA 11 Package End Transfer Interrupt Enable.  
0: Disable 
1: Enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA11_HLAF_IRQ_EN</name>
              <description>DMA 11 Half Package Transfer Interrupt Enable.  
0: Disable 
1: Enable </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA10_QUEUE_IRQ_EN</name>
              <description>DMA 10 Queue End Transfer Interrupt Enable.  
0: Disable 
1: Enable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA10_PKG_IRQ_EN</name>
              <description>DMA 10 Package End Transfer Interrupt Enable.  
0: Disable 
1: Enable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA10_HLAF_IRQ_EN</name>
              <description>DMA 10 Half Package Transfer Interrupt Enable.  
0: Disable 
1: Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA9_QUEUE_IRQ_EN</name>
              <description>DMA 9 Queue End Transfer Interrupt Enable.  
0: Disable 
1: Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA9_PKG_IRQ_EN</name>
              <description>DMA 9 Package End Transfer Interrupt Enable.  
0: Disable 
1: Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA9_HLAF_IRQ_EN</name>
              <description>DMA 9 Half package Transfer Interrupt Enable.  
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA8_QUEUE_IRQ_EN</name>
              <description>DMA 8 Queue End Transfer Interrupt Enable.  
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA8_PKG_IRQ_EN</name>
              <description>DMA 8 Package End Transfer Interrupt Enable.  
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA8_HLAF_IRQ_EN</name>
              <description>DMA 8 Half Package Transfer Interrupt Enable.  
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_IRQ_PEND_REG0</name>
          <description>DMA IRQ Pending Register0</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>DMA7_QUEUE_IRQ_PEND</name>
              <description>DMA 7 Queue End Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect 
1: Pending. </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA7_PKG_IRQ_PEND</name>
              <description>DMA 7 Package End Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect  
1: Pending. </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA7_HLAF_IRQ_PEND</name>
              <description>DMA 7 Half Package Transfer Interrupt Pending.  Setting 1 to the bit will clear it. 
0: No effect  
1: Pending. </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_QUEUE_IRQ_PEND</name>
              <description>DMA 6 Queue End Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect 
1: Pending. </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_PKG_IRQ_PEND</name>
              <description>DMA 6 Package End Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect  
1: Pending. </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_HLAF_IRQ_PEND</name>
              <description>DMA 6 Half Package Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect 
1: Pending. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_QUEUE_IRQ_PEND</name>
              <description>DMA 5 Queue End Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect 
1: Pending. </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_PKG_IRQ_PEND</name>
              <description>DMA 5 Package End Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect 
1: Pending. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_HLAF_IRQ_PEND</name>
              <description>DMA 5 Half Package Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect 
1: Pending. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_QUEUE_IRQ_PEND</name>
              <description>DMA 4 Queue End Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect  
1: Pending. </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_PKG_IRQ_PEND</name>
              <description>DMA 4 Package End Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect 
1: Pending. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_HLAF_IRQ_PEND</name>
              <description>DMA 4 Half Package Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect  
1: Pending. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_QUEUE_IRQ_PEND</name>
              <description>DMA 3 Queue End Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect 
1: Pending. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_PKG_IRQ_PEND</name>
              <description>DMA 3 Package End Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect 
1: Pending. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_HLAF_IRQ_PEND</name>
              <description>DMA 3 Half Package Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect  
1: Pending. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_QUEUE_IRQ_PEND</name>
              <description>DMA 2 Queue End Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect 
1: Pending. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_PKG_IRQ_PEND</name>
              <description>DMA 2 Package End Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect 
1: Pending. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_HLAF_IRQ_PEND</name>
              <description>DMA 2 Half Package Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect  
1: Pending. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_QUEUE_IRQ_PEND</name>
              <description>DMA 1 Queue End Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect  
1: Pending. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_PKG_IRQ_PEND</name>
              <description>DMA 1 Package End Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect  
1: Pending. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_HLAF_IRQ_PEND</name>
              <description>DMA 1 Half Package Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect  
1: Pending. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_QUEUE_IRQ_PEND</name>
              <description>DMA 0 Queue End Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect  
1: Pending. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_PKG_IRQ_PEND</name>
              <description>DMA 0 Package End Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect  
1: Pending. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_HLAF_IRQ_PEND</name>
              <description>DMA 0 Half Package Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect 
1: Pending. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_IRQ_PEND_REG1</name>
          <description>DMA IRQ Pending Register1</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7777</resetMask>
          <fields>
            <field>
              <name>DMA11_QUEUE_IRQ_PEND</name>
              <description>DMA 11 Queue End Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect 
1: Pending </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA11_PKG_IRQ_PEND</name>
              <description>DMA 11 Package End Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect 
1: Pending </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA11_HLAF_IRQ_PEND</name>
              <description>DMA 11 Half Package Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect 
1: Pending </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA10_QUEUE_IRQ_PEND</name>
              <description>DMA 10 Queue End Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect 
1: Pending </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA10_PKG_IRQ_PEND</name>
              <description>DMA 10 Package End Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect 
1: Pending </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA10_HLAF_IRQ_PEND</name>
              <description>DMA 10 Half Package Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect 
1: Pending </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA9_QUEUE_IRQ_PEND</name>
              <description>DMA 9 Queue End Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect 
1: Pending </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA9_PKG_IRQ_PEND</name>
              <description>DMA 9 Package End Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect 
1: Pending </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA9_HLAF_IRQ_PEND</name>
              <description>DMA 9 Half Package Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect 
1: Pending </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA8_QUEUE_IRQ_PEND</name>
              <description>DMA 8 Queue End Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect 
1: Pending </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA8_PKG_IRQ_PEND</name>
              <description>DMA 8 Package End Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect 
1: Pending </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA8_HLAF_IRQ_PEND</name>
              <description>DMA 8 Half Package Transfer Interrupt Pending.  Setting 1 to the bit will clear it.  
0: No effect 
1: Pending </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_SECURE_REG</name>
          <description>DMA_SECURE_REG</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>DMA11_SECURE</name>
              <description>DMA Channel 11 Security.  
0: Secure  
1: Non-secure </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA10_SECURE</name>
              <description>DMA Channel 10 Security.  
0: Secure  
1: Non-secure </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA9_SECURE</name>
              <description>DMA Channel 9 Security.  
0: Secure  
1: Non-secure </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA8_SECURE</name>
              <description>DMA Channel 8 Security.  
0: Secure 
1: Non-secure </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA7_SECURE</name>
              <description>DMA Channel 7 Security.  
0: Secure  
1: Non-secure </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_SECURE</name>
              <description>DMA Channel 6 Security.  
0: Secure  
1: Non-secure </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_SECURE</name>
              <description>DMA Channel 5 Security.  
0: Secure  
1: Non-secure </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_SECURE</name>
              <description>DMA Channel 4 Security.  
0: Secure  
1: Non-secure </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_SECURE</name>
              <description>DMA Channel 3 Security.  
0: Secure  
1: Non-secure </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_SECURE</name>
              <description>DMA Channel 2 Security.  
0: Secure  
1: Non-secure </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_SECURE</name>
              <description>DMA Channel 1 Security.  
0: Secure  
1: Non-secure </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_SECURE</name>
              <description>DMA Channel 0 Security.  
0: Secure  
1: Non-secure </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>DMA_STA_REG</name>
          <description>DMA Status Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x40000FFF</resetMask>
          <fields>
            <field>
              <name>MBUS</name>
              <description>FIFO Status  0:Empty 1:Not Empty </description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DMA11_STATUS</name>
              <description>DMA Channel 11 Status.  
0: Idle 
1: Busy </description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA10_STATUS</name>
              <description>DMA Channel 10 Status.  
0: Idle 
1: Busy </description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA9_STATUS</name>
              <description>DMA Channel 9 Status.  
0: Idle 
1: Busy </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA8_STATUS</name>
              <description>DMA Channel 8 Status.  
0: Idle 
1: Busy </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA7_STATUS</name>
              <description>DMA Channel 7 Status.  
0: Idle 
1: Busy </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA6_STATUS</name>
              <description>DMA Channel 6 Status.  
0: Idle 
1: Busy </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA5_STATUS</name>
              <description>DMA Channel 5 Status.  
0: Idle 
1: Busy </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA4_STATUS</name>
              <description>DMA Channel 4 Status.  
0: Idle 
1: Busy. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA3_STATUS</name>
              <description>DMA Channel 3 Status. 
0: Idle 
1: Busy. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA2_STATUS</name>
              <description>DMA Channel 2 Status.  
0: Idle, 
1: Busy. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle,</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA1_STATUS</name>
              <description>DMA Channel 1 Status.  
0: Idle, 
1: Busy. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle,</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA0_STATUS</name>
              <description>DMA Channel 0 Status.  
0: Idle, 
1: Busy. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle,</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SMC</name>
      <description>SMC</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C1E000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>16</dim>
          <dimIncrement>16</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x100</addressOffset>
          <register>
            <name>SMC_REGION_ATTR_REG</name>
            <description>Region Attribute Register N  (N=0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)</description>
            <addressOffset>0x8</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xF000FF7F</resetMask>
            <fields>
              <field>
                <name>REGION_ATTR_SPN</name>
                <description>SP&lt;n&gt;. Permission setting for region &lt;n&gt;.  If an AXI transaction occurs to region n, the value in the sp&lt;n&gt; field controls whether the SMC permits the transaction to proceed. See Region Security Permissions when Security Inversion Disabled in Table 4-5 and Region Security Permissions when Security Inversion Enabled in Table 4-6. </description>
                <bitRange>[31:28]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SUB_REGION_DISABLE</name>
                <description>Subregion_disable.  Regions are split into eight equal-size sub-regions, and each bit enables the corresponding subregion to be disabled.  Bit [15] = 1 subregion 7 is disabled. Bit [14] = 1 subregion 6 is disabled. Bit [13] = 1 subregion 5 is disabled. Bit [12] = 1 subregion 4 is disabled. Bit [11] = 1 subregion 3 is disabled. Bit [10] = 1 subregion 2 is disabled. Bit [9] = 1 subregion 1 is disabled. Bit [8] = 1 subregion 0 is disabled. </description>
                <bitRange>[15:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>REGION_ATTR_SIZE</name>
                <description>Size&lt;n&gt;. Size of region&lt;n&gt;, see Region Size in Table 4- 4 for detail. </description>
                <bitRange>[6:1]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>REGION_ATTR_EN</name>
                <description>EN&lt;n&gt;. Enable for region&lt;n&gt;.  
0: Region &lt; n&gt; is disabled. 
1: Region &lt; n&gt; is enabled. </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>disabled</name>
                    <description>Region &lt; n&gt; is disabled.</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>enabled</name>
                    <description>Region &lt; n&gt; is enabled.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>SMC_REGION_SETUP_HI_REG</name>
            <description>Region Setup High Register N  (N=0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>BASE_ADDRESS_HIGH</name>
                <description>The SMC only permits a region to start at address 0x0, or at a multiple of its region size. If you program a region size to be 8GB or more, then the SMC might ignore certain bits depending on the region size.  </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>SMC_REGION_SETUP_LO_REG</name>
            <description>Region Setup Low Register N  (N=0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15)</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFF8000</resetMask>
            <fields>
              <field>
                <name>BASE_ADDRESS_LOW</name>
                <description>Controls the base address [31:15] of region&lt;n&gt;. The SMC only permits a region to start at address 0x0, or at a multiple of its region size. For example, if the size of a region is 512MB, and it is not at address 0x0, the only valid settings for this field are:        17 </description>
                <bitRange>[31:15]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>DRM_ENDADDR_REG</name>
          <description>DRM End Address Register</description>
          <addressOffset>0x68</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF8000</resetMask>
          <fields>
            <field>
              <name>DRM_ENDADDR_REG</name>
              <description></description>
              <bitRange>[31:15]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DRM_ILLACCE_REG0</name>
          <description>DRM_ILLACCE_REG0</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DRM_ILLACCE_REG</name>
              <description>When a master, which is non-secure, accesses the DRM space, then the relevant bit will be set up. See Master and Master ID in Table 4-3 for detail. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DRM_MASTER_EN_REG</name>
          <description>DRM Master Enable Register</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800030F1</resetMask>
          <fields>
            <field>
              <name>DRM_EN</name>
              <description>DRM enable. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPU_WRITE_EN</name>
              <description>GPU write enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GPU_READ_EN</name>
              <description>GPU read enable </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DE_INTERLACE</name>
              <description>DE_INTERLACE enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DE_RT_WB</name>
              <description>DE_RT-WB enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DE_RT_MIXER1</name>
              <description>DE_RT-MIXER1 enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DE_RT_MIXER0</name>
              <description>DE_RT-MIXER0 enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VE_ENCODE_EN</name>
              <description>VE encode enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DRM_STATADDR_REG</name>
          <description>DRM Start Address Register</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF8000</resetMask>
          <fields>
            <field>
              <name>DRM_STATADDR_REG</name>
              <description></description>
              <bitRange>[31:15]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_ACTION_REG</name>
          <description>SMC Action Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>SMC_INT_RESP</name>
              <description>Control how the SMC uses the bresps[1:0], rresps[1:0], and smc_int signals when a region permission fails:  
00: Sets smc_int LOW and issues an OKEY response 
01: Sets smc_int LOW and issues a DECERR response 
10: Sets smc_int HIGH and issues an OKEY response 
11: Sets smc_int HIGH and issues a DECERR response </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Sets_smc_int_LOW_and_issues_an</name>
                  <description>Sets smc_int LOW and issues an OKEY response</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Sets_smc_int_LOW_and_issues_a_DECERR</name>
                  <description>Sets smc_int LOW and issues a DECERR response</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Sets_smc_int_HIGH_and_issues_an</name>
                  <description>Sets smc_int HIGH and issues an OKEY response</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Sets_smc_int_HIGH_and_issues_a_DECERR</name>
                  <description>Sets smc_int HIGH and issues a DECERR response</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_CONFIG_REG</name>
          <description>SMC Configuration Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x1F0F</resetValue>
          <resetMask>0x3F0F</resetMask>
          <fields>
            <field>
              <name>ADDR_WIDTH_RTN</name>
              <description>Address width.  Return the width of the AXI address bus.  000000~011110 : Reserved. 
011111: 32-bit ... 
111111: 64-bit </description>
              <bitRange>[13:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_32_bit</name>
                  <description>32-bit ...</description>
                  <value>0b011111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64_bit</name>
                  <description>64-bit</description>
                  <value>0b111111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>REGIONS_RTN</name>
              <description>Returns the number of the regions that the SMC provides.  
0000: Reserved 
0001: 2 regions ... 
1111: 16 regions.  </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 regions ...</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 regions.</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_FAIL_ADDR_REG</name>
          <description>SMC Fail Address Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>FIRST_ACCESS_FAIL</name>
              <description>Return the address bits [31:0] of the first access to fail a region permission check after the interrupt was cleared. For external 16-bit DDR2, the address [2:0] is fixed to zero. For external 32-bit DDR2 and 16-bit DDR3, the address [3:0] is fixed to zero. For external 32-bit DDR3, the address [4:0] is fixed to zero. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_FAIL_CTRL_REG</name>
          <description>SMC Fail Control Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1300000</resetMask>
          <fields>
            <field>
              <name>READ_WRITE</name>
              <description>This bit indicates whether the first access to fail a region permission check was a write or read as:  
0: Read access 
1: Write access. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Read</name>
                  <description>Read access</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Write</name>
                  <description>Write access.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NON_SECURE</name>
              <description>After cleared the interrupt status, this bit indicates whether the first access to fail a region permission check was non-secure. Read as:  
0: Secure access 
1: Non-secure access </description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Secure</name>
                  <description>Secure access</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_secure</name>
                  <description>Non-secure access</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PRIVILEGED</name>
              <description>After clearing the interrupt status, this bit indicates whether the first access to fail a region permission check was privileged. Read as:  
0: Unprivileged access. 
1: Privileged access </description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Unprivileged</name>
                  <description>Unprivileged access.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Privileged</name>
                  <description>Privileged access</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_FAIL_ID_REG</name>
          <description>SMC Fail ID Register</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF00FF</resetMask>
          <fields>
            <field>
              <name>FAIL_BST_LEN</name>
              <description>Fail burst length.  
00000000: 1 word length ... 
00001111: 16 words length </description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 word length ...</description>
                  <value>0b00000000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 words length</description>
                  <value>0b00001111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FAIL_MASTER_ID</name>
              <description>Fail Master ID. The value stands for master id, see the Master and Master ID in Table 4-3 for detail. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_INT_CLEAR_REG</name>
          <description>SMC Interrupt Clear Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SMC_CLR_REG</name>
              <description>Write any value to the int_clear register sets the : Status bit to 0 in the int_status register Overrun bit to 0 in the int_status register.  Note: It will be automatically cleared after the write operation. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_INT_STATUS_REG</name>
          <description>SMC Interrupt Status Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>INT_OVERRUN</name>
              <description>When setting to 1, it indicates the occurrence of two or more region permission failure since the interrupt was last cleared. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>INT_STATUS</name>
              <description>Return the status of the interrupt.  
0: Interrupt is inactive. 
1: Interrupt is active. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>inactive</name>
                  <description>Interrupt is inactive.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>active</name>
                  <description>Interrupt is active.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_LD_RANGE_REG</name>
          <description>SMC Lock Down Range Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8000000F</resetMask>
          <fields>
            <field>
              <name>LOCKDOWN_EN</name>
              <description>When setting to 1, it enables the lockdown_regions field to control the regions that are to be locked. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NO_REGIONS_LOCKDOWN</name>
              <description>Control the number of regions to lockdown when the enable bit is set to 1.  
0000: region no_of_regions-1 is locked 
0001: region no_of_regions-1 to region no_of_regions-2 are locked ... 
1111: region no_of_regions-1 to region no_of_regions-16 are locked </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_LD_SELECT_REG</name>
          <description>SMC Lock Down Select Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>ACCESS_TYPE_SPECU</name>
              <description>Modify the access type of the SMC_SPECU_CTRL_REG register.  
0: No effect. The SMC_SPECU_CTRL_REG register remains RW. 1:The SMC_SPECU_CTRL_REG register is RO. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect. The SMC_SPECU_CTRL_REG register remains RW. 1:The SMC_SPECU_CTRL_REG register is RO.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACCESS_TYPE_SEC_INV_EN</name>
              <description>Modify the access type of the SMC_SEC_INV_EN_REG register.  
0: No effect. The SMC_SEC_INV_EN_REG register remains RW. 1:The SMC_SEC_INV_EN_REG register is RO. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect. The SMC_SEC_INV_EN_REG register remains RW. 1:The SMC_SEC_INV_EN_REG register is RO.</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ACCESS_TYPE_LOCKDOWN_RANGE</name>
              <description>Modify the access type of the SMC_LD_RANGE_REG register.  
0: No effect. The SMC_LD_RANGE_REG register remains RW. 
1: The SMC_LD_RANGE_REG register is RO. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect. The SMC_LD_RANGE_REG register remains RW.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SMC_LD_RANGE_REG</name>
                  <description>The SMC_LD_RANGE_REG register is RO.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_MST_ATTRI_REG</name>
          <description>SMC Master Attribute Register</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MST_ATTRI</name>
              <description>0: The secure attribute of master is up to master security extensions. 
1: The secure attribute of master is up to SMC Master Secure Register . </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_MST_BYP_REG</name>
          <description>SMC Master Bypass Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SMC_MASTER_BYPASS_EN</name>
              <description>SMC Master n Bypass Enable.  (n = 0~31, see the Master and Master ID in Table 4-3 for detail.)  
0: Bypass Disable 
1: Bypass Enable. Note: Bit[31:0] stand for Master ID [31:0]. If the master n bypass enable is set to 0, the master n access must be through the SMC. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_MST_SEC_REG</name>
          <description>SMC Master Secure Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SMC_MASTER_SEC</name>
              <description>SMC Master n Secure Configuration.(n = 0~31, see the Master and Master ID  in Table 4-3 for detail)  
0: Secure 
1: Non-secure. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_SEC_INV_EN_REG</name>
          <description>SMC Security Inversion Enable Register</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>SEC_INV_EN</name>
              <description>Security_inversion_en.  Controls whether the SMC permits security inversion to occur.  
0: security inversion is not permitted. 
1: security inversion is permitted. This enables a region to be accessible to masters in non-secure state but not accessible to masters in secure state. See Region Security Permissions when Security Inversion Disabled in Table 4-5 and Region Security Permissions when Security Inversion Enabled  in Table 4-6. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_permitted</name>
                  <description>security inversion is not permitted.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>permitted</name>
                  <description>security inversion is permitted. This enables a region to be accessible to masters in non-secure state but not accessible to masters in secure state. See Region Security Permissions when Security Inversion Disabled in Table 4-5 and Region Security Permissions when Security Inversion Enabled  in Table 4-6.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMC_SPECU_CTRL_REG</name>
          <description>SMC Speculation Control Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>WRITE_SPECU</name>
              <description>Write_speculation.  Control the write access speculation.  
0: Write access speculation is enabled 
1: Write access speculation is disabled. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>Write access speculation is enabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disabled</name>
                  <description>Write access speculation is disabled.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>READ_SPECU</name>
              <description>Read_speculation.  Control the read access speculation.  
0: Read access speculation is enabled 
1: Read access speculation is disabled. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>enabled</name>
                  <description>Read access speculation is enabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>disabled</name>
                  <description>Read access speculation is disabled.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>System Control</name>
      <description>System Control</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C00000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>EMAC_EPHY_CLK_REG</name>
          <description>EMAC-EPHY Clock Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x58000</resetValue>
          <resetMask>0xFFFFBFFF</resetMask>
          <fields>
            <field>
              <name>BPS_EFFUSE</name>
              <description></description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>XMII_SEL</name>
              <description>0: Internal SMI and MII 
1: External SMI and MII </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Internal</name>
                  <description>Internal SMI and MII</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>External</name>
                  <description>External SMI and MII</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EPHY_MODE</name>
              <description>Operation Mode Selection  
00: Normal Mode 
01: Sim Mode 
10: AFE Test Mode 
11: / </description>
              <bitRange>[26:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Sim</name>
                  <description>Sim Mode</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AFE</name>
                  <description>AFE Test Mode</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PHY_ADDR</name>
              <description>PHY Address </description>
              <bitRange>[24:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BIST_CLK_EN</name>
              <description>0: BIST clk disable 
1: BIST clk enable </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BIST_clk_disable</name>
                  <description>BIST clk disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BIST_clk_enable</name>
                  <description>BIST clk enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CLK_SEL</name>
              <description>0: 25MHz 
1: 24MHz </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_25MHz</name>
                  <description>25MHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24MHz</name>
                  <description>24MHz</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LED_POL</name>
              <description>0: High active 
1: Low active </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>High</name>
                  <description>High active</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Low active</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SHUTDOWN</name>
              <description>0: Power up 
1: Shutdown </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Power</name>
                  <description>Power up</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Shutdown</name>
                  <description>Shutdown</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PHY_SELECT</name>
              <description>0: External PHY  
1: Internal PHY </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>External</name>
                  <description>External PHY</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Internal</name>
                  <description>Internal PHY</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RMII_EN</name>
              <description>0: Disable RMII Module 
1: Enable RMII Module  When this bit assert, MII or RGMII interface is disabled( This means bit13 is prior to bit2) </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable RMII Module</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable RMII Module  When this bit assert, MII or RGMII interface is disabled( This means bit13 is prior to bit2)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETXDC</name>
              <description>Configure EMAC Transmit Clock Delay Chain. </description>
              <bitRange>[12:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ERXDC</name>
              <description>Configure EMAC Receive Clock Delay Chain. </description>
              <bitRange>[9:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ERXIE</name>
              <description>Enable EMAC Receive Clock Invertor.  
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETXIE</name>
              <description>Enable EMAC Transmit Clock Invertor.  
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EPIT</name>
              <description>EMAC PHY Interface Type  
0: MII 
1: RGMII </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MII</name>
                  <description>MII</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RGMII</name>
                  <description>RGMII</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETCS</name>
              <description>EMAC Transmit Clock Source  
00: Transmit clock source for MII 
01: External transmit clock source for GMII and RGMII 
10: Internal transmit clock source for GMII and RGMII 
11: Reserved </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Transmit</name>
                  <description>Transmit clock source for MII</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>External</name>
                  <description>External transmit clock source for GMII and RGMII</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Internal</name>
                  <description>Internal transmit clock source for GMII and RGMII</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>VER_REG</name>
          <description>Version Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>UBOOT_SEL_PAD_STA</name>
              <description>U_boot Select Pin Status.  
0: U_Boot 
1: Normal Boot </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>U_Boot</name>
                  <description>U_Boot</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Boot</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>High Speed Timer</name>
      <description>High Speed Timer</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C60000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>HS_TMR_CTRL_REG</name>
          <description>HSTimer Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800000F3</resetMask>
          <fields>
            <field>
              <name>HS_TMR_TEST</name>
              <description>High Speed Timer test mode. In test mode, the low register should be set to 0x1, the high register will down counter. The counter needs to be reloaded.  
0: Normal mode 
1: Test mode. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal_mode</name>
                  <description>Normal mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Test</name>
                  <description>Test mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR_MODE</name>
              <description>High Speed Timer mode.  
0: Continuous mode. When interval value reached, the timer will not disable automatically. 
1: Single mode. When interval value reached, the timer will disable automatically. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Continuous</name>
                  <description>Continuous mode. When interval value reached, the timer will not disable automatically.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Single</name>
                  <description>Single mode. When interval value reached, the timer will disable automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR_CLK</name>
              <description>Select the pre-scale of the High Speed Timer clock sources.  
000: /1 
001: /2 
010: /4 
011: /8 
100: /16 
101: / 
110: / 
111: / </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_2</name>
                  <description>/2</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_4</name>
                  <description>/4</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_8</name>
                  <description>/8</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_16</name>
                  <description>/16</description>
                  <value>0b100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR_RELOAD</name>
              <description>High Speed Timer reload.  
0: No effect 
1: Reload High Speed Timer Interval Value. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToSet</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reload</name>
                  <description>Reload High Speed Timer Interval Value.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HS_TMR_EN</name>
              <description>High Speed Timer enable.  
0: Stop/Pause  
1: Start.  If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to , the u e t alue counter will pause. At least wait for 2 cycles, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Stop_slash_Pause</name>
                  <description>Stop/Pause</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Start</name>
                  <description>Start.  If the timer is started, it will reload the interval value to internal register, and the current counter will count from interval value to 0. If the current counter does not reach the zero, the timer enable bit is set to , the u e t alue counter will pause. At least wait for 2 cycles, the start bit can be set to 1. In timer pause state, the interval value register can be modified. If the timer is started again, and the software hope the current value register to down-count from the new interval value, the reload bit and the enable bit should be set to 1 at the same time.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR_CURNT_HI_REG</name>
          <description>HSTimer Current Value High Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>HS_TMR_CUR_VALUE_HI</name>
              <description>High Speed Timer Current Value [55:32]. </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR_CURNT_LO_REG</name>
          <description>HSTimer Current Value Low Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>HS_TMR_CUR_VALUE_LO</name>
              <description>High Speed Timer Current Value [31:0]. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR_INTV_HI_REG</name>
          <description>HSTimer Interval Value High Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>HS_TMR_INTV_VALUE_HI</name>
              <description>High Speed Timer Interval Value [55:32]. </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR_INTV_LO_REG</name>
          <description>HSTimer Interval Value Low Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>HS_TMR_INTV_VALUE_LO</name>
              <description>High Speed Timer Interval Value [31:0]. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR_IRQ_EN_REG</name>
          <description>HSTimer IRQ Enable Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>HS_TMR_INT_EN</name>
              <description>High Speed Timer Interrupt Enable.  
0: No effect 
1: High Speed Timer Interval Value reached interrupt enable. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToSet</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High</name>
                  <description>High Speed Timer Interval Value reached interrupt enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>HS_TMR_IRQ_STAS_REG</name>
          <description>HSTimer Status Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>HS_TMR_IRQ_PEND</name>
              <description>High Speed Timer IRQ Pending. Setting 1 to the bit will clear it.  
0: No effect 
1: Pending. High Speed Timer Interval Value is reached. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending. High Speed Timer Interval Value is reached.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>I2S/PCM 0</name>
      <description>I2S/PCM 0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C22000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>I2S_PCM_CHCFG</name>
          <description>I2S_PCM_CHCFG</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x377</resetMask>
          <fields>
            <field>
              <name>TX_SLOT_HIZ</name>
              <description>0: Normal mode for the last half cycle of BCLK in the slot 
1: Turn to hi-z state for the last half cycle of BCLK in the slot </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal_mode</name>
                  <description>Normal mode for the last half cycle of BCLK in the slot</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Turn</name>
                  <description>Turn to hi-z state for the last half cycle of BCLK in the slot</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_STATE</name>
              <description>0: Transfer level 0 when not transferring slot 
1: Turn to hi-z state when not transferring slot </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Transfer_level</name>
                  <description>Transfer level 0 when not transferring slot</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Turn</name>
                  <description>Turn to hi-z state when not transferring slot</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_SLOT_NUM</name>
              <description>RX Channel/Slot Number between CPU/DMA and FIFO  
000: 1 channel or slot ... 
111: 8 channels or slots </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel or slot ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8 channels or slots</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_SLOT_NUM</name>
              <description>TX Channel/Slot Number between CPU/DMA and FIFO  
000: 1 channel or slot ... 
111: 8 channels or slots </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel or slot ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8 channels or slots</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_CLKD</name>
          <description>I2S_PCM_CLKD</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF</resetMask>
          <fields>
            <field>
              <name>MCLKO_EN</name>
              <description>0: Disable MCLK Output 
1: Enable MCLK Output  Note: Whether in slave or master mode, when this bit is set to 1, MCLK should  output. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable MCLK Output</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable MCLK Output  Note: Whether in slave or master mode, when this bit is set to 1, MCLK should  output.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BCLKDIV</name>
              <description>BCLK Divide Ratio from PLL_AUDIO  
0000: Reserved 
0001: Divide by 1 
0010: Divide by 2 
0011: Divide by 4 
0100: Divide by 6 
0101: Divide by 8 
0110: Divide by 12 
0111: Divide by 16 
1000: Divide by 24 
1001: Divide by 32 
1010: Divide by 48 
1011: Divide by 64 
1100: Divide by 96 
1101: Divide by 128 
1110: Divide by 176 
1111: Divide by 192 </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Divide_by_1</name>
                  <description>Divide by 1</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_2</name>
                  <description>Divide by 2</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_4</name>
                  <description>Divide by 4</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_6</name>
                  <description>Divide by 6</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_8</name>
                  <description>Divide by 8</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_12</name>
                  <description>Divide by 12</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_16</name>
                  <description>Divide by 16</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_24</name>
                  <description>Divide by 24</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_32</name>
                  <description>Divide by 32</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_48</name>
                  <description>Divide by 48</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_64</name>
                  <description>Divide by 64</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_96</name>
                  <description>Divide by 96</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_128</name>
                  <description>Divide by 128</description>
                  <value>0b1101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_176</name>
                  <description>Divide by 176</description>
                  <value>0b1110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_192</name>
                  <description>Divide by 192</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MCLKDIV</name>
              <description>MCLK Divide Ratio from PLL_AUDIO   
0000: Reserved 
0001: Divide by 1 
0010: Divide by 2 
0011: Divide by 4 
0100: Divide by 6 
0101: Divide by 8 
0110: Divide by 12 
0111: Divide by 16 
1000: Divide by 24 
1001: Divide by 32 
1010: Divide by 48 
1011: Divide by 64 
1100: Divide by 96 
1101: Divide by 128 
1110: Divide by 176 
1111: Divide by 192 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Divide_by_1</name>
                  <description>Divide by 1</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_2</name>
                  <description>Divide by 2</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_4</name>
                  <description>Divide by 4</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_6</name>
                  <description>Divide by 6</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_8</name>
                  <description>Divide by 8</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_12</name>
                  <description>Divide by 12</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_16</name>
                  <description>Divide by 16</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_24</name>
                  <description>Divide by 24</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_32</name>
                  <description>Divide by 32</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_48</name>
                  <description>Divide by 48</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_64</name>
                  <description>Divide by 64</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_96</name>
                  <description>Divide by 96</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_128</name>
                  <description>Divide by 128</description>
                  <value>0b1101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_176</name>
                  <description>Divide by 176</description>
                  <value>0b1110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Divide_by_192</name>
                  <description>Divide by 192</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_CTL</name>
          <description>I2S_PCM_CTL</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x60000</resetValue>
          <resetMask>0x7017F</resetMask>
          <fields>
            <field>
              <name>BCLK_OUT</name>
              <description>0: Input  
1: Output </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LRCK_OUT</name>
              <description>0: Input  
1: Output </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LRCKR_OUT</name>
              <description>0: Input  
1: Output </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Input</name>
                  <description>Input</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DOUT_EN</name>
              <description>0: Disable, Hi-Z state 
1: Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable, Hi-Z state</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OUT_MUTE</name>
              <description>0: Normal transfer 
1: Force DOUT to output 0 </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal transfer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Force</name>
                  <description>Force DOUT to output 0</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE_SEL</name>
              <description>Mode Selection  
00: PCM mode (offset 0: DSP_B; offset 1: DSP_A) 
01: Left mode (offset 0: LJ mode; offset 1: I2S mode) 
10: Right-Justified mode 
11: Reserved </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PCM_mode</name>
                  <description>PCM mode (offset 0: DSP_B; offset 1: DSP_A)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Left_mode</name>
                  <description>Left mode (offset 0: LJ mode; offset 1: I2S mode)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>right_Justified_mode</name>
                  <description>Right-Justified mode</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Test  
0: Normal mode 
1: Loop back test  Whe set , o e ti g the DOUT with the DIN  </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal_mode</name>
                  <description>Normal mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop back test  Whe set , o e ti g the DOUT with the DIN</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXEN</name>
              <description>Transmitter Block Enable  
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXEN</name>
              <description>Receiver Block Enable  
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>GEN</name>
              <description>Globe Enable A disable on this bit overrides any other block or channel enables.  
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_FCTL</name>
          <description>I2S_PCM_FCTL</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x400F0</resetValue>
          <resetMask>0x8307F3F7</resetMask>
          <fields>
            <field>
              <name>HUB_EN</name>
              <description>Audio Hub Enable  0:Disable 1:Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FTX</name>
              <description>W ite  to flush TXFIFO, self lea to . </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FRX</name>
              <description>W ite  to flush RXFIFO, self lea to . </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXTL</name>
              <description>TXFIFO Empty Trigger Level Interrupt and DMA request trigger level for TXFIFO normal condition Trigger Level = TXTL </description>
              <bitRange>[18:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXTL</name>
              <description>RXFIFO Trigger Level Interrupt and DMA request trigger level for RXFIFO normal condition Trigger Level = RXTL + 1 </description>
              <bitRange>[9:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXIM</name>
              <description>TXFIFO Input Mode (Mode 0, 1)  
0: Valid data at the MSB of TXFIFO register 
1: Valid data at the LSB of TXFIFO register  Example for 20-bit transmitted audio sample: Mode : TXFIFO[ : ] = {APB_WDATA[ : ], h }  Mode 1:TXFIFO[31:0] = {APB_WDATA[ : ], h } </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Valid_data_at_the_MSB</name>
                  <description>Valid data at the MSB of TXFIFO register</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Valid_data_at_the_LSB</name>
                  <description>Valid data at the LSB of TXFIFO register  Example for 20-bit transmitted audio sample: Mode : TXFIFO[ : ] = {APB_WDATA[ : ], h }  Mode 1:TXFIFO[31:0] = {APB_WDATA[ : ], h }</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXOM</name>
              <description>RXFIFO Output Mode (Mode 0, 1, 2, 3)  : E pa di g  at LSB of I2S/PCM_RXFIFO register. 
01: Expanding received sample sign bit at MSB of I2S/PCM_RXFIFO register. 
10: Truncating received samples at high half-word of I2S/PCM_RXFIFO  register and low half-word of I2S/PCM_RXFIFO  egiste is filled  . 
11: Truncating received samples at low half-word of I2S/PCM_RXFIFO  register and high half-word of I2S/PCM_RXFIFO  register is expanded by its sign bit.  Example for 20-bit received audio sample: Mode 0: APB_RDATA[31:0] = {RXFIFO[31:12], h }  Mode 1: APB_RDATA [31:0] = {12{RXFIFO[31]}, RXFIFO[31:12]} Mode : APB_RDATA [ : ] = {RXFIFO[ : ], h }  Mode 3: APB_RDATA [31:0] = {16{RXFIFO[31], RXFIFO[31:16]} </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Expanding_received_sample_sign_bit</name>
                  <description>Expanding received sample sign bit at MSB of I2S/PCM_RXFIFO register.</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Truncating_received_samples_at_high</name>
                  <description>Truncating received samples at high half-word of I2S/PCM_RXFIFO  register and low half-word of I2S/PCM_RXFIFO  egiste is filled  .</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Truncating_received_samples_at_low</name>
                  <description>Truncating received samples at low half-word of I2S/PCM_RXFIFO  register and high half-word of I2S/PCM_RXFIFO  register is expanded by its sign bit.  Example for 20-bit received audio sample: Mode 0: APB_RDATA[31:0] = {RXFIFO[31:12], h }  Mode 1: APB_RDATA [31:0] = {12{RXFIFO[31]}, RXFIFO[31:12]} Mode : APB_RDATA [ : ] = {RXFIFO[ : ], h }  Mode 3: APB_RDATA [31:0] = {16{RXFIFO[31], RXFIFO[31:16]}</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_FMT0</name>
          <description>I2S_PCM_FMT0</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x33</resetValue>
          <resetMask>0x400BFFFF</resetMask>
          <fields>
            <field>
              <name>LRCK_WIDTH</name>
              <description>LRCK Width(only apply in PCM mode )     
0: LRCK = 1 BCLK width (short frame) 
1: LRCK = 2 BCLK width (long frame) </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LRCK__equals__1</name>
                  <description>LRCK = 1 BCLK width (short frame)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LRCK__equals__2</name>
                  <description>LRCK = 2 BCLK width (long frame)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LRCK_POLARITY</name>
              <description>When apply in I2S / Left-Justified / Right-Justified mode: 
0: Left channel when LRCK is low 
1: Left channel when LRCK is high  When apply in PCM mode: 
0: PCM LRCK asserted at the negative edge 
1: PCM LRCK asserted at the positive edge </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>low</name>
                  <description>Left channel when LRCK is low</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>high</name>
                  <description>Left channel when LRCK is high  When apply in PCM mode:</description>
                  <value>0b1</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PCM_LRCK_asserted_at_the_negative</name>
                  <description>PCM LRCK asserted at the negative edge</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PCM_LRCK_asserted_at_the_positive</name>
                  <description>PCM LRCK asserted at the positive edge</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LRCK_PERIOD</name>
              <description>It is used to program the number of BCLKs per channel of sample frame. This value is interpreted as follow: PCM mode: Number of BCLKs within (Left + Right) channel width I2S/Left-Justified/Right-Justified mode: Number of BCLKs within each individual channel width (Left or Right)   N+1 For example: n = 7:   8 BCLK width ...  n = 1023:   1024 BCLKs width </description>
              <bitRange>[17:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BCLK_POLARITY</name>
              <description>0: Normal mode, DOUT drive data at negative edge  
1: Invert mode, DOUT drive data at positive edge  </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal mode, DOUT drive data at negative edge</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert mode, DOUT drive data at positive edge</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SR</name>
              <description>Sample Resolution  
000: Reserved 
001: 8-bit 
010: 12-bit 
011: 16-bit 
100: 20-bit 
101: 24-bit 
110: 28-bit 
111: 32-bit </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8_bit</name>
                  <description>8-bit</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12_bit</name>
                  <description>12-bit</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_bit</name>
                  <description>16-bit</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20_bit</name>
                  <description>20-bit</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_bit</name>
                  <description>24-bit</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_28_bit</name>
                  <description>28-bit</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_bit</name>
                  <description>32-bit</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EDGE_TRANSFER</name>
              <description>0: DOUT drive data and DIN sample data at the different BCLK edge 
1: DOUT drive data and DIN sample data at the same BCLK edge  BCLK_POLARITY  = 0, EDGE_TRANSFER  = 0, DIN sample data at positive edge BCLK_POLARITY  = 0, EDGE_TRANSFER = 1, DIN sample data at negative edge BCLK_POLARITY  = 1, EDGE_TRANSFER = 0, DIN sample data at negative edge BCLK_POLARITY = 1, EDGE_TRANSFER = 1, DIN sample data at positive edge </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DOUT_drive_data_and_DIN_sample_data_at_the_different</name>
                  <description>DOUT drive data and DIN sample data at the different BCLK edge</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DOUT_drive_data_and_DIN_sample_data_at_the_same</name>
                  <description>DOUT drive data and DIN sample data at the same BCLK edge  BCLK_POLARITY  = 0, EDGE_TRANSFER  = 0, DIN sample data at positive edge BCLK_POLARITY  = 0, EDGE_TRANSFER = 1, DIN sample data at negative edge BCLK_POLARITY  = 1, EDGE_TRANSFER = 0, DIN sample data at negative edge BCLK_POLARITY = 1, EDGE_TRANSFER = 1, DIN sample data at positive edge</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SW</name>
              <description>Slot Width Select  
000: Reserved 
001: 8-bit 
010: 12-bit 
011: 16-bit 
100: 20-bit 
101: 24-bit 
110: 28-bit 
111: 32-bit </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8_bit</name>
                  <description>8-bit</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12_bit</name>
                  <description>12-bit</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_bit</name>
                  <description>16-bit</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20_bit</name>
                  <description>20-bit</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_bit</name>
                  <description>24-bit</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_28_bit</name>
                  <description>28-bit</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_bit</name>
                  <description>32-bit</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_FMT1</name>
          <description>I2S_PCM_FMT1</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x30</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RX</name>
              <description>MLS RX MSB / LSB First Select  
0: MSB First 
1: LSB First </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MSB</name>
                  <description>MSB First</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LSB</name>
                  <description>LSB First</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX</name>
              <description>MLS TX MSB / LSB First Select  
0: MSB First 
1: LSB First </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MSB</name>
                  <description>MSB First</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LSB</name>
                  <description>LSB First</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SEXT</name>
              <description>Sign Extend in Slot [sample resolution &lt; slot width]  
00: Zeros or audio gain padding at LSB position 
01: Sign extension at MSB position 
10: Reserved 
11: Transfer 0 after each sample in each slot </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Zeros</name>
                  <description>Zeros or audio gain padding at LSB position</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Sign</name>
                  <description>Sign extension at MSB position</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Transfer</name>
                  <description>Transfer 0 after each sample in each slot</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_PDM</name>
              <description>PCM Data Mode  
00: Linear PCM 
01: Reserved 
10: 8-bit u-law 
11: 8-bit A-law </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Linear_PCM</name>
                  <description>Linear PCM</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit_ulaw</name>
                  <description>8-bit u-law</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit_Alaw</name>
                  <description>8-bit A-law</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_PDM</name>
              <description>PCM Data Mode  
00: Linear PCM 
01: Reserved 
10: 8-bit u-law 
11: 8-bit A-law </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Linear_PCM</name>
                  <description>Linear PCM</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit_ulaw</name>
                  <description>8-bit u-law</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit_Alaw</name>
                  <description>8-bit A-law</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_FSTA</name>
          <description>I2S_PCM_FSTA</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x10800000</resetValue>
          <resetMask>0x10FF017F</resetMask>
          <fields>
            <field>
              <name>TXE</name>
              <description>TXFIFO Empty  
0: No room for new sample in TXFIFO 
1: More than one room for new sample in TXFIFO (&gt;= 1 word) </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_room</name>
                  <description>No room for new sample in TXFIFO</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>More</name>
                  <description>More than one room for new sample in TXFIFO (&gt;= 1 word)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXE_CNT</name>
              <description>TXFIFO Empty Space Word Counter </description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXA</name>
              <description>RXFIFO Available  
0: No available data in RXFIFO 
1: More than one sample in RXFIFO (&gt;= 1 word) </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_available</name>
                  <description>No available data in RXFIFO</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>More</name>
                  <description>More than one sample in RXFIFO (&gt;= 1 word)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXA_CNT</name>
              <description>RXFIFO Available Sample Word Counter </description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_INT</name>
          <description>I2S_PCM_INT</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>TX_DRQ</name>
              <description>TXFIFO Empty DRQ Enable  
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXUI_EN</name>
              <description>TXFIFO Underrun Interrupt Enable  
0: Disable 
1: Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXOI_EN</name>
              <description>TXFIFO Overrun Interrupt Enable  
0: Disable 
1: Enable  Whe set to , a i te upt happe s he  iti g e audio data if TXFIFO is full. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  Whe set to , a i te upt happe s he  iti g e audio data if TXFIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXEI_EN</name>
              <description>TXFIFO Empty Interrupt Enable  
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_DRQ</name>
              <description>RXFIFO Data Available DRQ Enable  
0: Disable 
1: Enable  Whe set to , RXFIFO DMA Re uest li e is asse ted if Data is a aila le i RX FIFO. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  Whe set to , RXFIFO DMA Re uest li e is asse ted if Data is a aila le i RX FIFO.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXUI_EN</name>
              <description>RXFIFO Underrun Interrupt Enable  
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXOI_EN</name>
              <description>RXFIFO Overrun Interrupt Enable  
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXAI_EN</name>
              <description>RXFIFO Data Available Interrupt Enable  
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_ISTA</name>
          <description>I2S_PCM_ISTA</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x10</resetValue>
          <resetMask>0x77</resetMask>
          <fields>
            <field>
              <name>TXU_INT</name>
              <description>TXFIFO Underrun Pending Interrupt  
0: No Pending Interrupt 
1: FIFO Underrun Pending Interrupt  W ite  to lea this i te upt. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending Interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Underrun Pending Interrupt  W ite  to lea this i te upt.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXO_INT</name>
              <description>TXFIFO Overrun Pending Interrupt  
0: No Pending Interrupt 
1: FIFO Overrun Pending Interrupt  W ite  to lea this i te upt. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending Interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Overrun Pending Interrupt  W ite  to lea this i te upt.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXE_INT</name>
              <description>TXFIFO Empty Pending Interrupt  
0: No Pending IRQ 
1: FIFO Empty Pending Interrupt when data in TXFIFO are less than TX trigger level  W ite  to lea t his interrupt or automatically clear if interrupt condition fails. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Empty Pending Interrupt when data in TXFIFO are less than TX trigger level  W ite  to lea t his interrupt or automatically clear if interrupt condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXU_INT</name>
              <description>RXFIFO Underrun Pending Interrupt  
0: No Pending Interrupt 
1: FIFO Underrun Pending Interrupt  Write 1 to clear this interrupt </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending Interrupt</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Underrun Pending Interrupt  Write 1 to clear this interrupt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXO_INT</name>
              <description>RXFIFO Overrun Pending Interrupt  
0: No Pending IRQ 
1: FIFO Overrun Pending IRQ   W ite  to lea this i te upt </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Overrun Pending IRQ   W ite  to lea this i te upt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RXA_INT</name>
              <description>RXFIFO Data Available Pending Interrupt  
0: No Pending IRQ 
1: Data Available Pending IRQ when data in RXFIFO are more than RX trigger level  W ite  to lea this i te upt o auto ati all  lea if i te upt o ditio  fails. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data Available Pending IRQ when data in RXFIFO are more than RX trigger level  W ite  to lea this i te upt o auto ati all  lea if i te upt o ditio  fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_RXCHMAP</name>
          <description>I2S_PCM_RXCHMAP</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>RX_CH7_MAP</name>
              <description>RX Channel7 Mapping  
000: 1st sample ... 
111: 8th sample </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH6_MAP</name>
              <description>RX Channel6 Mapping  
000: 1st sample ... 
111: 8th sample </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH5_MAP</name>
              <description>RX Channel5 Mapping  
000: 1st sample ... 
111: 8th sample </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH4_MAP</name>
              <description>RX Channel4 Mapping  
000: 1st sample ... 
111: 8th sample </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH3_MAP</name>
              <description>RX Channel3 Mapping  
000: 1st sample ... 
111: 8th sample </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH2_MAP</name>
              <description>RX Channel2 Mapping  
000: 1st sample ... 
111: 8th sample </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH1_MAP</name>
              <description>TX Channel1 Mapping  
000: 1st sample ... 
111: 8th sample </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CH0_MAP</name>
              <description>RX Channel0 Mapping  
000: 1st sample ... 
111: 8th sample </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_RXCHSEL</name>
          <description>I2S_PCM_RXCHSEL</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3007</resetMask>
          <fields>
            <field>
              <name>RX_OFFSET</name>
              <description>RX offset tune, RX data offset to LRCK  
00: No offset 
01: Data is offset by 1 BCLKs to LRCK Others: Reserved </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_offset</name>
                  <description>No offset</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data is offset by 1 BCLKs to LRCK Others: Reserved</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_CHSEL</name>
              <description>RX channel (slot) number select for input  
000: 1 channel / slot ... 
111: 8 channels / slots </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel / slot ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8 channels / slots</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_RXCNT</name>
          <description>I2S_PCM_RXCNT</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_CNT</name>
              <description>RX Sample Counter The audio sample number of writing into RXFIFO.  When one sample is written by RXFIFO, the RX sample counter register increases by one. The RX sample counter register can be set to any initial value at any time. After been updated by the initial value, the counter register should count on base of this initial value. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_RXFIFO</name>
          <description>I2S_PCM_RXFIFO</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RX_DATA</name>
              <description>RX Sample Host can get one sample by reading this register. The left channel sample data is first and then the right channel sample. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_TXCHMAP</name>
          <description>I2S_PCM_TXCHMAP</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>TX_CH7_MAP</name>
              <description>TX Channel7 Mapping  
000: 1st sample ... 
111: 8th sample </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CH6_MAP</name>
              <description>TX Channel6 Mapping  
000: 1st sample ... 
111: 8th sample </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CH5_MAP</name>
              <description>TX Channel5 Mapping  
000: 1st sample ... 
111: 8th sample </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CH4_MAP</name>
              <description>TX Channel4 Mapping  
000: 1st sample ... 
111: 8th sample </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CH3_MAP</name>
              <description>TX Channel3 Mapping  
000: 1st sample ... 
111: 8th sample </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CH2_MAP</name>
              <description>TX Channel2 Mapping  
000: 1st sample ... 
111: 8th sample </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CH1_MAP</name>
              <description>TX Channel1 Mapping  
000: 1st sample ... 
111: 8th sample </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CH0_MAP</name>
              <description>TX Channel0 Mapping  
000: 1st sample ... 
111: 8th sample </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1st_sample</name>
                  <description>1st sample ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8th_sample</name>
                  <description>8th sample</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_TXCHSEL</name>
          <description>I2S_PCM_TXCHSEL</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF7</resetMask>
          <fields>
            <field>
              <name>TX_OFFSET</name>
              <description>TX offset tune, TX data offset to LRCK   
00: No offset 
01: Data is offset by 1 BCLKs to LRCK Others: Reserved </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_offset</name>
                  <description>No offset</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data is offset by 1 BCLKs to LRCK Others: Reserved</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CHEN</name>
              <description>TX Channel (slot) enable, bit[11:4] refer to slot [7:0]. When one or more slot(s) is(are) disabled, the affected slot(s) is(are) set to disable state.  
0: Disable 
1: Enable </description>
              <bitRange>[11:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_CHSEL</name>
              <description>TX Channel (slot) number select for each output  
000: 1 channel / slot ... 
111: 8 channels / slots </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 channel / slot ...</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8 channels / slots</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_TXCNT</name>
          <description>I2S_PCM_TXCNT</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_CNT</name>
              <description>TX Sample Counter The audio sample number of sending into TXFIFO.  When one sample is put into TXFIFO by DMA or by host IO, the TX sample counter register increases by one. The TX sample counter register can be set to any initial value at any time. After been updated by the initial value, the counter register should count on base of this initial value. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>I2S_PCM_TXFIFO</name>
          <description>I2S_PCM_TXFIFO</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_DATA</name>
              <description>TX Sample Transmitting left, right channel sample data should be written this register one by one. The left channel sample data is first and then the right channel sample. </description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="I2S/PCM 0">
      <name>I2S/PCM 1</name>
      <description>I2S/PCM 1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C22400</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="I2S/PCM 0">
      <name>I2S/PCM 2</name>
      <description>I2S/PCM 2</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C22800</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>KEYADC</name>
      <description>KEYADC</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C21800</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>KEYADC_CTRL_REG</name>
          <description>KEYADC_CTRL_REG</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x1000168</resetValue>
          <resetMask>0xFFCF3FFD</resetMask>
          <fields>
            <field>
              <name>FIRST_CONVERT_DLY</name>
              <description>FIRST_CONVERT_DLY. ADC First Convert Delay Setting  ADC conversion is delayed by n samples </description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CONTINUE_TIME_SELECT</name>
              <description>CONTINUE_TIME_SELECT. Continue Mode Time Select One of 8*(N+1) sample as a valuable sample data </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>KEY_MODE_SELECT</name>
              <description>KEY_MODE_SELECT. Key Mode Select  
00: Normal Mode 
01: Single Mode 
10: Continue Mode </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Single</name>
                  <description>Single Mode</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Continue</name>
                  <description>Continue Mode</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LEVELA_B_CNT</name>
              <description>LEVELA_B_CNT. Level A to Level B time threshold select, judge ADC convert value in level A to level B in n+1 samples </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>KEYADC_HOLD_KEY_EN_KEYADC_HOLD</name>
              <description>KEYADC_HOLD_KEY_EN KEYADC Hold Key Enable  
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>KEYADC_HOLD_EN</name>
              <description>KEYADC_HOLD_EN. KEYADC Sample Hold Enable  
0: Disable 
1: Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LEVELB_VOL</name>
              <description>LEVELB_VOL. Level B Corresponding Data Value setting (the real voltage value)  
00: 0x3C (~2.1V) 
01: 0x39 (~1.99V) 
10: 0x36 (~1.86V) 
11: 0x33 (~1.78V) </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0x3C</name>
                  <description>0x3C (~2.1V)</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0x39</name>
                  <description>0x39 (~1.99V)</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0x36</name>
                  <description>0x36 (~1.86V)</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_0x33</name>
                  <description>0x33 (~1.78V)</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>KEYADC_SAMPLE_RATE</name>
              <description>KEYADC_SAMPLE_RATE. KEYADC Sample Rate  
00: 250 Hz 
01: 125 Hz 
10: 62.5 Hz 
11: 32.25 Hz </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_250</name>
                  <description>250 Hz</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_125</name>
                  <description>125 Hz</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_62_point_5</name>
                  <description>62.5 Hz</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_point_25</name>
                  <description>32.25 Hz</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>KEYADC_EN</name>
              <description>KEYADC_EN. KEYADC Enable  
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>KEYADC_DATA_REG</name>
          <description>KEYADC_DATA_REG</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>KEYADC_DATA</name>
              <description>KEYADC Data</description>
              <bitRange>[5:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>KEYADC_INTC_REG</name>
          <description>KEYADC_INTC_REG</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>ADC_KEYUP_IRQ_EN</name>
              <description>ADC Key Up IRQ Enable  
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_ALRDY_HOLD_IRQ_EN</name>
              <description>ADC Already Hold IRQ Enable  
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_HOLD_IRQ_EN</name>
              <description>ADC Hold Key IRQ Enable  
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_KEYDOWN_EN</name>
              <description>ADC Key Down Enable  
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_DATA_IRQ_EN</name>
              <description>ADC Data IRQ Enable  
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>KEYADC_INTS_REG</name>
          <description>KEYADC_INTS_REG</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>ADC_KEYUP_PENDING</name>
              <description>ADC Key Up Pending Bit When the general key pull up, the corresponding interrupt is enabled.  
0: No IRQ 
1: IRQ Pending  Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ</name>
                  <description>IRQ Pending  Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_ALRDY_HOLD_PENDING</name>
              <description>ADC Already Hold Pending Bit When hold key is in the pull-down state, at this time the general key is pulled down, then the ADC_ALRDY_HOLD_PENDING bit is set 1 by hardware if the ADC_ALRDY_HOLD_IRQ_EN bit is enabled 
0: No IRQ 
1: IRQ Pending  Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ</name>
                  <description>IRQ Pending  Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_HOLDKEY_PENDING</name>
              <description>ADC Hold Key Pending Bit When Hold key pull down, the status bit is set and the interrupt line is set if the corresponding interrupt is enabled.  
0: NO IRQ 
1: IRQ Pending  Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NO_IRQ</name>
                  <description>NO IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ</name>
                  <description>IRQ Pending  Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_KEYDOWN_PENDING</name>
              <description>ADC Key Down IRQ Pending Bit When General key pull down, the status bit is set and the interrupt line is set if the corresponding interrupt is enabled.  
0: No IRQ 
1: IRQ Pending  Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ</name>
                  <description>IRQ Pending  Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ADC_DATA_PENDING</name>
              <description>ADC Data IRQ Pending Bit  
0: No IRQ 
1: IRQ Pending  Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_IRQ</name>
                  <description>No IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>IRQ</name>
                  <description>IRQ Pending  Writing 1 to the bit will clear it and its corresponding interrupt if the interrupt is enabled.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>MSGBOX</name>
      <description>MSGBOX</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C17000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>8</dim>
          <dimIncrement>4</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x100</addressOffset>
          <register>
            <name>MSGBOXN_FIFO_STATUS_REG</name>
            <description>(N = 0~7)  FIFO Status for Message Queue N</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1</resetMask>
            <fields>
              <field>
                <name>FIFO_FULL_FLAG</name>
                <description>0: The Message FIFO queue is not full (space is available). 
1: The Message FIFO queue is full.   This FIFO status register has the status related to the message queue. </description>
                <bitRange>[0:0]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>not_full</name>
                    <description>The Message FIFO queue is not full (space is available).</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>full</name>
                    <description>The Message FIFO queue is full.   This FIFO status register has the status related to the message queue.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>MSGBOXN_MSG_REG</name>
            <description>(N = 0~7)  Message Register for Message Queue N</description>
            <addressOffset>0x80</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>MESSAGE</name>
                <description>The message register stores the next to be read message of the message FIFO queue. Reads remove the message from the FIFO queue. </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>MSGBOXN_MSG_STATUS_REG</name>
            <description>(N = 0~7)  Message Status for Message Queue N</description>
            <addressOffset>0x40</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x7</resetMask>
            <fields>
              <field>
                <name>MSG_NUM</name>
                <description>Number of unread messages in the message queue. Here, limit to four messages per message queue.  
000: There is no message in the message FIFO queue. 
001: There is 1 message in the message FIFO queue. 
010: There are 2 messages in the message FIFO queue. 
011: There are 3 messages in the message FIFO queue. 
100: There are 4 messages in the message FIFO queue. 101~111:/ </description>
                <bitRange>[2:0]</bitRange>
                <access>read-only</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>no_message</name>
                    <description>There is no message in the message FIFO queue.</description>
                    <value>0b000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>1</name>
                    <description>There is 1 message in the message FIFO queue.</description>
                    <value>0b001</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>There_are_2</name>
                    <description>There are 2 messages in the message FIFO queue.</description>
                    <value>0b010</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>There_are_3</name>
                    <description>There are 3 messages in the message FIFO queue.</description>
                    <value>0b011</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>There_are_4</name>
                    <description>There are 4 messages in the message FIFO queue. 101~111:/</description>
                    <value>0b100</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
        </cluster>
        <cluster>
          <dim>2</dim>
          <dimIncrement>32</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x40</addressOffset>
          <register>
            <name>MSGBOXU_IRQ_EN_REG</name>
            <description>(N=0,1)  IRQ Enable for User U</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>TRANSMIT_MQ7_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 7 is not full.) </description>
                <bitRange>[15:15]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 7 is not full.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ7_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 7 has received a new message.) </description>
                <bitRange>[14:14]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 7 has received a new message.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ6_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 6 is not full.) </description>
                <bitRange>[13:13]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 6 is not full.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ6_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 6 has received a new message.) </description>
                <bitRange>[12:12]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 6 has received a new message.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ5_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 5 is not full.) </description>
                <bitRange>[11:11]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 5 is not full.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ5_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 5 has received a new message.) </description>
                <bitRange>[10:10]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 5 has received a new message.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ4_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 4 is not full.) </description>
                <bitRange>[9:9]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 4 is not full.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ4_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 4 has received a new message.) </description>
                <bitRange>[8:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 4 has received a new message.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ3_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 3 is not full.) </description>
                <bitRange>[7:7]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 3 is not full.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ3_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 3 has received a new message.) </description>
                <bitRange>[6:6]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 3 has received a new message.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ2_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 2 is not full.) </description>
                <bitRange>[5:5]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 2 is not full.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ2_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 2 has received a new message.) </description>
                <bitRange>[4:4]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 2 has received a new message.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ1_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 1 is not full.) </description>
                <bitRange>[3:3]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 1 is not full.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ1_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 1 has received a new message.) </description>
                <bitRange>[2:2]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 1 has received a new message.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ0_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 0 is not full.) </description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 0 is not full.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ0_IRQ_EN</name>
                <description>0: Disable 
1: Enable (It will notify user u by interrupt when Message Queue 0 has received a new message.) </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable (It will notify user u by interrupt when Message Queue 0 has received a new message.)</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>MSGBOXU_IRQ_STATUS_REG</name>
            <description>(N=0,1)  IRQ Status for User U</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0xAAAA</resetValue>
            <resetMask>0xFFFF</resetMask>
            <fields>
              <field>
                <name>TRANSMIT_MQ7_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 7 is not full. Setting 1 to this bit will clear it. </description>
                <bitRange>[15:15]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 7 is not full. Setting 1 to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ7_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 7 has received a new message. Setting 1 to this bit will clear it. </description>
                <bitRange>[14:14]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 7 has received a new message. Setting 1 to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ6_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 6 is not full. Setting 1 to this bit will clear it. </description>
                <bitRange>[13:13]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 6 is not full. Setting 1 to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ6_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 6 has received a new message. Setting 1 to this bit will clear it. </description>
                <bitRange>[12:12]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 6 has received a new message. Setting 1 to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ5_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 5 is not full. Setting 1 to this bit will clear it. </description>
                <bitRange>[11:11]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 5 is not full. Setting 1 to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ5_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 5 has received a new message. Setting 1 to this bit will clear it. </description>
                <bitRange>[10:10]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 5 has received a new message. Setting 1 to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ4_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 4 is not full. Setting 1 to this bit will clear it. </description>
                <bitRange>[9:9]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 4 is not full. Setting 1 to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ4_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 4 has received a new message. Setting 1 to this bit will clear it. </description>
                <bitRange>[8:8]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 4 has received a new message. Setting 1 to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ3_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 3 is not full. Setting 1 to this bit will clear it. </description>
                <bitRange>[7:7]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 3 is not full. Setting 1 to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ3_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 3 has received a new message. Setting 1 to this bit will clear it. </description>
                <bitRange>[6:6]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 3 has received a new message. Setting 1 to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ2_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 2 is not full. Setting 1 to this bit will clear it. </description>
                <bitRange>[5:5]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 2 is not full. Setting 1 to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ2_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 2 has received a new message. Setting 1 to this bit will clear it. </description>
                <bitRange>[4:4]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 2 has received a new message. Setting 1 to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ1_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 1 is not full. Setting 1 to this bit will clear it. </description>
                <bitRange>[3:3]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 1 is not full. Setting 1 to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ1_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 1 has received a new message. Setting 1 to this bit will clear it. </description>
                <bitRange>[2:2]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 1 has received a new message. Setting 1 to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TRANSMIT_MQ0_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 0 is not full. Setting 1 to this bit will clear it. </description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 0 is not full. Setting 1 to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>RECEPTION_MQ0_IRQ_PEND</name>
                <description>0: No effect 
1: Pending. This bit will be pending for user u when Message Queue 0 has received a new message. Setting 1 to this bit will clear it. </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <modifiedWriteValues>oneToClear</modifiedWriteValues>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>No_effect</name>
                    <description>No effect</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Pending</name>
                    <description>Pending. This bit will be pending for user u when Message Queue 0 has received a new message. Setting 1 to this bit will clear it.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>MSGBOX_CTRL_REG0</name>
          <description>Message Queue Attribute Control Register 0</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x10101010</resetValue>
          <resetMask>0x11111111</resetMask>
          <fields>
            <field>
              <name>TRANSMIT_MQ3</name>
              <description>Message Queue 3 is a transmitter of user u.  
0: user0 
1: user1 </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RECEPTION_MQ3</name>
              <description>Message Queue 3 is a receiver of user u.  
0: user0 
1: user1 </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANSMIT_MQ2</name>
              <description>Message Queue 2 is a transmitter of user u.  
0: user0 
1: user1 </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RECEPTION_MQ2</name>
              <description>Message Queue 2 is a receiver of user u.  
0: user0 
1: user1 </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANSMIT_MQ1</name>
              <description>Message Queue 1 is a transmitter of user u.  
0: user0 
1: user1 </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RECEPTION_MQ1</name>
              <description>Message Queue 1 is a receiver of user u.  
0: user0 
1: user1 </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANSMIT_MQ0</name>
              <description>Message Queue 0 is a transmitter of user u.  
0: user0 
1: user1 </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RECEPTION_MQ0</name>
              <description>Message Queue 0 is a receiver of user u.  
0: user0 
1: user1 </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>MSGBOX_CTRL_REG1</name>
          <description>Message Queue Attribute Control Register 1</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x10101010</resetValue>
          <resetMask>0x11111111</resetMask>
          <fields>
            <field>
              <name>TRANSMIT_MQ7</name>
              <description>Message Queue 7 is a transmitter of user u.  
0: user0 
1: user1 </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RECEPTION_MQ7</name>
              <description>Message Queue 7 is a receiver of user u.  
0: user0 
1: user1 </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANSMIT_MQ6</name>
              <description>Message Queue 6 is a transmitter of user u.  
0: user0 
1: user1 </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RECEPTION_MQ6</name>
              <description>Message Queue 6 is a receiver of user u.  
0: user0 
1: user1 </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANSMIT_MQ5</name>
              <description>Message Queue 5 is a transmitter of user u.  
0: user0 
1: user1 </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RECEPTION_MQ5</name>
              <description>Message Queue 5 is a receiver of user u.  
0: user0 
1: user1 </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANSMIT_MQ4</name>
              <description>Message Queue 4 is a transmitter of user u.  
0: user0 
1: user1 </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RECEPTION_MQ4</name>
              <description>Message Queue 4 is a receiver of user u.  
0: user0 
1: user1 </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>user0</name>
                  <description>user0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>user1</name>
                  <description>user1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>NDFC</name>
      <description>NDFC</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C03000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>NDFC_ADDR_HIGH</name>
          <description>NDFC High Word Address Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADDR_DATA8</name>
              <description>NAND Flash 8th Cycle Address Data </description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_DATA7</name>
              <description>NAND Flash 7th Cycle Address Data </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_DATA6</name>
              <description>NAND Flash 6th Cycle Address Data </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_DATA5</name>
              <description>NAND Flash 5th Cycle Address Data </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ADDR_LOW</name>
          <description>NDFC Low Word Address Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ADDR_DATA4</name>
              <description>NAND Flash 4th Cycle Address Data </description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_DATA3</name>
              <description>NAND Flash 3rd Cycle Address Data </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_DATA2</name>
              <description>NAND Flash 2nd Cycle Address Data </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_DATA1</name>
              <description>NAND Flash 1st Cycle Address Data </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_CMD</name>
          <description>Set up NDFC commands Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_CMD_TYPE</name>
              <description>00: Common Command for normal operation 
01: Special Command for Flash Spare Field Operation 
10: Page Command for batch process operation 
11: Reserved </description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Common</name>
                  <description>Common Command for normal operation</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Special</name>
                  <description>Special Command for Flash Spare Field Operation</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Page</name>
                  <description>Page Command for batch process operation</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_SEND_FOURTH_CMD</name>
              <description>: Do t se d thi d set o a d  : Se d it o the e te al e o s us  Note: It is used for EF-NAND page read. </description>
              <bitRange>[29:29]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_SEND_THIRD_CMD</name>
              <description>: Do t se d thi d set o a d  : Se d it o the e te al e o s us  Note: It is used for EF-NAND page read. </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_ROW_ADDR_AUTO</name>
              <description>Row address auto increase for page command  
0: Normal operation 
1: Row address increasing automatically </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal operation</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Row</name>
                  <description>Row address increasing automatically</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DATA_METHOD</name>
              <description>Data swap method when the internal RAM and system memory It is only active for common command and special command.  
0: No action 
1: DMA transfer automatically  It only is active when NDFC_DATA_METHOD is 1. If this bit is set to 1, NDFC should setup DRQ to fetch data before output to Flash, or NDFC should setup DRQ to send out to system memory after fetching data from Flash. If this bit is set to 0, NDFC outputs the data to internal RAM or do nothing after fetching data from Flash. </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_action</name>
                  <description>No action</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMA</name>
                  <description>DMA transfer automatically  It only is active when NDFC_DATA_METHOD is 1. If this bit is set to 1, NDFC should setup DRQ to fetch data before output to Flash, or NDFC should setup DRQ to send out to system memory after fetching data from Flash. If this bit is set to 0, NDFC outputs the data to internal RAM or do nothing after fetching data from Flash.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_SEQ</name>
              <description>User data &amp; BCH check word position.  It o l is a ti e fo page o a d, do t a e a out this it fo othe t o commands.  
0: Interleave Method (on page spare area) 
1: Sequence Method (following data block) </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Interleave</name>
                  <description>Interleave Method (on page spare area)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Sequence</name>
                  <description>Sequence Method (following data block)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_SEND_SECOND_CMD</name>
              <description>0: Don t se d the se o d set o a d  : Se d it o the e te al e o s us </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Don</name>
                  <description>Don t se d the se o d set o a d  : Se d it o the e te al e o s us</description>
                  <value>0b0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_WAIT_FLAG</name>
              <description>0: NDFC can transfer data regardless of the internal NDFC_RB wire 
1: NDFC can transfer data when the internal NDFC_RB wire is READY; othe ise it a t he  the internal NDFC_RB wire is BUSY. </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NDFC_can_transfer_data_regardless</name>
                  <description>NDFC can transfer data regardless of the internal NDFC_RB wire</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDFC_can_transfer_data_when</name>
                  <description>NDFC can transfer data when the internal NDFC_RB wire is READY; othe ise it a t he  the internal NDFC_RB wire is BUSY.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_SEND_FIRST_CMD</name>
              <description>: Do t se d the fi st set o a d  : Se d it o the e te al e o s us </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_DATA_TRANS</name>
              <description>0: No data transfer on external memory bus 
1: Data transfer and direction is decided by the field NDFC_ACCESS_DIR . </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_data</name>
                  <description>No data transfer on external memory bus</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data transfer and direction is decided by the field NDFC_ACCESS_DIR .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ACCESS_DIR</name>
              <description>0: Read NAND Flash  
1: Write NAND Flash  </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Read</name>
                  <description>Read NAND Flash</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Write</name>
                  <description>Write NAND Flash</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_SEND_ADR</name>
              <description>: Do t se d ADDRESS 
1: Send N cycles ADDRESS, the number N is specified by the field NDFC_ADR_NUM . </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send N cycles ADDRESS, the number N is specified by the field NDFC_ADR_NUM .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ADR_NUM</name>
              <description>Add ess C les Nu e   
000: 1 cycle address field 
001: 2 cycles address field 
010: 3 cycles address field 
011: 4 cycles address field 
100: 5 cycles address field 
101: 6 cycles address field 
110: 7 cycles address field 
111: 8 cycles address field </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_cycle</name>
                  <description>1 cycle address field</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_cycles</name>
                  <description>2 cycles address field</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3_cycles</name>
                  <description>3 cycles address field</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_cycles</name>
                  <description>4 cycles address field</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_5_cycles</name>
                  <description>5 cycles address field</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_cycles</name>
                  <description>6 cycles address field</description>
                  <value>0b101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_cycles</name>
                  <description>7 cycles address field</description>
                  <value>0b110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_cycles</name>
                  <description>8 cycles address field</description>
                  <value>0b111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_CMD_HIGH_BYTE</name>
              <description>NDFC Command High Byte Data If 8-bit command is supported, the high byte should be zero for 16-bit bus width NAND Flash. For 8-bit bus width NAND Flash, high byte command is discarded. </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_CMD_LOW_BYTE</name>
              <description>NDFC Command Low Byte Data This command will be sent to external Flash by NDFC. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_CMD_SET0</name>
          <description>NDFC_CMD_SET0</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0xE00530</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_RANDOM_READ_CMD1</name>
              <description>Used for batch read operation </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_RANDOM_READ_CMD0</name>
              <description>Used for batch read operation </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_READ_CMD</name>
              <description>Used for batch read operation </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_CMD_SET1</name>
          <description>NDFC_CMD_SET1</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x708510</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_READ_CMD0</name>
              <description>Used for EF-NAND page read operation </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_READ_CMD1</name>
              <description>Used for EF-NAND page read operation </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_RANDOM_WRITE_CMD</name>
              <description>Used for batch write operation </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_PROGRAM_CMD</name>
              <description>Used for batch write operation </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_CNT</name>
          <description>NDFC Data Counter for Data Transfer Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>NDFC_DATA_CNT</name>
              <description>Transfer Data Byte Counter The length can be set from 1 byte to 1024 bytes. However, 1024 bytes is set when it is zero. </description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_CTL</name>
          <description>NDFC Configure and Control Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF3FCF5F</resetMask>
          <fields>
            <field>
              <name>NDFC_CE_SEL</name>
              <description>Chip Select for 8 NAND Flash Chips  0000~0111: NDFC Chip Select Signal 0-7 is selected 1000~1111: NDFC CS[7:0] not selected. GPIO pins can be used for CS. NDFC can support up to 16 CS. </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_DDR_RM</name>
              <description>DDR Repeat data mode  
0: Lower byte 
1: Higher byte </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Lower</name>
                  <description>Lower byte</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Higher</name>
                  <description>Higher byte</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DDR_REN</name>
              <description>DDR Repeat Enable  
0: Disable 
1: Enable </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NF_TYPE</name>
              <description>NAND Flash Type  
00: Normal SDR NAND 
01: Reserved 
10: ONFI DDR NAND  
11: Toggle DDR NAND </description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal SDR NAND</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ONFI</name>
                  <description>ONFI DDR NAND</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Toggle</name>
                  <description>Toggle DDR NAND</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_CLE_POL</name>
              <description>NDFC Command Latch Enable (CLE) Signal Polarity Select  
0: High active 
1: Low active </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>High</name>
                  <description>High active</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Low active</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ALE_POL</name>
              <description>NDFC Address Latch Enable (ALE) Signal Polarity Select  
0: High active 
1: Low active </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>High</name>
                  <description>High active</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Low active</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DMA_TYPE</name>
              <description>0: Dedicated DMA 
1: Normal DMA </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Dedicated</name>
                  <description>Dedicated DMA</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal DMA</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RAM_METHOD</name>
              <description>Access internal RAM method  
0: Access internal RAM by AHB bus 
1: Access internal RAM by DMA bus </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Access_internal_RAM_by_AHB</name>
                  <description>Access internal RAM by AHB bus</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Access_internal_RAM_by_DMA</name>
                  <description>Access internal RAM by DMA bus</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_PAGE_SIZE</name>
              <description>0000: 1024 bytes 
0001: 2048 bytes 
0010: 4096 bytes 
0011: 8192 bytes 
0100: 16384 bytes  Note: The page size is for main field data. </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1024</name>
                  <description>1024 bytes</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2048</name>
                  <description>2048 bytes</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4096</name>
                  <description>4096 bytes</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8192</name>
                  <description>8192 bytes</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16384</name>
                  <description>16384 bytes  Note: The page size is for main field data.</description>
                  <value>0b0100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_CE_ACT</name>
              <description>Chip select signal CE# control during NAND operation  
0: De-active chip select signal NDFC_CE# during data loading, serial access and other no operation stage for power consumption. NDFC automatically controls chip select signals.  
1: Chip select signal NDFC_CE# is always active after NDFC is enabled. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deactive</name>
                  <description>De-active chip select signal NDFC_CE# during data loading, serial access and other no operation stage for power consumption. NDFC automatically controls chip select signals.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Chip</name>
                  <description>Chip select signal NDFC_CE# is always active after NDFC is enabled.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RB_SEL</name>
              <description>NDFC external R/B signal select The value 0-3 selects the external R/B signal. The same R/B signal can be used for multiple chip select flash. </description>
              <bitRange>[4:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_BUS_WIDTH</name>
              <description>0: 8-bit bus 
1: 16-bit bus </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8_bit</name>
                  <description>8-bit bus</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_bit</name>
                  <description>16-bit bus</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RESET</name>
              <description>NDFC Reset Write 1 to reset NDFC and clear to 0 after reset </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_EN</name>
              <description>NDFC Enable Control  
0: Disable NDFC 
1: Enable NDFC </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable NDFC</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable NDFC</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_DATA_BLOCK_NUM</name>
          <description>NDFC_DATA_BLOCK_NUM</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>NDFC_DATA_BLOCK_NUM</name>
              <description>DATA BLOCK Number It is used for batch command procession.   
00000: no data  
00001: 1 data blocks 
000010: 2 data blocks ... 
10000: 16 data blocks Others: Reserved  Note: 1 data block = 512 or 1024 bytes main field data</description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2_data</name>
                  <description>2 data blocks ...</description>
                  <value>0b000010</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ECC_CTL</name>
          <description>ECC Configure and Control Register</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x4A800008</resetValue>
          <resetMask>0x7FFFFE39</resetMask>
          <fields>
            <field>
              <name>NDFC_RANDOM_SEED</name>
              <description>The seed value for randomize engine. It is only active when NDFC_RANDOM_EN  is set to . </description>
              <bitRange>[30:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_ECC_MODE</name>
              <description>0000: BCH-16 for one ECC Data Block 
0001: BCH-24 for one ECC Data Block 0010 : BCH-28 for one ECC Data Block 0011 : BCH-32 for one ECC Data Block 0100 : BCH-40 for one ECC Data Block 0101 : BCH-48 for one ECC Data Block 0110 : BCH-56 for one ECC Data Block 0111 : BCH-60 for one ECC Data Block 1000 : BCH-64 for one ECC Data Block Others: Reserved </description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BCH_minus_16</name>
                  <description>BCH-16 for one ECC Data Block</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>BCH_minus_24</name>
                  <description>BCH-24 for one ECC Data Block 0010 : BCH-28 for one ECC Data Block 0011 : BCH-32 for one ECC Data Block 0100 : BCH-40 for one ECC Data Block 0101 : BCH-48 for one ECC Data Block 0110 : BCH-56 for one ECC Data Block 0111 : BCH-60 for one ECC Data Block 1000 : BCH-64 for one ECC Data Block Others: Reserved</description>
                  <value>0b0001</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RANDOM_SIZE</name>
              <description>0: ECC block size 
1: Page size </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ECC</name>
                  <description>ECC block size</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Page</name>
                  <description>Page size</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RANDOM_DIRECTION</name>
              <description>0: LSB first 
1: MSB first </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LSB</name>
                  <description>LSB first</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>MSB</name>
                  <description>MSB first</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RANDOM_EN</name>
              <description>0: Disable Data Randomize 
1: Enable Data Randomize </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable Data Randomize</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable Data Randomize</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_BLOCK_SIZE</name>
              <description>0: 1024 bytes of one ECC data block 
1: 512 bytes of one ECC data block </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1024</name>
                  <description>1024 bytes of one ECC data block</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_512</name>
                  <description>512 bytes of one ECC data block</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_EXCEPTION</name>
              <description>0: Normal ECC 
1: For ECC, there is an exception. If all data is 0xff or 0x00 for the block. When reading this page, ECC assumes that it is right. For this case, no error information is reported.  Note: It only is active when ECC is ON </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal ECC</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>For</name>
                  <description>For ECC, there is an exception. If all data is 0xff or 0x00 for the block. When reading this page, ECC assumes that it is right. For this case, no error information is reported.  Note: It only is active when ECC is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_PIPELINE</name>
              <description>Pipeline function enable or disable for batch command  
0: Error correction function no pipeline with next block operation 
1: Error correction pipeline </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Error_correction_function</name>
                  <description>Error correction function no pipeline with next block operation</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Error_correction_pipeline</name>
                  <description>Error correction pipeline</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_EN</name>
              <description>0: ECC is OFF 
1: ECC is ON </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>OFF</name>
                  <description>ECC is OFF</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>ON</name>
                  <description>ECC is ON</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ECC_ST</name>
          <description>ECC Status and Operation information Register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_PAT_FOUND</name>
              <description>Special Pattern (all 0x00 or all 0xff) Found Flag for 16 Data Blocks  
0: No Found 
1: Special pattern is found  Whe this field is , this ea s that the spe ial data is fou d fo  eadi g external NAND flash. The NDFC_PAT_ID  register indicates which pattern is found. </description>
              <bitRange>[31:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>NDFC_ECC_ERR</name>
              <description>Error information bit of 16 Data Blocks  
0: ECC can correct these error bits or there is no error bit : E o  its u e  e o d of ECC o e tio  apa ilit a d a t o e t them  Note: The LSB of this register is corresponding the 1st ECC data block. 1 ECC Data Block = 512 or 1024 bytes. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_EFNAND_STATUS</name>
          <description>NDFC_EFNAND_STATUS</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>EF_NAND_STATUS</name>
              <description>The status value for EF-NAND page read operation </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_EFR</name>
          <description>Enhanced Feature Register</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF7F</resetMask>
          <fields>
            <field>
              <name>NDFC_WP_CTRL</name>
              <description>NAND Flash Write Protect Control Bit  
0: Write Protect is active 
1: Write Protect is not active  Note: Whe this it is , WP sig al li e is lo le el a d e te al NAND flash is on protected state. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>active</name>
                  <description>Write Protect is active</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_active</name>
                  <description>Write Protect is not active  Note: Whe this it is , WP sig al li e is lo le el a d e te al NAND flash is on protected state.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_ECC_DEBUG</name>
              <description>For the purpose of debugging ECC engine, the special bits error are inserted before writing external Flash Memory.  
0: No error is inserted (ECC Normal Operation) n: N bits error are inserted </description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ERR_CNT0</name>
          <description>Corrected Error Bit Counter Register 0</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ECC_COR_NUM3</name>
              <description>ECC Corrected Bits Number for ECC Data Block[3]   
00000000: No corrected bits 
00000001: 1 corrected bit 
00000010: 2 corrected bits ... 
01000000: 64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes </description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_corrected</name>
                  <description>No corrected bits</description>
                  <value>0b00000000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 corrected bit</description>
                  <value>0b00000001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 corrected bits ...</description>
                  <value>0b00000010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes</description>
                  <value>0b01000000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_COR_NUM2</name>
              <description>ECC Corrected Bits Number for ECC Data Block[3]   
00000000: No corrected bits 
00000001: 1 corrected bit 
00000010: 2 corrected bits ... 
01000000: 64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes </description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_corrected</name>
                  <description>No corrected bits</description>
                  <value>0b00000000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 corrected bit</description>
                  <value>0b00000001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 corrected bits ...</description>
                  <value>0b00000010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes</description>
                  <value>0b01000000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_COR_NUM1</name>
              <description>ECC Corrected Bits Number for ECC Data Block[3]   
00000000: No corrected bits 
00000001: 1 corrected bit 
00000010: 2 corrected bits ... 
01000000: 64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes </description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_corrected</name>
                  <description>No corrected bits</description>
                  <value>0b00000000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 corrected bit</description>
                  <value>0b00000001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 corrected bits ...</description>
                  <value>0b00000010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes</description>
                  <value>0b01000000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_COR_NUM0</name>
              <description>ECC Corrected Bits Number for ECC Data Block[3]   
00000000: No corrected bits 
00000001: 1 corrected bit 
00000010: 2 corrected bits ... 
01000000: 64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_corrected</name>
                  <description>No corrected bits</description>
                  <value>0b00000000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 corrected bit</description>
                  <value>0b00000001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 corrected bits ...</description>
                  <value>0b00000010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes</description>
                  <value>0b01000000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ERR_CNT1</name>
          <description>Corrected Error Bit Counter Register 1</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ECC_COR_NUM3</name>
              <description>ECC Corrected Bits Number for ECC Data Block[7]   
00000000: No corrected bits 
00000001: 1 corrected bit 
00000010: 2 corrected bits ... 
01000000: 64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_corrected</name>
                  <description>No corrected bits</description>
                  <value>0b00000000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 corrected bit</description>
                  <value>0b00000001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 corrected bits ...</description>
                  <value>0b00000010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes</description>
                  <value>0b01000000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_COR_NUM2</name>
              <description>ECC Corrected Bits Number for ECC Data Block[6]   
00000000: No corrected bits 
00000001: 1 corrected bit 
00000010: 2 corrected bits ... 
01000000: 64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes </description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_corrected</name>
                  <description>No corrected bits</description>
                  <value>0b00000000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 corrected bit</description>
                  <value>0b00000001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 corrected bits ...</description>
                  <value>0b00000010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes</description>
                  <value>0b01000000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_COR_NUM1</name>
              <description>ECC Corrected Bits Number for ECC Data Block[5]   
00000000: No corrected bits 
00000001: 1 corrected bit 
00000010: 2 corrected bits ... 
01000000: 64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes </description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_corrected</name>
                  <description>No corrected bits</description>
                  <value>0b00000000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 corrected bit</description>
                  <value>0b00000001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 corrected bits ...</description>
                  <value>0b00000010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes</description>
                  <value>0b01000000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_COR_NUM0</name>
              <description>ECC Corrected Bits Number for ECC Data Block[4]   
00000000: No corrected bits 
00000001: 1 corrected bit 
00000010: 2 corrected bits ... 
01000000: 64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_corrected</name>
                  <description>No corrected bits</description>
                  <value>0b00000000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 corrected bit</description>
                  <value>0b00000001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 corrected bits ...</description>
                  <value>0b00000010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes</description>
                  <value>0b01000000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ERR_CNT2</name>
          <description>NDFC_ERR_CNT2</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ECC_COR_NUM3</name>
              <description>ECC Corrected Bits Number for ECC Data Block[11]   
00000000: No corrected bits 
00000001: 1 corrected bit 
00000010: 2 corrected bits ... 
01000000: 64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_corrected</name>
                  <description>No corrected bits</description>
                  <value>0b00000000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 corrected bit</description>
                  <value>0b00000001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 corrected bits ...</description>
                  <value>0b00000010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes</description>
                  <value>0b01000000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_COR_NUM2</name>
              <description>ECC Corrected Bits Number for ECC Data Block[10]   
00000000: No corrected bits 
00000001: 1 corrected bit 
00000010: 2 corrected bits ... 
01000000: 64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes </description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_corrected</name>
                  <description>No corrected bits</description>
                  <value>0b00000000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 corrected bit</description>
                  <value>0b00000001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 corrected bits ...</description>
                  <value>0b00000010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes</description>
                  <value>0b01000000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_COR_NUM1</name>
              <description>ECC Corrected Bits Number for ECC Data Block[9]   
00000000: No corrected bits 
00000001: 1 corrected bit 
00000010: 2 corrected bits ... 
01000000: 64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes </description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_corrected</name>
                  <description>No corrected bits</description>
                  <value>0b00000000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 corrected bit</description>
                  <value>0b00000001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 corrected bits ...</description>
                  <value>0b00000010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes</description>
                  <value>0b01000000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_COR_NUM0</name>
              <description>ECC Corrected Bits Number for ECC Data Block[8]   
00000000: No corrected bits 
00000001: 1 corrected bit 
00000010: 2 corrected bits ... 
01000000: 64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_corrected</name>
                  <description>No corrected bits</description>
                  <value>0b00000000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 corrected bit</description>
                  <value>0b00000001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 corrected bits ...</description>
                  <value>0b00000010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes</description>
                  <value>0b01000000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ERR_CNT3</name>
          <description>NDFC_ERR_CNT3</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>ECC_COR_NUM3</name>
              <description>ECC Corrected Bits Number for ECC Data Block[15]   
00000000: No corrected bits 
00000001: 1 corrected bit 
00000010: 2 corrected bits ... 
01000000: 64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes</description>
              <bitRange>[31:24]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_corrected</name>
                  <description>No corrected bits</description>
                  <value>0b00000000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 corrected bit</description>
                  <value>0b00000001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 corrected bits ...</description>
                  <value>0b00000010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes</description>
                  <value>0b01000000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_COR_NUM2</name>
              <description>ECC Corrected Bits Number for ECC Data Block[14]   
00000000: No corrected bits 
00000001: 1 corrected bit 
00000010: 2 corrected bits ... 
01000000: 64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes </description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_corrected</name>
                  <description>No corrected bits</description>
                  <value>0b00000000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 corrected bit</description>
                  <value>0b00000001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 corrected bits ...</description>
                  <value>0b00000010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes</description>
                  <value>0b01000000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_COR_NUM1</name>
              <description>ECC Corrected Bits Number for ECC Data Block[13]   
00000000: No corrected bits 
00000001: 1 corrected bit 
00000010: 2 corrected bits ... 
01000000: 64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes </description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_corrected</name>
                  <description>No corrected bits</description>
                  <value>0b00000000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 corrected bit</description>
                  <value>0b00000001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 corrected bits ...</description>
                  <value>0b00000010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes</description>
                  <value>0b01000000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_COR_NUM0</name>
              <description>ECC Corrected Bits Number for ECC Data Block[12]   
00000000: No corrected bits 
00000001: 1 corrected bit 
00000010: 2 corrected bits ... 
01000000: 64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_corrected</name>
                  <description>No corrected bits</description>
                  <value>0b00000000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 corrected bit</description>
                  <value>0b00000001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 corrected bits ...</description>
                  <value>0b00000010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 corrected bits Others: Reserved  Note: 1 ECC Data Block = 512 or 1024 bytes</description>
                  <value>0b01000000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_INT</name>
          <description>NDFC Interrupt Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>NDFC_DMA_INT_ENABLE</name>
              <description>Enable or disable interrupt when a pending DMA is completed. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NDFC_CMD_INT_ENABLE</name>
              <description>Enable or disable interrupt when NDFC has finished the procession of a single command in Normal Command Work Mode or one Batch Command Work Mode.  
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_B2R_INT_ENABLE</name>
              <description>Enable or disable interrupt when NDFC_RB# signal is transferring from BUSY state to READY state.  
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_IO_DATA</name>
          <description>Data Input/Output Port Address Register</description>
          <addressOffset>0x300</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_IO_DATA</name>
              <description>Read/Write data into the internal RAM Access unit is 32-bit. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_MDMA_ADDR</name>
          <description>MBUS DMA Address Register</description>
          <addressOffset>0xC0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>MDMA_ADDR</name>
              <description>MBUS DMA address </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_MDMA_CNT</name>
          <description>MBUS DMA Data Counter Register</description>
          <addressOffset>0xC4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FFF</resetMask>
          <fields>
            <field>
              <name>MDMA_CNT</name>
              <description>MBUS DMA data counter</description>
              <bitRange>[14:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_NDMA_MODE_CTL</name>
          <description>NDFC Normal DMA Mode Control Register</description>
          <addressOffset>0xD0</addressOffset>
          <resetValue>0xA5</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>NDMA_MODE_CTL</name>
              <description>0xEA: NDMA handshake mode Note: NDMA ait ode do t a e this alue. A  a  e also used i  handshake mode, but 0xEA is better. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NDMA</name>
                  <description>NDMA handshake mode Note: NDMA ait ode do t a e this alue. A  a  e also used i  handshake mode, but 0xEA is better.</description>
                  <value>0xEA</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_PAT_ID</name>
          <description>Pattern ID Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PAT_ID15</name>
              <description>Special Pattern ID for ECC data block[15]  
0: All 0x00 is found 
1: All 0xFF is found Others: Reserved</description>
              <bitRange>[31:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID14</name>
              <description>Special Pattern ID for ECC data block[14]  
0: All 0x00 is found 
1: All 0xFF is found Others: Reserved</description>
              <bitRange>[29:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID13</name>
              <description>Special Pattern ID for ECC data block[13]  
0: All 0x00 is found 
1: All 0xFF is found Others: Reserved</description>
              <bitRange>[27:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID12</name>
              <description>Special Pattern ID for ECC data block[12]  
0: All 0x00 is found 
1: All 0xFF is found Others: Reserved</description>
              <bitRange>[25:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID11</name>
              <description>Special Pattern ID for ECC data block[11]  
0: All 0x00 is found 
1: All 0xFF is found Others: Reserved</description>
              <bitRange>[23:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID10</name>
              <description>Special Pattern ID for ECC data block[10]  
0: All 0x00 is found 
1: All 0xFF is found Others: Reserved</description>
              <bitRange>[21:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID9</name>
              <description>Special Pattern ID for ECC data block[9]  
0: All 0x00 is found 
1: All 0xFF is found Others: Reserved</description>
              <bitRange>[19:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID8</name>
              <description>Special Pattern ID for ECC data block[8]  
0: All 0x00 is found 
1: All 0xFF is found Others: Reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID7</name>
              <description>Special Pattern ID for ECC data block[7]  
0: All 0x00 is found 
1: All 0xFF is found Others: Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID6</name>
              <description>Special Pattern ID for ECC data block[6]  
0: All 0x00 is found 
1: All 0xFF is found Others: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID5</name>
              <description>Special Pattern ID for ECC data block[5]  
0: All 0x00 is found 
1: All 0xFF is found Others: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID4</name>
              <description>Special Pattern ID for ECC data block[4]  
0: All 0x00 is found 
1: All 0xFF is found Others: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID3</name>
              <description>Special Pattern ID for ECC data block[3]  
0: All 0x00 is found 
1: All 0xFF is found Others: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID2</name>
              <description>Special Pattern ID for ECC data block[2]  
0: All 0x00 is found 
1: All 0xFF is found Others: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID1</name>
              <description>Special Pattern ID for ECC data block[1]  
0: All 0x00 is found 
1: All 0xFF is found Others: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>PAT_ID0</name>
              <description>Special Pattern ID for ECC data block[0]  
0: All 0x00 is found 
1: All 0xFF is found Others: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_RDATA_STA_0</name>
          <description>Read Data Status Register 0</description>
          <addressOffset>0xAC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CNT_1</name>
              <description>The number of input bit 1 during current command. It will be cleared automatically when next command is executed. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_RDATA_STA_1</name>
          <description>Read Data Status Register 1</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BIT_CNT_0</name>
              <description>The number of input bit 0 during current command. It will be cleared automatically when next command is executed.</description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_RDATA_STA_CTL</name>
          <description>Read Data Status Control Register</description>
          <addressOffset>0xA8</addressOffset>
          <resetValue>0x1000000</resetValue>
          <resetMask>0x103FFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_RDATA_STA_EN</name>
              <description>0: Disable to count the number of bit 1 and bit 0 during current read operation.  
1: Enable to count the number of bit 1 and bit 0 during current read operation.   The number of bit 1 and bit 0 during current read operation can be used to check whether a page is blank or bad. </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable to count the number of bit 1 and bit 0 during current read operation.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable to count the number of bit 1 and bit 0 during current read operation.   The number of bit 1 and bit 0 during current read operation can be used to check whether a page is blank or bad.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RDATA_STA_TH</name>
              <description>The threshold value to generate data status.  If the number of bit 1 during current read operation is less than or equal to threshold value, the NDFC_RDATA_STA_0 bit will be set.  If the number of bit 0 during current read operation is less than or equal to threshold value, the NDFC_RDATA_STA_1 bit will be set.  </description>
              <bitRange>[17:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_SPARE_AREA</name>
          <description>Spare Area Configure Register</description>
          <addressOffset>0xA0</addressOffset>
          <resetValue>0x400</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>NDFC_SPARE_ADR</name>
              <description>This value indicates the first byte address of the spare area for NDFC interleave page operation.</description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_ST</name>
          <description>NDFC Status Information Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0xF00</resetValue>
          <resetMask>0x3F1F</resetMask>
          <fields>
            <field>
              <name>NDFC_RDATA_STA_0</name>
              <description>0: The number of bit 1 during current read operation is greater threshold value. 
1: The number of bit 1 during current read operation is less than or equal to threshold value.  This field only is valid when NDFC_RDATA_STA_EN is 1. The threshold value is configured in NDFC_RDATA_STA_TH .  </description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>greater</name>
                  <description>The number of bit 1 during current read operation is greater threshold value.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>less</name>
                  <description>The number of bit 1 during current read operation is less than or equal to threshold value.  This field only is valid when NDFC_RDATA_STA_EN is 1. The threshold value is configured in NDFC_RDATA_STA_TH .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RDATA_STA_1</name>
              <description>0: The number of bit 0 during current read operation is greater threshold value. 
1: The number of bit 0 during current read operation is less than or equal to than threshold value.  This field only is valid when NDFC_RDATA_STA_EN is 1. The threshold value is configured in NDFC_RDATA_STA_TH .  </description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>greater</name>
                  <description>The number of bit 0 during current read operation is greater threshold value.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>less</name>
                  <description>The number of bit 0 during current read operation is less than or equal to than threshold value.  This field only is valid when NDFC_RDATA_STA_EN is 1. The threshold value is configured in NDFC_RDATA_STA_TH .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RB_STATE3</name>
              <description>NAND Flash R/B 3 Line State  
0: NAND Flash in BUSY State 
1: NAND Flash in READY State </description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NAND_Flash_in_BUSY</name>
                  <description>NAND Flash in BUSY State</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NAND_Flash_in_READY</name>
                  <description>NAND Flash in READY State</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RB_STATE2</name>
              <description>NAND Flash R/B 2 Line State  
0: NAND Flash in BUSY State 
1: NAND Flash in READY State </description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NAND_Flash_in_BUSY</name>
                  <description>NAND Flash in BUSY State</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NAND_Flash_in_READY</name>
                  <description>NAND Flash in READY State</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RB_STATE1</name>
              <description>NAND Flash R/B 1 Line State  
0: NAND Flash in BUSY State 
1: NAND Flash in READY State </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NAND_Flash_in_BUSY</name>
                  <description>NAND Flash in BUSY State</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NAND_Flash_in_READY</name>
                  <description>NAND Flash in READY State</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_RB_STATE0</name>
              <description>NAND Flash R/B 0 Line State  
0: NAND Flash in BUSY State 
1: NAND Flash in READY State </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NAND_Flash_in_BUSY</name>
                  <description>NAND Flash in BUSY State</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NAND_Flash_in_READY</name>
                  <description>NAND Flash in READY State</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_STA</name>
              <description>0: NDFC FSM in IDLE State  
1: NDFC FSM in BUSY State  When NDFC_STA  is 0, NDFC can accept new command and process command. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NDFC_FSM_in_IDLE</name>
                  <description>NDFC FSM in IDLE State</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>NDFC_FSM_in_BUSY</name>
                  <description>NDFC FSM in BUSY State  When NDFC_STA  is 0, NDFC can accept new command and process command.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_CMD_FIFO_STATUS</name>
              <description>0: Command FIFO not full and can receive new command 
1: Full and waiting NDFC to process commands in FIFO  Since there is only one 32-bit FIFO for command. When NDFC latches one command, command FIFO is free and can accept another new command. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Command</name>
                  <description>Command FIFO not full and can receive new command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full_and</name>
                  <description>Full and waiting NDFC to process commands in FIFO  Since there is only one 32-bit FIFO for command. When NDFC latches one command, command FIFO is free and can accept another new command.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DMA_INT_FLAG</name>
              <description>When it is 1, it means that a pending DMA is completed. It will be cleared after writing 1 to this bit or it will be automatically clear before FSM processing an new command. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>NDFC_CMD_INT_FLAG</name>
              <description>When it is 1, it means that NDFC has finished one Normal Command Mode or one Batch Command Work Mode. It will be cleared after writing 1 to this bit or it will be automatically clear before FSM processing an new command. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>NDFC_RB_B2R</name>
              <description>When it is 1, it means that NDFC_R/B# signal is transferred from BUSY state to READY state. It will be cleared after writing 1 to this bit.  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_TIMING_CFG</name>
          <description>NDFC Timing Configure Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x95</resetValue>
          <resetMask>0xFFFFF</resetMask>
          <fields>
            <field>
              <name>T_WC</name>
              <description>Write Cycle Time  
00: 1*2T 
01: 2*2T 
10: 3*2T 
11: 4*2T </description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_times_2T</name>
                  <description>1*2T</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_times_2T</name>
                  <description>2*2T</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3_times_2T</name>
                  <description>3*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_times_2T</name>
                  <description>4*2T</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_CCS</name>
              <description>Change Column Setup Time  
00: 16*2T 
01: 24*2T 
10: 32*2T 
11: 64*2T </description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16_times_2T</name>
                  <description>16*2T</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_times_2T</name>
                  <description>24*2T</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_times_2T</name>
                  <description>32*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64_times_2T</name>
                  <description>64*2T</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_CLHZ</name>
              <description>CLE High to Output Hi-z  
00: 2*2T 
01: 8*2T 
10: 16*2T 
11: 31*2T </description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2_times_2T</name>
                  <description>2*2T</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_times_2T</name>
                  <description>8*2T</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_times_2T</name>
                  <description>16*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_31_times_2T</name>
                  <description>31*2T</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_CS</name>
              <description>CE Setup Time  
00: 2*2T 
01: 8*2T 
10: 16*2T 
11: 31*2T </description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2_times_2T</name>
                  <description>2*2T</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_times_2T</name>
                  <description>8*2T</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_times_2T</name>
                  <description>16*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_31_times_2T</name>
                  <description>31*2T</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>R/W</name>
              <description>0x0 T_CDQSS DQS Setup Time for Data Input Start  
0: 8*2T 
1: 24*2T </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8_times_2T</name>
                  <description>8*2T</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_times_2T</name>
                  <description>24*2T</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_CAD</name>
              <description>Command, Address, Data Delay  
000: 4*2T 
001: 8*2T 
010: 12*2T 
011: 16*2T 
100: 24*2T 
101: 32*2T 110/111: 64*2T </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_4_times_2T</name>
                  <description>4*2T</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_times_2T</name>
                  <description>8*2T</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12_times_2T</name>
                  <description>12*2T</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_times_2T</name>
                  <description>16*2T</description>
                  <value>0b011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_times_2T</name>
                  <description>24*2T</description>
                  <value>0b100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_times_2T</name>
                  <description>32*2T 110/111: 64*2T</description>
                  <value>0b101</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_RHW</name>
              <description>RE# High to WE# Low Cycle Number  
00: 4*2T 
01: 8*2T 
10: 12*2T 
11: 20*2T </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_4_times_2T</name>
                  <description>4*2T</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_times_2T</name>
                  <description>8*2T</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12_times_2T</name>
                  <description>12*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20_times_2T</name>
                  <description>20*2T</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_WHR</name>
              <description>WE# High to RE# Low Cycle Number  
00: 8*2T 
01: 16*2T 
10: 24*2T 
11: 32*2T </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_8_times_2T</name>
                  <description>8*2T</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_times_2T</name>
                  <description>16*2T</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_times_2T</name>
                  <description>24*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32_times_2T</name>
                  <description>32*2T</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_ADL</name>
              <description>Address to Data Loading Cycle Number  
00: 0*2T 
01: 8*2T 
10: 16*2T 
11: 24*2T </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0_times_2T</name>
                  <description>0*2T</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_times_2T</name>
                  <description>8*2T</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16_times_2T</name>
                  <description>16*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_times_2T</name>
                  <description>24*2T</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>T_WB</name>
              <description>WE# High to Busy Cycle Number  00:14*2T 01:22*2T 
10: 30*2T 11:38*2T </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_30_times_2T</name>
                  <description>30*2T 11:38*2T</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>NDFC_TIMING_CTL</name>
          <description>NDFC Timing Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF3F</resetMask>
          <fields>
            <field>
              <name>NDFC_READ_PIPE</name>
              <description>In SDR mode: 
0000: Normal 
0001: EDO 
0010: E-EDO Other : Reserved  In DDR mode: 0001~1111 is valid.(These bits configure the number of clock when data is alid afte RE# s falli g edge </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>EDO</name>
                  <description>EDO</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>E_minus_EDO_Other</name>
                  <description>E-EDO Other : Reserved  In DDR mode: 0001~1111 is valid.(These bits configure the number of clock when data is alid afte RE# s falli g edge</description>
                  <value>0b0010</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>NDFC_DC_CTL</name>
              <description>NDFC Delay Chain Control.  These bits are only valid in DDR data interface, and configure the relative phase et ee DQS a d DQ[ ... ]  </description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>16</dim>
          <dimIncrement>4</dimIncrement>
          <name>NDFC_USER_DATAN[%s]</name>
          <description>NDFC_USER_DATAN[%s]</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0xFFFFFFFF</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>USER_DATA</name>
              <description>User data for ECC Data Block[N] (N from 0 to 15) Note: 1 ECC Data Block = 512 or 1024 bytes</description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>OWA</name>
      <description>OWA</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C21000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>OWA_CTL</name>
          <description>OWA_CTL</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>GEN</name>
              <description>Global Enable A disable on this bit overrides any other block or channel enables and flushes all FIFOs. 
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RST</name>
              <description>Reset  
0: Normal 
1: Reset Self clear to 0. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reset</name>
                  <description>Reset Self clear to 0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_FCTL</name>
          <description>OWA FIFO Control Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x1078</resetValue>
          <resetMask>0x80021FFC</resetMask>
          <fields>
            <field>
              <name>HUB_EN</name>
              <description>Audio Hub Enable  0 : Disable 
1: Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FTX</name>
              <description>W iti g  to flush TX FIFO, self lea to  </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXTL</name>
              <description>TX FIFO Empty Trigger Level Interrupt and DMA request trigger level for TX FIFO normal condition Trigger Level = TXTL </description>
              <bitRange>[12:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXIM</name>
              <description>TX FIFO Input Mode(Mode0, 1)  
0: Valid data at the MSB of OWA_TXFIFO register 
1: Valid data at the LSB of OWA_TXFIFO register  Example for 20-bit transmitted audio sample: Mode 0: TXFIFO[23:0] = {APB_WDATA [ : ], h }  Mode 1: TXFIFO[23:0] = {APB_WDATA [ : ], h } </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Valid_data_at_the_MSB</name>
                  <description>Valid data at the MSB of OWA_TXFIFO register</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Valid_data_at_the_LSB</name>
                  <description>Valid data at the LSB of OWA_TXFIFO register  Example for 20-bit transmitted audio sample: Mode 0: TXFIFO[23:0] = {APB_WDATA [ : ], h }  Mode 1: TXFIFO[23:0] = {APB_WDATA [ : ], h }</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_FSTA</name>
          <description>OWA FIFO Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x6000</resetValue>
          <resetMask>0x7F00</resetMask>
          <fields>
            <field>
              <name>TXE</name>
              <description>TX FIFO Empty (indicate FIFO is not full)  
0: No room for new sample in TX FIFO 
1: More than one room for new sample in TX FIFO ( &gt;=1 word ) </description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_room</name>
                  <description>No room for new sample in TX FIFO</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>More</name>
                  <description>More than one room for new sample in TX FIFO ( &gt;=1 word )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXE_CNT</name>
              <description>TX FIFO Empty Space Word Counter </description>
              <bitRange>[13:8]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_INT</name>
          <description>OWA Interrupt Control Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF0</resetMask>
          <fields>
            <field>
              <name>TX_DRQ</name>
              <description>TX FIFO Empty DRQ Enable  
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXUI_EN</name>
              <description>TX FIFO Underrun Interrupt Enable  
0: Disable 
1: Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXOI_EN</name>
              <description>TX FIFO Overrun Interrupt Enable  
0: Disable 
1: Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXEI_EN</name>
              <description>TX FIFO Empty Interrupt Enable  
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_ISTA</name>
          <description>OWA Interrupt Status Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x10</resetValue>
          <resetMask>0x70</resetMask>
          <fields>
            <field>
              <name>TXU_INT</name>
              <description>TX FIFO Underrun Pending Interrupt  
0: No Pending IRQ 
1: FIFO Underrun Pending Interrupt  W iti g  to lea this i te upt </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Underrun Pending Interrupt  W iti g  to lea this i te upt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXO_INT</name>
              <description>TX FIFO Overrun Pending Interrupt  
0: No Pending IRQ 
1: FIFO Overrun Pending Interrupt  W iti g  to lea this i te upt </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Overrun Pending Interrupt  W iti g  to lea this i te upt</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXE_INT</name>
              <description>TX FIFO Empty Pending Interrupt  
0: No Pending IRQ 
1: FIFO Empty Pending Interrupt  W iti g  to lea  this i te upt o auto ati all  lea  if t he interrupt condition fails. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Pending</name>
                  <description>No Pending IRQ</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO Empty Pending Interrupt  W iti g  to lea  this i te upt o auto ati all  lea  if t he interrupt condition fails.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_TXFIFO</name>
          <description>OWA_TXFIFO</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_DATA</name>
              <description>Transmitting A, B channel data should be written this register one by one. The A channel data is first and then the B channel data. </description>
              <bitRange>[31:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_TX_CFIG</name>
          <description>OWA TX Configuration Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0xF0</resetValue>
          <resetMask>0x800301FF</resetMask>
          <fields>
            <field>
              <name>TX_SINGLE_MODE</name>
              <description>Tx Single Channel Mode  
0: Disable 
1: Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ASS</name>
              <description>Audio Sample Select with TX FIFO Underrun When  
0: Sending 0 
1: Sending the last audio  This bit is only valid in PCM mode </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Sending_0</name>
                  <description>Sending 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Sending_the_last</name>
                  <description>Sending the last audio  This bit is only valid in PCM mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_AUDIO</name>
              <description>TX Data Type  
0: Linear PCM (Valid bit of both sub-frame set to 0 ) 
1: Non-audio(Valid bit of both sub-frame set to 1) </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Linear</name>
                  <description>Linear PCM (Valid bit of both sub-frame set to 0 )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>non_audio_openingparen_Valid_bit</name>
                  <description>Non-audio(Valid bit of both sub-frame set to 1)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_RATIO</name>
              <description>TX Clock Divide Ratio Clock divide ratio = TX TATIO +1 </description>
              <bitRange>[8:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_SF</name>
              <description>TX Sample Format  
00: 16 bits 
01: 20 bits 
10: 24 bits 
11: Reserved </description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_16_bits</name>
                  <description>16 bits</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_20_bits</name>
                  <description>20 bits</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24_bits</name>
                  <description>24 bits</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_CHM</name>
              <description>CHSTMODE  
0: Channel status A&amp;B set to 0 
1: Channel status A&amp;B generated form TX_CHSTA </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Channel_status_A_amp_B_set</name>
                  <description>Channel status A&amp;B set to 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Channel_status_A_amp_B_generated</name>
                  <description>Channel status A&amp;B generated form TX_CHSTA</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TXEN</name>
              <description>0: Disabled 
1: Enabled </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disabled</name>
                  <description>Disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enabled</name>
                  <description>Enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_TX_CHSTA0</name>
          <description>OWA TX Channel Status Register0</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFFFFF</resetMask>
          <fields>
            <field>
              <name>CA</name>
              <description>Clock Accuracy  
00: Level 2 
01: Level 1 
10: Level 3 
11: Not matched </description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Level_2</name>
                  <description>Level 2</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_1</name>
                  <description>Level 1</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Level_3</name>
                  <description>Level 3</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Not_matched</name>
                  <description>Not matched</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FREQ</name>
              <description>Sampling Frequency  
0000: 44.1kHz           
0001: Not indicated        
0010: 48kHz             
0011: 32kHz             
0100: 22.05kHz           
0101: Reserved           
0110: 24kHz              
0111: Reserved            
1000: Reserved 
1001: 768kHz 
1010: 96kHz 
1011: Reserved 1100:176.4kHz 
1101: Reserved 
1110: 192kHz 
1111: Reserved </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_44_point_1kHz</name>
                  <description>44.1kHz</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Not_indicated</name>
                  <description>Not indicated</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_48kHz</name>
                  <description>48kHz</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32kHz</name>
                  <description>32kHz</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_22_point_05kHz</name>
                  <description>22.05kHz</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24kHz</name>
                  <description>24kHz</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_768kHz</name>
                  <description>768kHz</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_96kHz</name>
                  <description>96kHz</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reserved</name>
                  <description>Reserved 1100:176.4kHz</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_192kHz</name>
                  <description>192kHz</description>
                  <value>0b1110</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CN</name>
              <description>Channel Number </description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SN</name>
              <description>Source Number </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC</name>
              <description>Category Code Indicates the kind of equipment that generates the digital audio interface signal. </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MODE</name>
              <description>Mode  
00: Default Mode 01~11: Reserved </description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Default</name>
                  <description>Default Mode 01~11: Reserved</description>
                  <value>0b00</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EMP</name>
              <description>Emphasis Additional format information  Fo  it  = , Li ea PCM audio ode: 
000: 2 audio channels without pre-emphasis 0 :  audio ha els ith  &#956;s /  &#956;s p e -emphasis 
010: Reserved (for 2 audio channels with pre-emphasis) 
011: Reserved (for 2 audio channels with pre-emphasis) 100~111: Reserved  Fo  it  = , othe tha Li ea PCM appli atio s: 
000: Default state 001~111: Reserved </description>
              <bitRange>[5:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CP</name>
              <description>Copyright  
0: Copyright is asserted 
1: No copyright is asserted </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Copyright</name>
                  <description>Copyright is asserted</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>No_copyright</name>
                  <description>No copyright is asserted</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TYPE</name>
              <description>Audio Data Type  
0: Linear PCM Samples 
1: For none-linear PCM audio such as AC3, DTS, MPEG audio </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Linear</name>
                  <description>Linear PCM Samples</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>For</name>
                  <description>For none-linear PCM audio such as AC3, DTS, MPEG audio</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PRO</name>
              <description>Application Type  
0: Consumer Application 
1: Professional Application  This it ust e fi ed to  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Consumer</name>
                  <description>Consumer Application</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Professional</name>
                  <description>Professional Application  This it ust e fi ed to</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_TX_CHSTA1</name>
          <description>OWA TX Channel Status Register1</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF</resetMask>
          <fields>
            <field>
              <name>CGMS</name>
              <description>CGMS_A  
00: Copying is permitted without restriction 
01: One generation of copies may be made 
10: Condition not be used 
11: No copying is permitted </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Copying</name>
                  <description>Copying is permitted without restriction</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>One</name>
                  <description>One generation of copies may be made</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Condition</name>
                  <description>Condition not be used</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>No_copying</name>
                  <description>No copying is permitted</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ORIG_FREQ_ORIGINAL_SAMPLING_FREQUENCY</name>
              <description>ORIG_FREQ Original Sampling Frequency  
0000: Not indicated 
0001: 192kHz 
0010: 12kHz 
0011: 176.4kHz 
0100: Reserved 
0101: 96kHz 
0110: 8kHz 
0111: 88.2kHz 
1000: 16kHz 
1001: 24kHz 
1010: 11.025kHz 
1011: 22.05kHz 
1100: 32kHz 
1101: 48kHz 
1110: Reserved 
1111: 44.1kHz </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_indicated</name>
                  <description>Not indicated</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_192kHz</name>
                  <description>192kHz</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_12kHz</name>
                  <description>12kHz</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_176_point_4kHz</name>
                  <description>176.4kHz</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_96kHz</name>
                  <description>96kHz</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8kHz</name>
                  <description>8kHz</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_88_point_2kHz</name>
                  <description>88.2kHz</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16kHz</name>
                  <description>16kHz</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_24kHz</name>
                  <description>24kHz</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_11_point_025kHz</name>
                  <description>11.025kHz</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_22_point_05kHz</name>
                  <description>22.05kHz</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_32kHz</name>
                  <description>32kHz</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_48kHz</name>
                  <description>48kHz</description>
                  <value>0b1101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_44_point_1kHz</name>
                  <description>44.1kHz</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WL_SAMPLE_WORD_LENGTH_FO</name>
              <description>WL Sample Word Length  Fo  it  = : 
000: Not indicated 
001: 16 bits 
010: 18 bits 
100: 19 bits 
101: 20 bits 
110: 17 bits 
111: Reserved  Fo  it  = : 
000: Not indicated 
001: 20 bits 
010: 22 bits 
100: 23 bits 
101: 24 bits 
110: 21 bits 
111: Reserved </description>
              <bitRange>[3:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MWL_MAX_WORD_LENGTH</name>
              <description>MWL Max Word Length  
0: Maximum audio sample word length is 20 bits 
1: Maximum audio sample word length is 24 bits </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>20</name>
                  <description>Maximum audio sample word length is 20 bits</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>24</name>
                  <description>Maximum audio sample word length is 24 bits</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>OWA_TX_CNT</name>
          <description>OWA TX Counter Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX_CNT</name>
              <description>TX Sample Counter The audio sample number of sending into TXFIFO.  When one sample is put into TXFIFO by DMA or by host IO, the TX sample counter register increases by one. The TX sample counter register can be set to any initial value at any time. After updated by the initial value, the counter register should count on base of this initial value. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PIO</name>
      <description>PIO</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C20800</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>PA_CFG0_REG</name>
          <description>PA_CFG0_REG</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PA7_SELECT</name>
              <description>000:Input                001:Output 010:SIM0_CLK            011:Reserved 100:Reserved             101:Reserved 110:PA_EINT7             111:IO Disable </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA6_SELECT</name>
              <description>000:Input                001:Output 010:SIM0_PWREN         011:PCM0_MCLK 100:Reserved             101:Reserved 110:PA_EINT6             111:IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA5_SELECT</name>
              <description>000:Input               001:Output 010:UART0_RX           011:PWM0 100:Reserved            101:Reserved 110:PA_EINT5           111:IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA4_SELECT</name>
              <description>000:Input              001:Output 010:UART0_TX          011:Reserved 100:Reserved           101:Reserved 110:PA_EINT4          111:IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA3_SELECT</name>
              <description>000:Input               001:Output 010:UART2_CTS          011:JTAG_DI 100:Reserved            101:Reserved 110:PA_EINT3           111:IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA2_SELECT</name>
              <description>000:Input               001:Output 010:UART2_RTS          011:JTAG_DO 100:Reserved            101:Reserved 110:PA_EINT2           111:IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA1_SELECT</name>
              <description>000:Input              001:Output 010:UART2_RX          011:JTAG_CK 100:Reserved           101:Reserved 110:PA_EINT1           111:IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA0_SELECT</name>
              <description>000:Input              001:Output 010:UART2_TX          011:JTAG_MS 100:Reserved           101:Reserved 110:PA_EINT0          111:IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PA_CFG1_REG</name>
          <description>PA_CFG1_REG</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PA15_SELECT</name>
              <description>000:Input               001:Output 010:SPI1_MOSI          011:UART3_RTS 100:Reserved           101:Reserved 110:PA_EINT15          111:IO Disable </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA14_SELECT</name>
              <description>000:Input              001:Output 010:SPI1_CLK           011:UART3_RX 100:Reserved           101:Reserved 110:PA_EINT14          111:IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA13_SELECT</name>
              <description>000:Input              001:Output 010:SPI1_CS            011:UART3_TX 100:Reserved           101:Reserved 110:PA_EINT13          111:IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA12_SELECT</name>
              <description>000:Input               001:Output 010:TWI0_SDA           011:DI_RX 100:Reserved            101:Reserved 110:PA_EINT12          111:IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA11_SELECT</name>
              <description>000:Input               001:Output 010:TWI0_SCK           011:DI_TX 100:Reserved            101:Reserved 110:PA_EINT11          111:IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA10_SELECT</name>
              <description>000:Input                001:Output 010:SIM0_DET            011:Reserved 100:Reserved             101:Reserved 110:PA_EINT10           111:IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA9_SELECT</name>
              <description>000:Input               001:Output 010:SIM0_RST           011:Reserved 100:Reserved            101:Reserved 110:PA_EINT9           111:IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA8_SELECT</name>
              <description>000:Input               001:Output 010:SIM0_DATA          011:Reserved 100:Reserved            101:Reserved 110:PA_EINT8           111:IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PA_CFG2_REG</name>
          <description>PA_CFG2_REG</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x777777</resetValue>
          <resetMask>0x777777</resetMask>
          <fields>
            <field>
              <name>PA21_SELECT</name>
              <description>000:Input                001:Output 010:PCM0_DIN           011:SIM0_VPPPP 100:Reserved            101:Reserved 110:PA_EINT21           111:IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA20_SELECT</name>
              <description>000:Input               001:Output 010:PCM0_DOUT         011:SIM0_VPPEN 100:Reserved            101:Reserved 110:PA_EINT20           111:IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA19_SELECT</name>
              <description>000:Input                001:Output 010:PCM0_CLK            011:TWI1_SDA 100:Reserved             101:Reserved 110:PA_EINT19           111:IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA18_SELECT</name>
              <description>000:Input                001:Output 010:PCM0_SYNC          011:TWI1_SCK 100:Reserved             101:Reserved 110:PA_EINT18           111:IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA17_SELECT</name>
              <description>000:Input                001:Output 010:OWA_OUT           011:Reserved 100:Reserved            101:Reserved 110:PA_EINT17           111:IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA16_SELECT</name>
              <description>000:Input                001:Output 010:SPI1_MISO           011:UART3_CTS 100:Reserved            101:Reserved 110:PA_EINT16           111:IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PA_CFG3_REG</name>
          <description>PA_CFG3_REG</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PA_DATA_REG</name>
          <description>PA_DATA_REG</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFFF</resetMask>
          <fields>
            <field>
              <name>PA_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read. </description>
              <bitRange>[21:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PA_DRV0_REG</name>
          <description>PA_DRV0_REG</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x55555555</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PA_DRV_15</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_14</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_13</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_12</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_11</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_10</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_9</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_8</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_7</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_6</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_5</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_4</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_3</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_2</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_1</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_0</name>
              <description>PA[n] Multi-Driving Select (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PA_DRV1__REG</name>
          <description>PA_DRV1__REG</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x555</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>PA_DRV_5</name>
              <description>PA[n] Multi-Driving Select (n = 16~21)00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_4</name>
              <description>PA[n] Multi-Driving Select (n = 16~21)00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_3</name>
              <description>PA[n] Multi-Driving Select (n = 16~21)00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_2</name>
              <description>PA[n] Multi-Driving Select (n = 16~21)00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_1</name>
              <description>PA[n] Multi-Driving Select (n = 16~21)00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_DRV_0</name>
              <description>PA[n] Multi-Driving Select (n = 16~21)00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PA_EINT_CFG0_REG</name>
          <description>PA_EINT_CFG0_REG</description>
          <addressOffset>0x200</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EINT_CFG_7</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_6</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_5</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_4</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_3</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_2</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_1</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_0</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PA_EINT_CFG1_REG</name>
          <description>PA_EINT_CFG1_REG</description>
          <addressOffset>0x204</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EINT_CFG_7</name>
              <description>External INTn Mode (n = 8~15) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_6</name>
              <description>External INTn Mode (n = 8~15) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_5</name>
              <description>External INTn Mode (n = 8~15) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_4</name>
              <description>External INTn Mode (n = 8~15) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_3</name>
              <description>External INTn Mode (n = 8~15) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_2</name>
              <description>External INTn Mode (n = 8~15) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_1</name>
              <description>External INTn Mode (n = 8~15) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_0</name>
              <description>External INTn Mode (n = 8~15) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PA_EINT_CFG2_REG</name>
          <description>PA_EINT_CFG2_REG</description>
          <addressOffset>0x208</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>EINT_CFG_5</name>
              <description>External INTn Mode (n = 16~21) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_4</name>
              <description>External INTn Mode (n = 16~21) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_3</name>
              <description>External INTn Mode (n = 16~21) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_2</name>
              <description>External INTn Mode (n = 16~21) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_1</name>
              <description>External INTn Mode (n = 16~21) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_0</name>
              <description>External INTn Mode (n = 16~21) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PA_EINT_CFG3_REG</name>
          <description>PA_EINT_CFG3_REG</description>
          <addressOffset>0x20C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PA_EINT_CTL_REG</name>
          <description>PA_EINT_CTL_REG</description>
          <addressOffset>0x210</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFFF</resetMask>
          <fields>
            <field>
              <name>EINT_CTL_21</name>
              <description>External INTn Enable (n = 0~21) 0: Disable 1: Enable</description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_20</name>
              <description>External INTn Enable (n = 0~21) 0: Disable 1: Enable</description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_19</name>
              <description>External INTn Enable (n = 0~21) 0: Disable 1: Enable</description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_18</name>
              <description>External INTn Enable (n = 0~21) 0: Disable 1: Enable</description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_17</name>
              <description>External INTn Enable (n = 0~21) 0: Disable 1: Enable</description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_16</name>
              <description>External INTn Enable (n = 0~21) 0: Disable 1: Enable</description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_15</name>
              <description>External INTn Enable (n = 0~21) 0: Disable 1: Enable</description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_14</name>
              <description>External INTn Enable (n = 0~21) 0: Disable 1: Enable</description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_13</name>
              <description>External INTn Enable (n = 0~21) 0: Disable 1: Enable</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_12</name>
              <description>External INTn Enable (n = 0~21) 0: Disable 1: Enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_11</name>
              <description>External INTn Enable (n = 0~21) 0: Disable 1: Enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_10</name>
              <description>External INTn Enable (n = 0~21) 0: Disable 1: Enable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_9</name>
              <description>External INTn Enable (n = 0~21) 0: Disable 1: Enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_8</name>
              <description>External INTn Enable (n = 0~21) 0: Disable 1: Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_7</name>
              <description>External INTn Enable (n = 0~21) 0: Disable 1: Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_6</name>
              <description>External INTn Enable (n = 0~21) 0: Disable 1: Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_5</name>
              <description>External INTn Enable (n = 0~21) 0: Disable 1: Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_4</name>
              <description>External INTn Enable (n = 0~21) 0: Disable 1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_3</name>
              <description>External INTn Enable (n = 0~21) 0: Disable 1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_2</name>
              <description>External INTn Enable (n = 0~21) 0: Disable 1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_1</name>
              <description>External INTn Enable (n = 0~21) 0: Disable 1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_0</name>
              <description>External INTn Enable (n = 0~21) 0: Disable 1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PA_EINT_DEB_REG</name>
          <description>PA_EINT_DEB_REG</description>
          <addressOffset>0x218</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x71</resetMask>
          <fields>
            <field>
              <name>DEB_CLK_PRE_SCALE</name>
              <description>Debounce Clock Pre-scale n The selected clock source is prescaled by 2^n.  </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CLK_SELECT</name>
              <description>PIO Interrupt Clock Select  
0: LOSC 32KHz 
1: HOSC 24MHz </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC 32KHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HOSC</name>
                  <description>HOSC 24MHz</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PA_EINT_STATUS_REG</name>
          <description>PA_EINT_STATUS_REG</description>
          <addressOffset>0x214</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFFF</resetMask>
          <fields>
            <field>
              <name>R/W1CEINT_STATUS_21</name>
              <description>External INTn Pending Bit (n = 0~21) 0: No IRQ pending 1: IRQ pending W ite to clear it.</description>
              <bitRange>[21:21]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_20</name>
              <description>External INTn Pending Bit (n = 0~21) 0: No IRQ pending 1: IRQ pending W ite to clear it.</description>
              <bitRange>[20:20]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_19</name>
              <description>External INTn Pending Bit (n = 0~21) 0: No IRQ pending 1: IRQ pending W ite to clear it.</description>
              <bitRange>[19:19]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_18</name>
              <description>External INTn Pending Bit (n = 0~21) 0: No IRQ pending 1: IRQ pending W ite to clear it.</description>
              <bitRange>[18:18]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_17</name>
              <description>External INTn Pending Bit (n = 0~21) 0: No IRQ pending 1: IRQ pending W ite to clear it.</description>
              <bitRange>[17:17]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_16</name>
              <description>External INTn Pending Bit (n = 0~21) 0: No IRQ pending 1: IRQ pending W ite to clear it.</description>
              <bitRange>[16:16]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_15</name>
              <description>External INTn Pending Bit (n = 0~21) 0: No IRQ pending 1: IRQ pending W ite to clear it.</description>
              <bitRange>[15:15]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_14</name>
              <description>External INTn Pending Bit (n = 0~21) 0: No IRQ pending 1: IRQ pending W ite to clear it.</description>
              <bitRange>[14:14]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_13</name>
              <description>External INTn Pending Bit (n = 0~21) 0: No IRQ pending 1: IRQ pending W ite to clear it.</description>
              <bitRange>[13:13]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_12</name>
              <description>External INTn Pending Bit (n = 0~21) 0: No IRQ pending 1: IRQ pending W ite to clear it.</description>
              <bitRange>[12:12]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_11</name>
              <description>External INTn Pending Bit (n = 0~21) 0: No IRQ pending 1: IRQ pending W ite to clear it.</description>
              <bitRange>[11:11]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_10</name>
              <description>External INTn Pending Bit (n = 0~21) 0: No IRQ pending 1: IRQ pending W ite to clear it.</description>
              <bitRange>[10:10]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_9</name>
              <description>External INTn Pending Bit (n = 0~21) 0: No IRQ pending 1: IRQ pending W ite to clear it.</description>
              <bitRange>[9:9]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_8</name>
              <description>External INTn Pending Bit (n = 0~21) 0: No IRQ pending 1: IRQ pending W ite to clear it.</description>
              <bitRange>[8:8]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_7</name>
              <description>External INTn Pending Bit (n = 0~21) 0: No IRQ pending 1: IRQ pending W ite to clear it.</description>
              <bitRange>[7:7]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_6</name>
              <description>External INTn Pending Bit (n = 0~21) 0: No IRQ pending 1: IRQ pending W ite to clear it.</description>
              <bitRange>[6:6]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_5</name>
              <description>External INTn Pending Bit (n = 0~21) 0: No IRQ pending 1: IRQ pending W ite to clear it.</description>
              <bitRange>[5:5]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_4</name>
              <description>External INTn Pending Bit (n = 0~21) 0: No IRQ pending 1: IRQ pending W ite to clear it.</description>
              <bitRange>[4:4]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_3</name>
              <description>External INTn Pending Bit (n = 0~21) 0: No IRQ pending 1: IRQ pending W ite to clear it.</description>
              <bitRange>[3:3]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_2</name>
              <description>External INTn Pending Bit (n = 0~21) 0: No IRQ pending 1: IRQ pending W ite to clear it.</description>
              <bitRange>[2:2]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_1</name>
              <description>External INTn Pending Bit (n = 0~21) 0: No IRQ pending 1: IRQ pending W ite to clear it.</description>
              <bitRange>[1:1]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_0</name>
              <description>External INTn Pending Bit (n = 0~21) 0: No IRQ pending 1: IRQ pending W ite to clear it.</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>PA_PULL0_REG</name>
          <description>PA_PULL0_REG</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PA_PULL_15</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_14</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_13</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_12</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_11</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_10</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_9</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_8</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_7</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_6</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_5</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_4</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_3</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_2</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_1</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_0</name>
              <description>PA[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PA_PULL1_REG</name>
          <description>PA_PULL1_REG</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>PA_PULL_5</name>
              <description>PA[n] Pull-up/down Select (n = 16~21) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_4</name>
              <description>PA[n] Pull-up/down Select (n = 16~21) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_3</name>
              <description>PA[n] Pull-up/down Select (n = 16~21) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_2</name>
              <description>PA[n] Pull-up/down Select (n = 16~21) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_1</name>
              <description>PA[n] Pull-up/down Select (n = 16~21) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PA_PULL_0</name>
              <description>PA[n] Pull-up/down Select (n = 16~21) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_CFG0_REG</name>
          <description>PC_CFG0_REG</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PC7_SELECT</name>
              <description>000:Input               001:Output 010:NAND_RB1          011:Reserved 100:Reserved            101:Reserved 110:Reserved            111:IO Disable</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC6_SELECT</name>
              <description>000:Input               001:Output 010:NAND_RB0          011:SDC2_CMD 100:Reserved            101:Reserved 110:Reserved            111:IO Disable</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC5_SELECT</name>
              <description>000:Input               001:Output 010:NAND_RE           011:SDC2_CLK 100:Reserved            101:Reserved 110:Reserved            111:IO Disable</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC4_SELECT</name>
              <description>000:Input                001:Output 010:NAND_CE0           011:Reserved 100:SPI0_MISO           101:Reserved 110:Reserved            111:IO Disable</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC3_SELECT</name>
              <description>000:Input               001:Output 010:NAND_CE1          011:SPI0_CS 100:Reserved           101:Reserved 110:Reserved           111:IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC2_SELECT</name>
              <description>000:Input               001:Output 010:NAND_CLE          011:SPI0_CLK 100:Reserved           101:Reserved 110:Reserved           111:IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC1_SELECT</name>
              <description>000:Input                001:Output 010:NAND_ALE           011:SPI0_MISO 100:SDC2_DS            101:Reserved 110:Reserved            111:IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC0_SELECT</name>
              <description>000:Input               001:Output 010:NAND_WE          011:SPI0_MOSI 100:Reserved           101:Reserved 110:Reserved           111:IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_CFG1_REG</name>
          <description>PC_CFG1_REG</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PC15_SELECT</name>
              <description>000:Input             001:Output 010:NAND_DQ7        011:SDC2_D7 100:Reserved          101:Reserved 110:Reserved          111:IO Disable</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC14_SELECT</name>
              <description>000:Input             001:Output 010:NAND_DQ6        011:SDC2_D6 100:Reserved          101:Reserved 110:Reserved          111:IO Disable</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC13_SELECT</name>
              <description>000:Input              001:Output 010:NAND_DQ5         011:SDC2_D5 100:Reserved           101:Reserved 110:Reserved           111:IO Disable</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC12_SELECT</name>
              <description>000:Input             001:Output 010:NAND_DQ4        011:SDC2_D4 100:Reserved          101:Reserved 110:Reserved          111:IO Disable</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC11_SELECT</name>
              <description>000:Input             001:Output 010:NAND_DQ3        011:SDC2_D3 100:Reserved          101:Reserved 110:Reserved          111:IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC10_SELECT</name>
              <description>000:Input             001:Output 010:NAND_DQ2        011:SDC2_D2 100:Reserved          101:Reserved 110:Reserved          111:IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC9_SELECT</name>
              <description>000:Input             001:Output 010:NAND_DQ1        011:SDC2_D1 100:Reserved          101:Reserved 110:Reserved          111:IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC8_SELECT</name>
              <description>000:Input             001:Output 010:NAND_DQ0        011:SDC2_D0 100:Reserved          101:Reserved 110:Reserved          111:IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_CFG2_REG</name>
          <description>PC_CFG2_REG</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x777</resetValue>
          <resetMask>0x777</resetMask>
          <fields>
            <field>
              <name>PC16_SELECT</name>
              <description>000:Input             001:Output 010:NAND_DQS        011:SDC2_RST 100:Reserved          101:Reserved 110:Reserved          111:IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_CFG3_REG</name>
          <description>PC_CFG3_REG</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PC_DATA_REG</name>
          <description>PC_DATA_REG</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7FFFF</resetMask>
          <fields>
            <field>
              <name>PC_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read. </description>
              <bitRange>[18:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_DRV0_REG</name>
          <description>PC_DRV0_REG</description>
          <addressOffset>0x5C</addressOffset>
          <resetValue>0x55555555</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PC_DRV_15</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_14</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_13</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_12</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_11</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_10</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_9</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_8</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_7</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_6</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_5</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_4</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_3</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_2</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_1</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_0</name>
              <description>PC[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_DRV1_REG</name>
          <description>PC_DRV1_REG</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x15</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>PC_DRV_2</name>
              <description>PC[n] Multi-Driving Select (n = 16~18) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_1</name>
              <description>PC[n] Multi-Driving Select (n = 16~18) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PC_DRV_0</name>
              <description>PC[n] Multi-Driving Select (n = 16~18) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PC_PULL0_REG</name>
          <description>PC_PULL0_REG</description>
          <addressOffset>0x64</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PC_PULL1_REG</name>
          <description>PC_PULL1_REG</description>
          <addressOffset>0x68</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PD_CFG0_REG</name>
          <description>PD_CFG0_REG</description>
          <addressOffset>0x6C</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PD7_SELECT</name>
              <description>000:Input                             001:Output 010:RGMII_TXD3/MII_TXD3/RMII_NULL     011:Reserved 100:TS2_D3                           101:TS3_CLK 110:Reserved                          111:IO Disable</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD6_SELECT</name>
              <description>000:Input                              001:Output 010:RGMII_NULL/MII_RXERR/RMII_RXER    011:Reserved 100:TS2_D2                            101:Reserved 110:Reserved                           111:IO Disable</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD5_SELECT</name>
              <description>000:Input                              001:Output 010:RGMII_RXCTL/MII_RXDV/RMII_CRS_DV  011:Reserved 100:TS2_D1                            101:Reserved 110:Reserved                           111:IO Disable</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD4_SELECT</name>
              <description>000:Input                              001:Output 010:RGMII_RXCK/MII_RXCK/RMII_NULL    011:Reserved 100:TS2_D0                           101:Reserved 110:Reserved                          111:IO Disable</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD3_SELECT</name>
              <description>000:Input                             001:Output 010:RGMII_RXD0/MII_RXD0/RMII_RXD0    011:Reserved 100:TS2_DVLD                         101:Reserved 110:Reserved                          111:IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD2_SELECT</name>
              <description>000:Input                             001:Output 010:RGMII_RXD1/MII_RXD1/RMII_RXD1     011:Reserved 100:TS2_SYNC                         101:Reserved 110:Reserved                          111:IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD1_SELECT</name>
              <description>000:Input                             001:Output 010:RGMII_RXD2/MII_RXD2/RMII_NULL     011:DI_RX 100:TS2_ERR                           101:Reserved 110:Reserved                          111:IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD0_SELECT</name>
              <description>000:Input                              001:Output 010:RGMII_RXD3/MII_RXD3/RMII_NULL      011:DI_TX 100:TS2_CLK                            101:Reserved 110:Reserved                           111:IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_CFG1_REG</name>
          <description>PD_CFG1_REG</description>
          <addressOffset>0x70</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PD15_SELECT</name>
              <description>000:Input                             001:Output 010:RGMII_CLKIN/MII_COL/RMII_NULL     011:Reserved 100:SIM1_RST                         101:Reserved 110:Reserved                          111:IO Disable</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD14_SELECT</name>
              <description>000:Input                             001:Output 010:RGMII_NULL/MII_TXERR/RMII_NULL   011:Reserved 100:SIM1_DATA                       101:Reserved 110:Reserved                         111:IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD13_SELECT</name>
              <description>000:Input                              001:Output 010:RGMII_TXCTL/MII_TXEN/RMII_TXEN    011:Reserved 100:SIM1_CLK                         101:Reserved 110:Reserved                          111:IO Disable</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD12_SELECT</name>
              <description>000:Input                            001:Output 010:RGMII_TXCK/MII_TXCK/RMII_TXCK    011:Reserved 100:SIM1_PWREN                     101:Reserved 110:Reserved                         111:IO Disable</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD11_SELECT</name>
              <description>000:Input                            001:Output 010:RGMII_NULL/MII_CRS/RMII_NULL     011:Reserved 100:TS2_D7                          101:TS3_D0 110:Reserved                         111:IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD10_SELECT</name>
              <description>000:Input                            001:Output 010:RGMII_TXD0/MII_TXD0/RMII_TXD0    011:Reserved 100:TS2_D6                           101:TS3_DVLD 110:Reserved                          111:IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD9_SELECT</name>
              <description>000:Input                             001:Output 010:RGMII_TXD1/MII_TXD1/RMII_TXD1     011:Reserved 100:TS2_D5                           101:TS3_SYNC 110:Reserved                          111:IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD8_SELECT</name>
              <description>000:Input                             001:Output 010:RGMII_TXD2/MII_TXD2/RMII_NULL     011:Reserved 100:TS2_D4                           101:TS3_ERR 110:Reserved                          111:IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_CFG2_REG</name>
          <description>PD_CFG2_REG</description>
          <addressOffset>0x74</addressOffset>
          <resetValue>0x77</resetValue>
          <resetMask>0x77</resetMask>
          <fields>
            <field>
              <name>PD17_SELECT</name>
              <description>000:Input               001:Output 010:MDIO              011:Reserved 100:Reserved           101:Reserved 110:Reserved           111:IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD16_SELECT</name>
              <description>000:Input              001:Output 010:MDC              011:Reserved 100:SIM1_DET          101:Reserved 110:Reserved           111:IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_CFG3_REG</name>
          <description>PD_CFG3_REG</description>
          <addressOffset>0x78</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PD_DATA_REG</name>
          <description>PD_DATA_REG</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFFF</resetMask>
          <fields>
            <field>
              <name>PD_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read. </description>
              <bitRange>[17:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_DRV0_REG</name>
          <description>PD_DRV0_REG</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x55555555</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PD_DRV_15</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_14</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_13</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_12</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_11</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_10</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_9</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_8</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_7</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_6</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_5</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_4</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_3</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_2</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_1</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_0</name>
              <description>PD[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_DRV1_REG</name>
          <description>PD_DRV1_REG</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x5</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>PD_DRV_1</name>
              <description>PD[n] Multi-Driving Select (n = 16~17) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_DRV_0</name>
              <description>PD[n] Multi-Driving Select (n = 16~17) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_PULL0_REG</name>
          <description>PD_PULL0_REG</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PD_PULL_15</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_14</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_13</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_12</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_11</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_10</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_9</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_8</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_7</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_6</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_5</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_4</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_3</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_2</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_1</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_0</name>
              <description>PD[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PD_PULL1_REG</name>
          <description>PD_PULL1_REG</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF</resetMask>
          <fields>
            <field>
              <name>PD_PULL_1</name>
              <description>PD[n] Pull-up/down Select (n = 16~17) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_PULL_0</name>
              <description>PD[n] Pull-up/down Select (n = 16~17) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PE_CFG0_REG</name>
          <description>PE_CFG0_REG</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PE7_SELECT</name>
              <description>000:Input              001:Output 010:CSI_D3            011:TS0_D3 100:TS1_CLK           101:Reserved 110:Reserved          111:IO Disable </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE6_SELECT</name>
              <description>000:Input              001:Output 010:CSI_D2            011:TS0_D2 100:Reserved          101:Reserved 110:Reserved          111:IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE5_SELECT</name>
              <description>000:Input              001:Output 010:CSI_D1            011:TS0_D1 100:Reserved          101:Reserved 110:Reserved          111:IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE4_SELECT</name>
              <description>000:Input              001:Output 010:CSI_D0             011:TS0_D0 100:Reserved           101:Reserved 110:Reserved           111:IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE3_SELECT</name>
              <description>000:Input               001:Output 010:CSI_VSYNC          011:TS0_DVLD 100:Reserved           101:Reserved 110:Reserved           111:IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE2_SELECT</name>
              <description>000:Input              001:Output 010:CSI_HSYNC         011:TS0_SYNC 100:Reserved           101:Reserved 110:Reserved           111:IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE1_SELECT</name>
              <description>000:Input              001:Output 010:CSI_MCLK          011:TS0_ERR 100:Reserved           101:Reserved 110:Reserved           111:IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE0_SELECT</name>
              <description>000:Input              001:Output 010:CSI_PCLK           011:TS0_CLK 100:Reserved           101:Reserved 110:Reserved           111:IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PE_CFG1_REG</name>
          <description>PE_CFG1_REG</description>
          <addressOffset>0x94</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PE15_SELECT</name>
              <description>000:Input              001:Output 010:Reserved          011:SIM1_VPPPP 100:Reserved          101:Reserved 110:Reserved          111:IO Disable </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE14_SELECT</name>
              <description>000:Input              001:Output 010:Reserved          011:SIM1_VPPEN 100:Reserved          101:Reserved 110:Reserved          111:IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE13_SELECT</name>
              <description>000:Input              001:Output 010:CSI_SDA           011:TWI2_SDA 100:Reserved          101:Reserved 110:Reserved          111:IO Disable</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE12_SELECT</name>
              <description>000:Input              001:Output 010:CSI_SCK           011:TWI2_SCK 100:Reserved          101:Reserved 110:Reserved          111:IO Disable</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE11_SELECT</name>
              <description>000:Input              001:Output 010:CSI_D7            011:TS0_D7 100:TS1_D0           101:Reserved 110:Reserved          111:IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE10_SELECT</name>
              <description>000:Input               001:Output 010:CSI_D6             011:TS0_D6 100:TS1_DVLD          101:Reserved 110:Reserved          111:IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE9_SELECT</name>
              <description>000:Input              001:Output 010:CSI_D5            011:TS0_D5 100:TS1_SYNC          101:Reserved 110:Reserved          111:IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE8_SELECT</name>
              <description>000:Input              001:Output 010:CSI_D4            011:TS0_D4 100:TS1_ERR          101:Reserved 110:Reserved          111:IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PE_CFG2_REG</name>
          <description>PE_CFG2_REG</description>
          <addressOffset>0x98</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PE_CFG3_REG</name>
          <description>PE_CFG3_REG</description>
          <addressOffset>0x9C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PE_DATA__REG</name>
          <description>PE_DATA__REG</description>
          <addressOffset>0xA0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>PE_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PE_DRV0_REG</name>
          <description>PE_DRV0_REG</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x55555555</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PE_DRV_15</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_14</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_13</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_12</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_11</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_10</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_9</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_8</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_7</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_6</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_5</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_4</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_3</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_2</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_1</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_DRV_0</name>
              <description>PE[n] Multi-Driving SELECT (n = 0~15) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PE_DRV1_REG</name>
          <description>PE_DRV1_REG</description>
          <addressOffset>0xA8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PE_PULL0_REG</name>
          <description>PE_PULL0_REG</description>
          <addressOffset>0xAC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PE_PULL_15</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[31:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_14</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[29:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_13</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_12</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_11</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_10</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_9</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_8</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_7</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_6</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_5</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_4</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_3</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_2</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_1</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PE_PULL_0</name>
              <description>PE[n] Pull-up/down Select (n = 0~15) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PE_PULL1_REG</name>
          <description>PE_PULL1_REG</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PF_CFG0_REG</name>
          <description>PF_CFG0_REG</description>
          <addressOffset>0xB4</addressOffset>
          <resetValue>0x7777777</resetValue>
          <resetMask>0x7777777</resetMask>
          <fields>
            <field>
              <name>PF6_SELECT</name>
              <description>000:Input              001:Output 010:Reserved          011:Reserved 100:Reserved          101:Reserved 110:PF_EINT6          111:IO Disable</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF5_SELECT</name>
              <description>000:Input              001:Output 010:SDC0_D2          011:JTAG_CK 100:Reserved          101:Reserved 110:PF_EINT5          111:IO Disable</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF4_SELECT</name>
              <description>000:Input              001:Output 010:SDC0_D3          011:UART0_RX 100:Reserved          101:Reserved 110:PF_EINT4          111:IO Disable</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF3_SELECT</name>
              <description>000:Input              001:Output 010:SDC0_CMD         011:JTAG_DO 100:Reserved          101:Reserved 110:PF_EINT3          111:IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF2_SELECT</name>
              <description>000:Input              001:Output 010:SDC0_CLK          011:UART0_TX 100:Reserved          101:Reserved 110:PF_EINT2          111:IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF1_SELECT</name>
              <description>000:Input              001:Output 010:SDC0_D0          011:JTAG_DI 100:Reserved          101:Reserved 110:PF_EINT1          111:IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF0_SELECT</name>
              <description>000:Input              001:Output 010:SDC0_D1          011:JTAG_MS 100:Reserved          101:Reserved 110:PF_EINT0          111:IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PF_CFG1_REG</name>
          <description>PF_CFG1_REG</description>
          <addressOffset>0xB8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PF_CFG2_REG</name>
          <description>PF_CFG2_REG</description>
          <addressOffset>0xBC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PF_CFG3_REG</name>
          <description>PF_CFG3_REG</description>
          <addressOffset>0xC0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PF_DATA_REG</name>
          <description>PF_DATA_REG</description>
          <addressOffset>0xC4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>PF_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read. </description>
              <bitRange>[6:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PF_DRV0_REG</name>
          <description>PF_DRV0_REG</description>
          <addressOffset>0xC8</addressOffset>
          <resetValue>0x1555</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>PF_DRV_6</name>
              <description>PF[n] Multi-Driving SELECT (n = 0~6) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_DRV_5</name>
              <description>PF[n] Multi-Driving SELECT (n = 0~6) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_DRV_4</name>
              <description>PF[n] Multi-Driving SELECT (n = 0~6) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_DRV_3</name>
              <description>PF[n] Multi-Driving SELECT (n = 0~6) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_DRV_2</name>
              <description>PF[n] Multi-Driving SELECT (n = 0~6) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_DRV_1</name>
              <description>PF[n] Multi-Driving SELECT (n = 0~6) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_DRV_0</name>
              <description>PF[n] Multi-Driving SELECT (n = 0~6) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PF_DRV1_REG</name>
          <description>PF_DRV1_REG</description>
          <addressOffset>0xCC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PF_EINT_CFG0_REG</name>
          <description>PF_EINT_CFG0_REG</description>
          <addressOffset>0x220</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EINT_CFG_6</name>
              <description>External INTn Mode (n = 0~6) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_5</name>
              <description>External INTn Mode (n = 0~6) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_4</name>
              <description>External INTn Mode (n = 0~6) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_3</name>
              <description>External INTn Mode (n = 0~6) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_2</name>
              <description>External INTn Mode (n = 0~6) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_1</name>
              <description>External INTn Mode (n = 0~6) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_0</name>
              <description>External INTn Mode (n = 0~6) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PF_EINT_CFG1_REG</name>
          <description>PF_EINT_CFG1_REG</description>
          <addressOffset>0x224</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PF_EINT_CFG2_REG</name>
          <description>PF_EINT_CFG2_REG</description>
          <addressOffset>0x228</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PF_EINT_CFG3_REG</name>
          <description>PF_EINT_CFG3_REG</description>
          <addressOffset>0x22C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PF_EINT_CTL_REG</name>
          <description>PF_EINT_CTL_REG</description>
          <addressOffset>0x230</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>EINT_CTL_6</name>
              <description>External INTn Enable (n = 0~6) 0: Disable 1: Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_5</name>
              <description>External INTn Enable (n = 0~6) 0: Disable 1: Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_4</name>
              <description>External INTn Enable (n = 0~6) 0: Disable 1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_3</name>
              <description>External INTn Enable (n = 0~6) 0: Disable 1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_2</name>
              <description>External INTn Enable (n = 0~6) 0: Disable 1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_1</name>
              <description>External INTn Enable (n = 0~6) 0: Disable 1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_0</name>
              <description>External INTn Enable (n = 0~6) 0: Disable 1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PF_EINT_DEB_REG</name>
          <description>PF_EINT_DEB_REG</description>
          <addressOffset>0x238</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x71</resetMask>
          <fields>
            <field>
              <name>DEB_CLK_PRE_SCALE</name>
              <description>Debounce Clock Pre-scale n The selected clock source is prescaled by 2^n.  </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CLK_SELECT</name>
              <description>PIO Interrupt Clock Select  
0: LOSC 32KHz 
1: HOSC 24MHz </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC 32KHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HOSC</name>
                  <description>HOSC 24MHz</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PF_EINT_STATUS_REG</name>
          <description>PF_EINT_STATUS_REG</description>
          <addressOffset>0x234</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>R/W1CEINT_STATUS_6</name>
              <description>External INTn Pending Bit (n = 0~6) 0: No IRQ pending 1: IRQ pending W ite to lea it</description>
              <bitRange>[6:6]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_5</name>
              <description>External INTn Pending Bit (n = 0~6) 0: No IRQ pending 1: IRQ pending W ite to lea it</description>
              <bitRange>[5:5]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_4</name>
              <description>External INTn Pending Bit (n = 0~6) 0: No IRQ pending 1: IRQ pending W ite to lea it</description>
              <bitRange>[4:4]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_3</name>
              <description>External INTn Pending Bit (n = 0~6) 0: No IRQ pending 1: IRQ pending W ite to lea it</description>
              <bitRange>[3:3]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_2</name>
              <description>External INTn Pending Bit (n = 0~6) 0: No IRQ pending 1: IRQ pending W ite to lea it</description>
              <bitRange>[2:2]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_1</name>
              <description>External INTn Pending Bit (n = 0~6) 0: No IRQ pending 1: IRQ pending W ite to lea it</description>
              <bitRange>[1:1]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_0</name>
              <description>External INTn Pending Bit (n = 0~6) 0: No IRQ pending 1: IRQ pending W ite to lea it</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>PF_PULL0_REG</name>
          <description>PF_PULL0_REG</description>
          <addressOffset>0xD0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>PF_PULL_6</name>
              <description>PF[n] Pull-up/down Select (n = 0~6) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_5</name>
              <description>PF[n] Pull-up/down Select (n = 0~6) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_4</name>
              <description>PF[n] Pull-up/down Select (n = 0~6) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_3</name>
              <description>PF[n] Pull-up/down Select (n = 0~6) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_2</name>
              <description>PF[n] Pull-up/down Select (n = 0~6) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_1</name>
              <description>PF[n] Pull-up/down Select (n = 0~6) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PF_PULL_0</name>
              <description>PF[n] Pull-up/down Select (n = 0~6) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PF_PULL1_REG</name>
          <description>PF_PULL1_REG</description>
          <addressOffset>0xD4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PG_CFG0_REG</name>
          <description>PG_CFG0_REG</description>
          <addressOffset>0xD8</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PG7_SELECT</name>
              <description>000:Input              001:Output 010:UART1_RX         011: Reserved 100:Reserved          101:Reserved 110:PG_EINT7          111:IO Disable</description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG6_SELECT</name>
              <description>000:Input               001:Output 010:UART1_TX          011: Reserved 100:Reserved           101:Reserved 110:PG_EINT6          111:IO Disable</description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG5_SELECT</name>
              <description>000:Input               001:Output 010:SDC1_D3           011:Reserved 100:Reserved           101:Reserved 110:PG_EINT5          111:IO Disable</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG4_SELECT</name>
              <description>000:Input               001:Output 010:SDC1_D2           011:Reserved 100:Reserved           101:Reserved 110:PG_EINT4          111:IO Disable</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG3_SELECT</name>
              <description>000:Input               001:Output 010:SDC1_D1           011:Reserved 100:Reserved           101:Reserved 110:PG_EINT3          111:IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG2_SELECT</name>
              <description>000:Input               001:Output 010:SDC1_D0           011:Reserved 100:Reserved           101:Reserved 110:PG_EINT2          111:IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG1_SELECT</name>
              <description>000:Input              001:Output 010:SDC1_CMD         011:Reserved 100:Reserved           101:Reserved 110:PG_EINT1          111:IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG0_SELECT</name>
              <description>000:Input               001:Output 010:SDC1_CLK           011:Reserved 100:Reserved           101:Reserved 110:PG_EINT0          111:IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_CFG1_REG</name>
          <description>PG_CFG1_REG</description>
          <addressOffset>0xDC</addressOffset>
          <resetValue>0x777777</resetValue>
          <resetMask>0x777777</resetMask>
          <fields>
            <field>
              <name>PG13_SELECT</name>
              <description>000:Input               001:Output 
010: PCM1_DIN          011: Reserved 100:Reserved            101:Reserved 110:PG_EINT13          111:IO Disable</description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PCM1_DIN</name>
                  <description>PCM1_DIN</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reserved</name>
                  <description>Reserved 100:Reserved            101:Reserved 110:PG_EINT13          111:IO Disable</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG12_SELECT</name>
              <description>000:Input               001:Output 
010: PCM1_DOUT        011: Reserved 100:Reserved            101:Reserved 110:PG_EINT12          111:IO Disable</description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PCM1_DOUT</name>
                  <description>PCM1_DOUT</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reserved</name>
                  <description>Reserved 100:Reserved            101:Reserved 110:PG_EINT12          111:IO Disable</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG11_SELECT</name>
              <description>000:Input               001:Output 
010: PCM1_CLK          011: Reserved 100:Reserved            101:Reserved 110:PG_EINT11          111:IO Disable</description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PCM1_CLK</name>
                  <description>PCM1_CLK</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reserved</name>
                  <description>Reserved 100:Reserved            101:Reserved 110:PG_EINT11          111:IO Disable</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG10_SELECT</name>
              <description>000:Input               001:Output 
010: PCM1_SYNC         011: Reserved 100:Reserved            101:Reserved 110:PG_EINT10          111:IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>PCM1_SYNC</name>
                  <description>PCM1_SYNC</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reserved</name>
                  <description>Reserved 100:Reserved            101:Reserved 110:PG_EINT10          111:IO Disable</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PG9_SELECT</name>
              <description>000:Input               001:Output 010:UART1_CTS          011: Reserved 100:Reserved            101:Reserved 110:PG_EINT9           111:IO Disable</description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG8_SELECT</name>
              <description>000:Input               001:Output 010:UART1_RTS          011: Reserved 100:Reserved            101:Reserved 110:PG_EINT8           111:IO Disable</description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_CFG2_REG</name>
          <description>PG_CFG2_REG</description>
          <addressOffset>0xE0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PG_CFG3_REG</name>
          <description>PG_CFG3_REG</description>
          <addressOffset>0xE4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PG_DATA_REG</name>
          <description>PG_DATA_REG</description>
          <addressOffset>0xE8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>PG_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read. </description>
              <bitRange>[13:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_DRV0_REG</name>
          <description>PG_DRV0_REG</description>
          <addressOffset>0xEC</addressOffset>
          <resetValue>0x5555555</resetValue>
          <resetMask>0xFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PG_DRV_13</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_12</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_11</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_10</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_9</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_8</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_7</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_6</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_5</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_4</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_3</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_2</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_1</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_DRV_0</name>
              <description>PG[n] Multi-Driving SELECT (n = 0~13) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_DRV1_REG</name>
          <description>PG_DRV1_REG</description>
          <addressOffset>0xF0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PG_EINT_CFG0_REG</name>
          <description>PG_EINT_CFG0_REG</description>
          <addressOffset>0x240</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EINT_CFG_7</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_6</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_5</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_4</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_3</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_2</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_1</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_0</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_EINT_CFG1_REG</name>
          <description>PG_EINT_CFG1_REG</description>
          <addressOffset>0x244</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>EINT_CFG_5</name>
              <description>External INTn Mode (n = 8~13) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_4</name>
              <description>External INTn Mode (n = 8~13) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_3</name>
              <description>External INTn Mode (n = 8~13) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_2</name>
              <description>External INTn Mode (n = 8~13) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_1</name>
              <description>External INTn Mode (n = 8~13) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_0</name>
              <description>External INTn Mode (n = 8~13) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_EINT_CFG2_REG</name>
          <description>PG_EINT_CFG2_REG</description>
          <addressOffset>0x248</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PG_EINT_CFG3_REG</name>
          <description>PG_EINT_CFG3_REG</description>
          <addressOffset>0x24C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PG_EINT_CTL_REG</name>
          <description>PG_EINT_CTL_REG</description>
          <addressOffset>0x250</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>EINT_CTL_13</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_12</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_11</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_10</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_9</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_8</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_7</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_6</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_5</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_4</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_3</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_2</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_1</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_0</name>
              <description>External INTn Enable (n = 0~13) 0: Disable 1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_EINT_DEB_REG</name>
          <description>PG_EINT_DEB_REG</description>
          <addressOffset>0x258</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x71</resetMask>
          <fields>
            <field>
              <name>DEB_CLK_PRE_SCALE</name>
              <description>Debounce Clock Pre-scale n The selected clock source is prescaled by 2^n.  </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CLK_SELECT</name>
              <description>PIO Interrupt Clock Select  
0: LOSC 32KHz 
1: HOSC 24MHz </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC 32KHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HOSC</name>
                  <description>HOSC 24MHz</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_EINT_STATUS_REG</name>
          <description>PG_EINT_STATUS_REG</description>
          <addressOffset>0x254</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FFF</resetMask>
          <fields>
            <field>
              <name>R/W1CEINT_STATUS_13</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending W ite to lea it</description>
              <bitRange>[13:13]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_12</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending W ite to lea it</description>
              <bitRange>[12:12]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_11</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending W ite to lea it</description>
              <bitRange>[11:11]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_10</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending W ite to lea it</description>
              <bitRange>[10:10]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_9</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending W ite to lea it</description>
              <bitRange>[9:9]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_8</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending W ite to lea it</description>
              <bitRange>[8:8]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_7</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending W ite to lea it</description>
              <bitRange>[7:7]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_6</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending W ite to lea it</description>
              <bitRange>[6:6]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_5</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending W ite to lea it</description>
              <bitRange>[5:5]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_4</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending W ite to lea it</description>
              <bitRange>[4:4]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_3</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending W ite to lea it</description>
              <bitRange>[3:3]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_2</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending W ite to lea it</description>
              <bitRange>[2:2]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_1</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending W ite to lea it</description>
              <bitRange>[1:1]</bitRange>
            </field>
            <field>
              <name>R/W1CEINT_STATUS_0</name>
              <description>External INTn Pending Bit (n = 0~13) 0: No IRQ pending 1: IRQ pending W ite to lea it</description>
              <bitRange>[0:0]</bitRange>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_PULL0_REG</name>
          <description>PG_PULL0_REG</description>
          <addressOffset>0xF4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFF</resetMask>
          <fields>
            <field>
              <name>PG_PULL_13</name>
              <description>PG[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[27:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_PULL_12</name>
              <description>PG[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_PULL_11</name>
              <description>PG[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_PULL_10</name>
              <description>PG[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_PULL_9</name>
              <description>PG[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_PULL_8</name>
              <description>PG[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_PULL_7</name>
              <description>PG[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_PULL_6</name>
              <description>PG[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_PULL_5</name>
              <description>PG[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_PULL_4</name>
              <description>PG[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_PULL_3</name>
              <description>PG[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_PULL_2</name>
              <description>PG[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_PULL_1</name>
              <description>PG[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PG_PULL_0</name>
              <description>PG[n] Pull-up/down Select (n = 0~13) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PG_PULL1_REG</name>
          <description>PG_PULL1_REG</description>
          <addressOffset>0xF8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PIO</name>
      <description>PIO</description>
      <groupName>generic</groupName>
      <baseAddress>0x1F02C00</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>PL_CFG0_REG</name>
          <description>PL_CFG0_REG</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x77777777</resetValue>
          <resetMask>0x77777777</resetMask>
          <fields>
            <field>
              <name>PL7_SELECT</name>
              <description>000:Input               001:Output 010:S_JTAG_DI           011:Reserved 100:Reserved            101:Reserved 110:S_PL_EINT7          111:IO Disable </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL6_SELECT</name>
              <description>000:Input               001:Output 010:S_JTAG_DO          011:Reserved 100:Reserved            101:Reserved 110:S_PL_EINT6          111:IO Disable </description>
              <bitRange>[26:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL5_SELECT</name>
              <description>000:Input               001:Output 010:S_JTAG_CK          011:Reserved 100:Reserved            101:Reserved 110:S_PL_EINT5          111:IO Disable </description>
              <bitRange>[22:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL4_SELECT</name>
              <description>000:Input               001:Output 010:S_JTAG_MS          011:Reserved 100:Reserved            101:Reserved 110:S_PL_EINT4          111:IO Disable </description>
              <bitRange>[18:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL3_SELECT</name>
              <description>000:Input               001:Output 010:S_UART_RX          011:Reserved 100:Reserved            101:Reserved 110:S_PL_EINT3          111:IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL2_SELECT</name>
              <description>000:Input               001:Output 010:S_UART_TX          011:Reserved 100:Reserved            101:Reserved 110:S_PL_EINT2          111:IO Disable </description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL1_SELECT</name>
              <description>000:Input               001:Output 010:S_TWI_SDA          011:Reserved 100:Reserved            101:Reserved 110:S_PL_EINT1          111:IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL0_SELECT</name>
              <description>000:Input               001:Output 010:S_TWI_SCK          011:Reserved 100:Reserved            101:Reserved 110:S_PL_EINT0          111:IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_CFG1_REG</name>
          <description>PL_CFG1_REG</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x7777</resetValue>
          <resetMask>0x7777</resetMask>
          <fields>
            <field>
              <name>PL11_SELECT</name>
              <description>000:Input               001:Output 010:S_CIR_RX            011:Reserved 100:Reserved            101:Reserved 110:S_PL_EINT11         111:IO Disable </description>
              <bitRange>[14:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL10_SELECT</name>
              <description>000:Input               001:Output 010:S_PWM             011:Reserved 100:Reserved            101:Reserved 110:S_PL_EINT10         111:IO Disable</description>
              <bitRange>[10:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL9_SELECT</name>
              <description>000:Input               001:Output 010:Reserved            011:Reserved 100:Reserved            101:Reserved 110:S_PL_EINT9          111:IO Disable </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL8_SELECT</name>
              <description>000:Input               001:Output 010:Reserved            011:Reserved 100:Reserved            101:Reserved 110:S_PL_EINT8          111:IO Disable </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_CFG2_REG</name>
          <description>PL_CFG2_REG</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PL_CFG3_REG</name>
          <description>PL_CFG3_REG</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PL_DATA_REG</name>
          <description>PL_DATA_REG</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>PL_DAT</name>
              <description>If the port is configured as input, the corresponding bit is the pin state. If the port is configured as output, the pin state is the same as the corresponding bit. The read bit value is the value setup by software. If the port is configured as functional pin, the undefined value will be read.</description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_DRV0</name>
          <description>Port L Multi-Driving Register 0</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x555555</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>PL_DRV_11</name>
              <description>PL[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_DRV_10</name>
              <description>PL[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_DRV_9</name>
              <description>PL[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_DRV_8</name>
              <description>PL[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_DRV_7</name>
              <description>PL[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_DRV_6</name>
              <description>PL[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_DRV_5</name>
              <description>PL[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_DRV_4</name>
              <description>PL[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_DRV_3</name>
              <description>PL[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_DRV_2</name>
              <description>PL[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_DRV_1</name>
              <description>PL[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_DRV_0</name>
              <description>PL[n] Multi-Driving Select (n = 0~11) 00: Level 0 01: Level 1 10: Level 2 11: Level 3</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_DRV1</name>
          <description>Port L Multi-Driving Register 1</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PL_EINT_CFG0</name>
          <description>PL_EINT_CFG0</description>
          <addressOffset>0x200</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>EINT_CFG_7</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[31:28]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_6</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_5</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[23:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_4</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_3</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_2</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_1</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_0</name>
              <description>External INTn Mode (n = 0~7) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_EINT_CFG1</name>
          <description>PL_EINT_CFG1</description>
          <addressOffset>0x204</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>EINT_CFG_3</name>
              <description>External INTn Mode (n = 8~11) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[15:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_2</name>
              <description>External INTn Mode (n = 8~11) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_1</name>
              <description>External INTn Mode (n = 8~11) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CFG_0</name>
              <description>External INTn Mode (n = 8~11) 0000: Positive Edge 0001: Negative Edge 0010: High Level 0011: Low Level 0100: Double Edge (Positive/ Negative) Others: Reserved</description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_EINT_CFG2</name>
          <description>PL_EINT_CFG2</description>
          <addressOffset>0x208</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PL_EINT_CFG3</name>
          <description>PL_EINT_CFG3</description>
          <addressOffset>0x20C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
        <register>
          <name>PL_EINT_CTL</name>
          <description>PL_EINT_CTL</description>
          <addressOffset>0x210</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>EINT_CTL_11</name>
              <description>External INTn Enable (n = 0~11) 0: Disable 1: Enable</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_10</name>
              <description>External INTn Enable (n = 0~11) 0: Disable 1: Enable</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_9</name>
              <description>External INTn Enable (n = 0~11) 0: Disable 1: Enable</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_8</name>
              <description>External INTn Enable (n = 0~11) 0: Disable 1: Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_7</name>
              <description>External INTn Enable (n = 0~11) 0: Disable 1: Enable</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_6</name>
              <description>External INTn Enable (n = 0~11) 0: Disable 1: Enable</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_5</name>
              <description>External INTn Enable (n = 0~11) 0: Disable 1: Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_4</name>
              <description>External INTn Enable (n = 0~11) 0: Disable 1: Enable</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_3</name>
              <description>External INTn Enable (n = 0~11) 0: Disable 1: Enable</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_2</name>
              <description>External INTn Enable (n = 0~11) 0: Disable 1: Enable</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_1</name>
              <description>External INTn Enable (n = 0~11) 0: Disable 1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_CTL_0</name>
              <description>External INTn Enable (n = 0~11) 0: Disable 1: Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_EINT_DEB</name>
          <description>PL_EINT_DEB</description>
          <addressOffset>0x218</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x71</resetMask>
          <fields>
            <field>
              <name>DEB_CLK_PRE_SCALE</name>
              <description>Debounce Clock Pre-scale n The selected clock source is prescaled by 2^n.  </description>
              <bitRange>[6:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PIO_INT_CLK_SELECT</name>
              <description>PIO Interrupt Clock Select  
0: LOSC 32KHz 
1: HOSC 24MHz </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC 32KHz</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>HOSC</name>
                  <description>HOSC 24MHz</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_EINT_STATUS</name>
          <description>PL_EINT_STATUS</description>
          <addressOffset>0x214</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>EINT_STATUS_11</name>
              <description>External INTn Pending Bit (n = 0~11) 0: No IRQ pending 1: IRQ pending W ite to lea</description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_10</name>
              <description>External INTn Pending Bit (n = 0~11) 0: No IRQ pending 1: IRQ pending W ite to lea</description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_9</name>
              <description>External INTn Pending Bit (n = 0~11) 0: No IRQ pending 1: IRQ pending W ite to lea</description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_8</name>
              <description>External INTn Pending Bit (n = 0~11) 0: No IRQ pending 1: IRQ pending W ite to lea</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_7</name>
              <description>External INTn Pending Bit (n = 0~11) 0: No IRQ pending 1: IRQ pending W ite to lea</description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_6</name>
              <description>External INTn Pending Bit (n = 0~11) 0: No IRQ pending 1: IRQ pending W ite to lea</description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_5</name>
              <description>External INTn Pending Bit (n = 0~11) 0: No IRQ pending 1: IRQ pending W ite to lea</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_4</name>
              <description>External INTn Pending Bit (n = 0~11) 0: No IRQ pending 1: IRQ pending W ite to lea</description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_3</name>
              <description>External INTn Pending Bit (n = 0~11) 0: No IRQ pending 1: IRQ pending W ite to lea</description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_2</name>
              <description>External INTn Pending Bit (n = 0~11) 0: No IRQ pending 1: IRQ pending W ite to lea</description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_1</name>
              <description>External INTn Pending Bit (n = 0~11) 0: No IRQ pending 1: IRQ pending W ite to lea</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EINT_STATUS_0</name>
              <description>External INTn Pending Bit (n = 0~11) 0: No IRQ pending 1: IRQ pending W ite to lea</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_PULL0</name>
          <description>PL_PULL0</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x5</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>PL_PULL_11</name>
              <description>PL[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_PULL_10</name>
              <description>PL[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[21:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_PULL_9</name>
              <description>PL[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[19:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_PULL_8</name>
              <description>PL[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[17:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_PULL_7</name>
              <description>PL[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[15:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_PULL_6</name>
              <description>PL[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[13:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_PULL_5</name>
              <description>PL[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[11:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_PULL_4</name>
              <description>PL[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_PULL_3</name>
              <description>PL[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[7:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_PULL_2</name>
              <description>PL[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_PULL_1</name>
              <description>PL[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[3:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PL_PULL_0</name>
              <description>PL[n] Pull-up/down Select (n = 0~11) 00: Pull-up/down disable 01: Pull-up 10: Pull-down 11: Reserved</description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PL_PULL1</name>
          <description>PL_PULL1</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields/>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>PWM</name>
      <description>PWM</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C21400</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>PWM_CH_PERIOD</name>
          <description>PWM Channel Period Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>PWM_CH0_ENTIRE_CYS</name>
              <description>Number of the entire cycles in the PWM clock.  0 = 1 cycle 1 = 2 cycles ...  N = N+1 cycles  If the register need to be modified dynamically, the PCLK should be faster than the PWM CLK (PWM CLK = 24MHz/pre-scale). </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PWM_CH0_ENTIRE_ACT_CYS</name>
              <description>Number of the active cycles in the PWM clock.  0 = 0 cycle 1 = 1 cycles ...  N = N cycles </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWM_CTRL_REG</name>
          <description>PWM_CTRL_REG</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x100003FF</resetMask>
          <fields>
            <field>
              <name>PWM0_RDY</name>
              <description>PWM0 Period Register Ready.  
0: PWM0 period register is ready to write 
1: PWM0 period register is busy. </description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>ready</name>
                  <description>PWM0 period register is ready to write</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy</name>
                  <description>PWM0 period register is busy.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM0_BYPASS</name>
              <description>PWM CH0 Bypass Enable. If the bit is set to 1, PWM0 output is OSC24MHz.  
0: Disable 
1: Enable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM_CH0_PUL_START</name>
              <description>PWM Channel 0 Pulse Output Start.  
0: No effect 
1: Output 1 pulse.  The pulse width should be set by the bit[15:0] of PWM Channel Period Register ,and the pulse state should be set by PWM Channel 0 Active State . After the pulse is finished, the bit will be cleared automatically. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output</name>
                  <description>Output 1 pulse.  The pulse width should be set by the bit[15:0] of PWM Channel Period Register ,and the pulse state should be set by PWM Channel 0 Active State . After the pulse is finished, the bit will be cleared automatically.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM_CHANNEL0_MODE</name>
              <description>0: Cycle mode  
1: Pulse mode. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Cycle_mode</name>
                  <description>Cycle mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pulse</name>
                  <description>Pulse mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCLK_CH0_GATING</name>
              <description>Gating the Special Clock for PWM0  
0: Mask 
1: Pass </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pass</name>
                  <description>Pass</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM_CH0_ACT_STA</name>
              <description>PWM Channel 0 Active State.  
0: Low Level  
1: High Level. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Low_Level</name>
                  <description>Low Level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High</name>
                  <description>High Level.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM_CH0_EN</name>
              <description>PWM Channel 0 Enable.  
0: Disable  
1: Enable. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PWM_CH0_PRESCAL</name>
              <description>PWM Channel 0 Prescalar. These bits should be set before the PWM Channel 0 clock gate on.  
0000: /120 
0001: /180 
0010: /240 
0011: /360 
0100: /480 
0101: / 
0110: / 
0111: / 
1000: /12k 
1001: /24k 
1010: /36k 
1011: /48k 
1100: /72k 
1101: / 
1110: / 
1111: /1 </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_slash_120</name>
                  <description>/120</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_180</name>
                  <description>/180</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_240</name>
                  <description>/240</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_360</name>
                  <description>/360</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_480</name>
                  <description>/480</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_12k</name>
                  <description>/12k</description>
                  <value>0b1000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_24k</name>
                  <description>/24k</description>
                  <value>0b1001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_36k</name>
                  <description>/36k</description>
                  <value>0b1010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_48k</name>
                  <description>/48k</description>
                  <value>0b1011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_72k</name>
                  <description>/72k</description>
                  <value>0b1100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_slash_1</name>
                  <description>/1</description>
                  <value>0b1111</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SCR0</name>
      <description>SCR0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C2C400</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>SCR_CLKDIV</name>
          <description>SCR_CLKDIV</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BAUDDIV</name>
              <description>Baud Clock Divisor.  This 16-bit register defines the divisor value used to generate the Baud Clock impulses from the system clock.  </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCCDIV</name>
              <description>Smart Card Clock Divisor.  This 16-bit register defines the divisor value used to generate the Smart Card Clock from the system clock.   is the frequency of Smart Card Clock Signal.  is the frequency of APB Clock. </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_CSR</name>
          <description>Smart Card Reader Control and Status Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x81FF0F07</resetMask>
          <fields>
            <field>
              <name>SCDET</name>
              <description>Smart Card Detected This it is set to  he the s dete t i put is a ti e at least fo a de ou e time. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SCDETPOL</name>
              <description>Smart Card Detect Polarity This bit set polarity of scdetect signal.  
0: Low Active 
1: High Active </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Low Active</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High</name>
                  <description>High Active</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PROTOCOL</name>
              <description>Protocol Selection (PTLSEL)   
00: T=0. 
01: T=1, no character repeating and no guard time is used when T=1  protocol is selected. 
10: Reserved 
11: Reserved  </description>
              <bitRange>[23:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>T_equals_0</name>
                  <description>T=0.</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>T_equals_1</name>
                  <description>T=1, no character repeating and no guard time is used when T=1  protocol is selected.</description>
                  <value>0b01</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ATRSTFLUSH</name>
              <description>ATR Start Flush FIFO When enabled, both FIFOs are flushed before the ATR is started. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSRXE</name>
              <description>TS Receive Enable Whe set to , the TS ha a te  the fi st ATR ha a te  ill e sto e d in RXFIFO during card session. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKSTPPOL</name>
              <description>Clock Stop Polarity The value of the scclk output during the clock stop state. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>PECRXE</name>
              <description>Parity Error Character Receive Enable Enables storage of the characters received with wrong parity in RX FIFO. </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>MSBF</name>
              <description>MSB First When high, inverse bit ordering convention (msb to lsb) is used. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DATAPOL</name>
              <description>Data Plorarity Whe high, i e se le el o e tio is used A= , Z= . </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DEACT</name>
              <description>Deactivation.  Setting of this bit initializes the deactivation sequence. When the deactivation is finished, the DEACT bit is automatically cleared. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ACT</name>
              <description>Activation.  Setting of this bit initializes the activation sequence. When the activation is finished, the ACT bit is automatically cleared. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WARMRST</name>
              <description>Warm Reset Command.  W iti g  to this it i itializes Wa Reset of the S a t Ca d. This it is al a s ead as . </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKSTOP</name>
              <description>Clock Stop.  When this bit is asserted and the Smart C a d I/O li e is i  Z state, the SCR core stops driving of the Smart Card clock signal after the CLKSTOPDELAY time expires. The Smart Card clock is restarted immediately after the CLKSTOP  signal is deasserted. New character transmission can be started after CLKSTARTDELAY time. The expiration of both times is signaled by the CLKSTOPRUN bit in the interrupt registers. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GINTEN</name>
              <description>Global Interrupt Enable.  When high, IRQ output assertion is enabled. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXEN</name>
              <description>Receiving Enable.  When enabled the characters sent by the Smart Card are received by the UART and stored in RX FIFO. Receiving is internally disabled while a transmission is in progress. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXEN</name>
              <description>Transmission Enable.  When enabled the characters are read from TX FIFO and transmitted through UART to the Smart Card. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_CTIM</name>
          <description>Smart Card Reader Character Time Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF00FF</resetMask>
          <fields>
            <field>
              <name>CHARLIMIT</name>
              <description>Character Limit.  This 16-bit register sets the maximum time between the leading edges of two consecutive characters. The value is ETUs. </description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GUARDTIME</name>
              <description>Character Guard time.  This 8-bit register sets a delay at the end of each character transmitted from the Smart Card Reader to the Smart Card. The value is in ETUs. The parity error is besides signaled during the guard time.  </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_FCSR</name>
          <description>Smart Card Reader FIFO Control and Status Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x101</resetValue>
          <resetMask>0x707</resetMask>
          <fields>
            <field>
              <name>RXFIFOFLUSH</name>
              <description>Flush RX FIFO. RX FIFO is flushed, he  is itte to this it. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFOFULL</name>
              <description>RX FIFO Full. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RXFIFOEMPTY</name>
              <description>RX FIFO Empty. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFOFLUSH</name>
              <description>Flush TX FIFO. TX FIFO is flushed, he  is itte to this it. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFOFULL</name>
              <description>TX FIFO Full. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFIFOEMPTY</name>
              <description>TX FIFO Empty. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_FIFO</name>
          <description>Smart Card Reader RX and TX FIFO Access Point</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFO_DATA</name>
              <description>This 8-bit register provides access to the RX and TX FIFO buffers. The TX FIFO is accessed during the APB write transfer. The RX FIFO is accessed during the APB read transfer.  </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_FIFOCNT</name>
          <description>SCR_FIFOCNT</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RXFTH</name>
              <description>RX FIFO Threshold These bits set the interrupt threshold of RX FIFO. The interrupt is asserted when the number of bytes it receives is equal to, or exceeds the threshold. </description>
              <bitRange>[31:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFTH</name>
              <description>TX FIFO Threshold These bits set the interrupt threshold of TX FIFO. The interrupt is asserted when the number of bytes in TX FIFO is equal to or less than the threshold. </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFCNT</name>
              <description>RX FIFO Counter These bits provide the number of bytes stored in the RXFIFO. </description>
              <bitRange>[15:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TXFCNT</name>
              <description>TX FIFO Counter These bits provide the number of bytes stored in the TXFIFO. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_INTEN</name>
          <description>Smart Card Reader Interrupt Enable Register 1</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF1E1F</resetMask>
          <fields>
            <field>
              <name>SCDEA</name>
              <description>Smart Card Deactivation Interrupt Enable. </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCACT</name>
              <description>Smart Card Activation Interrupt Enable. </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCINS</name>
              <description>Smart Card Inserted Interrupt Enable. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCREM</name>
              <description>Smart Card Removed Interrupt Enable. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATRDONE</name>
              <description>ATR Done Interrupt Enable. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATRFAIL</name>
              <description>ATR Fail Interrupt Enable. </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C2CFULL</name>
              <description>Two Consecutive Characters Limit Interrupt Enable. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKSTOPRUN</name>
              <description>Smart Card Clock Stop/Run Interrupt Enable. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXPERR</name>
              <description>RX Parity Error Interrupt Enable. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXDONE</name>
              <description>RX Done Interrupt Enable. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFOTHD</name>
              <description>RX FIFO Threshold Interrupt Enable. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFOFULL</name>
              <description>RX FIFO Full Interrupt Enable. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXPERR</name>
              <description>TX Parity Error Interrupt Enable. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXDONE</name>
              <description>TX Done Interrupt Enable. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFOTHD</name>
              <description>TX FIFO Threshold Interrupt Enable. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFOEMPTY</name>
              <description>TX FIFO Empty Interrupt Enable. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFODONE</name>
              <description>TX FIFO Done Interrupt Enable. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_INTST</name>
          <description>Smart Card Reader Interrupt Status Register 1</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF1E1F</resetMask>
          <fields>
            <field>
              <name>SCDEA</name>
              <description>Smart Card Deactivation Interrupt.  When enabled, this interrupt is asserted after the Smart Card deactivation sequence completed. </description>
              <bitRange>[23:23]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCACT</name>
              <description>Smart Card Activation Interrupt.  When enabled, this interrupt is asserted after the Smart Card activation sequence completed. </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCINS</name>
              <description>Smart Card Inserted Interrupt.  When enabled, this interrupt is asserted after the Smart Card inserted. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SCREM</name>
              <description>Smart Card Removed Interrupt.  When enabled, this interrupt is asserted after the Smart Card removed. </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATRDONE</name>
              <description>ATR Done Interrupt.  When enabled, this interrupt is asserted after the ATR sequence successfully completed. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ATRFAIL</name>
              <description>ATR Fail Interrupt.  When enabled, this interrupt is asserted if the ATR sequence fails. </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>C2CFULL</name>
              <description>Two Consecutive Characters Limit Interrupt.  When enabled, this interrupt is asserted if the time between two consecutive characters, transmitted between the Smart Card and the Reader in both directions, is equal the Two Characters Delay Limit described below. The C2CFULL interrupt is internally enabled from the ATR start to the deactivation or ATR restart initialization. It is recommended to use this counter to detect unresponsive Smart Cards. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLKSTOPRUN</name>
              <description>Smart Card Clock Stop/Run Interrupt.  When enabled, this interrupt is asserted in two cases: When the Smart Card clock is stopped. When the new character can be started after the clock restart. To distinguish between the two interrupt cases, we recommend reading the CLKSTOP bit in SCR_CSR register.  </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXPERR</name>
              <description>RX Parity Error Interrupt.  When enabled, this interrupt is asserted after the character with wrong parity was received when the number of repeated receptions exceeds RXREPEAT value or T=1 protocol is used. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXDONE</name>
              <description>RX Done Interrupt.  When enabled, this interrupt is asserted after a character was received from the Smart Card. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFOTHD</name>
              <description>RX FIFO Threshold Interrupt.  When enabled, this interrupt is asserted if the number of bytes in RX FIFO is equal or exceeds the RX FIFO threshold. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RXFIFOFULL</name>
              <description>RX FIFO Full Interrupt.  When enabled, this interrupt is asserted if the RX FIFO is filled up. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXPERR</name>
              <description>TX Parity Error Interrupt.  When enabled, this interrupt is asserted if the Smart Card signals wrong character parity during the guard time after the character transmission was repeated TXREPEAT times or T=1 protocol is used.  </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXDONE</name>
              <description>TX Done Interrupt.  When enabled, this interrupt is asserted after one character was transmitted to the Smart Card. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFOTHD</name>
              <description>TX FIFO Threshold Interrupt.  When enabled, this interrupt is asserted if the number of bytes in TX FIFO is equal or less than the TX FIFO threshold. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFOEMPTY</name>
              <description>TX FIFO Empty Interrupt.  When enabled, this interrupt is asserted if the TX FIFO is emptied out. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXFIFODONE</name>
              <description>TX FIFO Done Interrupt.  When enabled, this interrupt is asserted after all bytes from TX FIFO are transferred to the Smart Card. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_LTIM</name>
          <description>Smart Card Reader Line Time Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>ATR</name>
              <description>ATR Start Limit.  This 16-bit register defines the maximum time between the rising edge of the scrstn signal and the start of ATR response.  ATR Start Limit = 128* ATR*T </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RST</name>
              <description>Reset Duration.  This 16-bit register sets the duration of the Smart Card reset sequence. This value is same for the cold and warm reset.  Cold/Warm Reset Duration = 128* RST* T </description>
              <bitRange>[15:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ACT</name>
              <description>Activation/Deactivation Time.  This 16-bit register sets the duration of each part of the activation and deactivation sequence.  Activation/Deactivation Duration = 128* ACT * T   is the Smart Card Clock Cycle. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_PAD</name>
          <description>SCR_PAD</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DSCVPPPP</name>
              <description>Direct Smart Card Vpp Pause/Prog.  It provides direct access to SCVPPPP output. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSCVPPEN</name>
              <description>Direct Smart Card Vpp Enable.  It provides direct access to SCVPPEN output. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>AUTOADEAVPP</name>
              <description>Automatic Vpp Handling.  When high, it enables automatic handling of DSVPPEN and DSVPPPP signals during activation and deactivation sequence. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSCVCC</name>
              <description>Direct Smart Card VCC.  Whe  DIRACCPADS= , the DSCVCC it p o ide s direct access to SCVCC pad. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSCRST</name>
              <description>Direct Smart Card Clock.  Whe DIRACCPADS= , the DSCRST it p o ides di e t a ess to SCRST pad. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSCCLK</name>
              <description>Direct Smart Card Clock.  Whe DIRACCPADS= , the DSCCLK it p o ides di e t a ess to SCC LK pad. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSCIO</name>
              <description>Direct Smart Card Input/Output.  Whe DIRACCPADS= , the DSCIO it p o ides di e t a ess to SCIO pad. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DIRACCPADS</name>
              <description>Direct Access to Smart Card Pads.  When high, it disables a serial interface functionality and enables direct control of the Smart Card pads using following 4 bits. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCR_REPEAT</name>
          <description>SCR_REPEAT</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RXRPT</name>
              <description>RX Repeat This is a 4-bit register that specifies the number of attempts to request character re-transmission after wrong parity was detected. The re-transmission of the character is requested using the error signal during the guard time. </description>
              <bitRange>[7:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TXRPT</name>
              <description>TX Repeat This is a 4-bit register that specifies the number of attempts to re-transmit the character after the Smart Card signals the wrong parity during the guard time. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="SCR0">
      <name>SCR1</name>
      <description>SCR1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C2C800</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>SMHC0</name>
      <description>SMHC0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C0F000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>SMHC_A12A_REG</name>
          <description>SMHC_A12A_REG</description>
          <addressOffset>0x58</addressOffset>
          <resetValue>0xFFFF</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>SMHC_A12A</name>
              <description>SMHC_A12A set the argument of command 12 automatically send by controller  </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_BLKSIZ</name>
          <description>SMHC_BLKSIZ</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x200</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>BLK_SZ</name>
              <description>Block Size </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_BYTCNT</name>
          <description>SMHC_BYTCNT</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x200</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>BYTE_CNT</name>
              <description>Byte Counter Number of bytes to be transferred. It should be integer multiple of Block Size for block transfers. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CBDA_REG</name>
          <description>SMHC_CBDA_REG</description>
          <addressOffset>0x94</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CUR_BUFF_ADDR</name>
              <description>Host Buffer Address Pointer.  Cleared on Reset. Pointer updated by IDMAC during operation. This register points to the current Data Buffer Address being accessed by the IDMAC. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CHDA_REG</name>
          <description>SMHC_CHDA_REG</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CUR_DES_ADDR</name>
              <description>Host Descriptor Address Pointer.  Cleared on reset. Pointer updated by IDMAC during operation. This register points to the start address of the current descriptor read by the IDMAC. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CLKDIV</name>
          <description>SMHC_CLKDIV</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800300FF</resetMask>
          <fields>
            <field>
              <name>MASK_DATA0</name>
              <description>0: Do not mask data0 when update clock  
1: Mask data0 when update clock </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Do_not_mask</name>
                  <description>Do not mask data0 when update clock</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mask</name>
                  <description>Mask data0 when update clock</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CCLK_CTRL</name>
              <description>Card Clock Output Control  
0: Card clock always on 
1: Turn off card clock when FSM in IDLE state </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Card</name>
                  <description>Card clock always on</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Turn</name>
                  <description>Turn off card clock when FSM in IDLE state</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CCLK_ENB</name>
              <description>Card Clock Enable  
0: Card Clock off 
1: Card Clock on </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Card_Clock_off</name>
                  <description>Card Clock off</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Card_Clock_on</name>
                  <description>Card Clock on</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CCLK_DIV</name>
              <description>Card Clock Divider n: Source clock is divided by 2*n.(n=0~255) </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CMD</name>
          <description>SMHC_CMD</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x9F20FFFF</resetMask>
          <fields>
            <field>
              <name>CMD_LOAD</name>
              <description>Start Command. This bit is automatically cleared when current command is sent. If there is no any response error happened, a command complete interrupt bit (CMD_OVER) will be set in interrupt register. You should not write any other command before this bit is cleared, or a command busy interrupt bit (CMD_BUSY) will be set in interrupt register. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VOL_SW</name>
              <description>Voltage Switch  
0: Normal command 
1: Voltage switch command, set for CMD11 only </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Voltage</name>
                  <description>Voltage switch command, set for CMD11 only</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BOOT_ABT</name>
              <description>Boot Abort Setting this bit will terminate the boot operation. </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EXP_BOOT_ACK</name>
              <description>Expect Boot Acknowledge.  When Software sets this bit along in mandatory boot operation, the controller expects a boot acknowledge start pattern of 0-1-0 from the selected card. </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>BOOT_MOD</name>
              <description>Boot Mode  
00: Normal command 
01: Mandatory Boot operation 
10: Alternate Boot operation 
11: Reserved </description>
              <bitRange>[25:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal command</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mandatory</name>
                  <description>Mandatory Boot operation</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Alternate</name>
                  <description>Alternate Boot operation</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PRG_CLK</name>
              <description>Change Clock  
0: Normal command 
1: Change Card Clock. When this bit is set, the controller will change clock domain and clock output. No command will be sent. </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Change</name>
                  <description>Change Card Clock. When this bit is set, the controller will change clock domain and clock output. No command will be sent.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SEND_INIT_SEQ</name>
              <description>Send Initialization  
0: Normal command sending 
1: Send initialization sequence before sending this command. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal command sending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send initialization sequence before sending this command.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP_ABT_CMD</name>
              <description>Stop Abort Command  
0: Normal command sending 
1: Send Stop or abort command to stop current data transfer in progress.(CMD12, CMD52 for writing I/O Abort  in SDIO CCCR) </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal command sending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send Stop or abort command to stop current data transfer in progress.(CMD12, CMD52 for writing I/O Abort  in SDIO CCCR)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>WAIT_PRE_OVER</name>
              <description>Wait Data Transfer Over  
0: Send command at once, do not care of data transferring 
1: Wait for data transfer completion before sending current command </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send command at once, do not care of data transferring</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Wait</name>
                  <description>Wait for data transfer completion before sending current command</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP_CMD_FLAG</name>
              <description>Send Stop CMD Automatically (CMD12)  
0: Do not send stop command at end of data transfer 
1: Send stop command automatically at end of data transfer </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Do_not_send</name>
                  <description>Do not send stop command at end of data transfer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send stop command automatically at end of data transfer</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANS_MODE</name>
              <description>Transfer Mode  
0: Block data transfer command 
1: Stream data transfer command </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Block_data</name>
                  <description>Block data transfer command</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Stream_data</name>
                  <description>Stream data transfer command</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TRANS_DIR</name>
              <description>Transfer Direction  
0: Read operation 
1: Write operation </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Read</name>
                  <description>Read operation</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Write</name>
                  <description>Write operation</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_TRANS</name>
              <description>Data Transfer  
0: Without data transfer 
1: With data transfer </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Without_data</name>
                  <description>Without data transfer</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>With_data</name>
                  <description>With data transfer</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHK_RESP_CRC</name>
              <description>Check Response CRC  
0: Do not check response CRC 
1: Check response CRC </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Do_not_check</name>
                  <description>Do not check response CRC</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Check</name>
                  <description>Check response CRC</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LONG_RESP</name>
              <description>Response Type  
0: Short Response (48-bit) 
1: Long Response (136-bit) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Short</name>
                  <description>Short Response (48-bit)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Long</name>
                  <description>Long Response (136-bit)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RESP_RCV</name>
              <description>Response Receive  
0: Command without Response 
1: Command with Response </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Command_without_Response</name>
                  <description>Command without Response</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Command_with_Response</name>
                  <description>Command with Response</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CMD_IDX</name>
              <description>CMD Index Command index value </description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CMDARG</name>
          <description>SMHC_CMDARG</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_ARG</name>
              <description>Command Argument </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CRC_STA_REG</name>
          <description>SMHC_CRC_STA_REG</description>
          <addressOffset>0x134</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>CRC_STA</name>
              <description>CRC Status CRC status from device in write operation   
010: Positive CRC status token  
101: Negative CRC status token </description>
              <bitRange>[2:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Positive</name>
                  <description>Positive CRC status token</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negative</name>
                  <description>Negative CRC status token</description>
                  <value>0b101</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CTRL</name>
          <description>SMHC_CTRL</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x100</resetValue>
          <resetMask>0x80001D37</resetMask>
          <fields>
            <field>
              <name>FIFO_AC_MOD</name>
              <description>FIFO Access Mode  
0: DMA bus 
1: AHB bus </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DMA</name>
                  <description>DMA bus</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>AHB</name>
                  <description>AHB bus</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIME_UNIT_CMD</name>
              <description>Time unit for command line Time unit used to calculate command line time out value defined in RTO_LMT.  
0: 1 card clock period 
1: 256 card clock period </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 card clock period</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_256</name>
                  <description>256 card clock period</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TIME_UNIT_DAT</name>
              <description>Time unit for data line Time unit used to calculate data line time out value defined in DTO_LMT .  
0: 1card clock period 
1: 256 card clock period </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1card</name>
                  <description>1card clock period</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_256</name>
                  <description>256 card clock period</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDR_MOD_SEL</name>
              <description>DDR Mode Select  
0: SDR mode  
1: DDR mode </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SDR_mode</name>
                  <description>SDR mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DDR_mode</name>
                  <description>DDR mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CD_DBC_ENB</name>
              <description>Card Detect (Data[3] status) De-bounce Enable  
0: Disable de-bounce 
1: Enable de-bounce </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable de-bounce</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable de-bounce</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_ENB</name>
              <description>DMA Global Enable  
0: Disable DMA to transfer data, using AHB bus 
1: Enable DMA to transfer data </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable DMA to transfer data, using AHB bus</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable DMA to transfer data</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>INT_ENB</name>
              <description>Global Interrupt Enable  
0: Disable interrupts 
1: Enable interrupts </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable interrupts</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable interrupts</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMA_RST</name>
              <description>DMA Reset </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIFO_RST</name>
              <description>FIFO Reset  
0: No change 
1: Reset FIFO  This bit is auto-cleared after completion of reset operation. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_change</name>
                  <description>No change</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reset</name>
                  <description>Reset FIFO  This bit is auto-cleared after completion of reset operation.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SOFT_RST</name>
              <description>Software Reset  
0: No change 
1: Reset SD/MMC controller  This bit is auto-cleared after completion of reset operation. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_change</name>
                  <description>No change</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reset</name>
                  <description>Reset SD/MMC controller  This bit is auto-cleared after completion of reset operation.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_CTYPE</name>
          <description>SMHC_CTYPE</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>CARD_WID</name>
              <description>Card Width  
00: 1-bit width 
01: 4-bit width 
1x: 8-bit width </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_bit</name>
                  <description>1-bit width</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4_bit</name>
                  <description>4-bit width</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bit</name>
                  <description>8-bit width</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DATA0_CRC_REG</name>
          <description>SMHC_DATA0_CRC_REG</description>
          <addressOffset>0x130</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT0_CRC</name>
              <description>Data[0] CRC CRC in data[0] from device.  In 8-bit DDR mode, the higher 16-bit indicates the CRC of even data, and the lower 16-bit indicates the CRC of odd data.  In 4-bit DDR mode,the higher 16-bit indicates the CRC of odd data, ,and the lower 16-bit indicates the CRC of even data. In SDR mode, the higher 16-bit indicates the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DATA1_CRC_REG</name>
          <description>SMHC_DATA1_CRC_REG</description>
          <addressOffset>0x12C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT1_CRC</name>
              <description>Data[1] CRC CRC in data[1] from device.  In 8-bit DDR mode, the higher 16-bit indicates the CRC of even data, and the lower 16-bit indicates the CRC of odd data.  In 4-bit DDR mode,the higher 16-bit indicates the CRC of odd data, ,and the lower 16-bit indicates the CRC of even data. In SDR mode, the higher 16-bit indicates the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DATA2_CRC_REG</name>
          <description>SMHC_DATA2_CRC_REG</description>
          <addressOffset>0x128</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT2_CRC</name>
              <description>Data[2] CRC CRC in data[2] from device.  In 8-bit DDR mode, the higher 16-bit indicates the CRC of even data, and the lower 16-bit indicates the CRC of odd data.  In 4-bit DDR mode,the higher 16-bit indicates the CRC of odd data, ,and the lower 16-bit indicates the CRC of even data. In SDR mode, the higher 16-bit indicates the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DATA3_CRC_REG</name>
          <description>SMHC_DATA3_CRC_REG</description>
          <addressOffset>0x124</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT3_CRC</name>
              <description>Data[3] CRC CRC in data[3] from device.  In 8-bit DDR mode, the higher 16-bit indicates the CRC of even data, and the lower 16-bit indicates the CRC of odd data.  In 4-bit DDR mode,the higher 16-bit indicates the CRC of odd data, ,and the lower 16-bit indicates the CRC of even data. In SDR mode, the higher 16-bit indicates the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DATA4_CRC_REG</name>
          <description>SMHC_DATA4_CRC_REG</description>
          <addressOffset>0x120</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT4_CRC</name>
              <description>Data[4] CRC CRC in data[4] from device.  In 8-bit DDR mode, the higher 16-bit indicates the CRC of even data, and the lower 16-bit indicates the CRC of odd data.  In 4-bit DDR mode,the higher 16-bit indicates the CRC of odd data, ,and the lower 16-bit indicates the CRC of even data. In SDR mode, the higher 16-bit indicates the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DATA5_CRC_REG</name>
          <description>SMHC_DATA5_CRC_REG</description>
          <addressOffset>0x11C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT5_CRC</name>
              <description>Data[5] CRC CRC in data[5] from device.  In 8-bit DDR mode, the higher 16-bit indicates the CRC of even data, and the lower 16-bit indicates the CRC of odd data.  In 4-bit DDR mode, it is not used. In SDR mode, the higher 16-bit indicates the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DATA6_CRC_REG</name>
          <description>SMHC_DATA6_CRC_REG</description>
          <addressOffset>0x118</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT6_CRC</name>
              <description>Data[6] CRC CRC in data[6] from device.  In 8-bit DDR mode, the higher 16-bit indicates the CRC of even data, and the lower 16-bit indicates the CRC of odd data.  In 4-bit DDR mode, it is not used. In SDR mode, the higher 16-bit indicates the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DATA7_CRC_REG</name>
          <description>SMHC_DATA7_CRC_REG</description>
          <addressOffset>0x114</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DAT7_CRC</name>
              <description>Data[7] CRC CRC in data[7] from device.  In 8-bit DDR mode, the higher 16-bit indicates the CRC of even data, and the lower 16-bit indicates the CRC of odd data.  In 4-bit DDR mode, it is not used. In SDR mode, the higher 16-bit indicates the CRC of all data. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DLBA_REG</name>
          <description>SMHC_DLBA_REG</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DES_BASE_ADDR</name>
              <description>Start of Descriptor List.  Contains the base address of the First Descriptor. The LSB bit[1:0] are ignored and taken as all-zero by the IDMAC internally. Hence these LSB bits are read-only. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DMAC_REG</name>
          <description>SMHC_DMAC_REG</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800007FF</resetMask>
          <fields>
            <field>
              <name>DES_LOAD_CTRL</name>
              <description>When DMAC fetches a descriptor, if the valid bit of a descriptor is not set, DMAC FSM will go to the suspend state. Setting this bit will make DMAC re-fetch descriptor again and do the transfer normally. </description>
              <bitRange>[31:31]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>PRG_BURST_LEN</name>
              <description>Programmable Burst Length.  These bits indicate the maximum number of beats to be performed in one IDMAC transaction. The IDMAC will always attempt to burst as specified in PBL each time it starts a Burst transfer on the host bus. The permissible values are 1, 4, 8, 16, 32, 64, 128 and 256. This value is the mirror of MSIZE of FIFOTH register. In order to change this value, write the required value to FIFOTH register. This is an encode value as follows.   
000: 1 transfers 
001: 4 transfers 
010: 8 transfers 
011: 16 transfers  Transfer unit is 32 bits. PBL is a read-only value. </description>
              <bitRange>[10:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 transfers</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4 transfers</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8 transfers</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 transfers  Transfer unit is 32 bits. PBL is a read-only value.</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IDMAC_ENB</name>
              <description>IDMAC Enable.  When set, the IDMAC is enabled. DE is read/write. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DES_SKIP_LEN</name>
              <description>Descriptor Skip Length.  Specifies the number of Word to skip between two unchained descriptors. This is applicable only for dual buffer structure.  Default value is set to 4 DWORD. </description>
              <bitRange>[6:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FIX_BUST_CTRL</name>
              <description>Fixed Burst.  Controls whether the AHB Master interface performs fixed burst transfers or not. When set, the AHB will use only SINGLE, INCR4, INCR8 during start of normal burst transfers. When reset, the AHB will use SINGLE and INCR burst transfer operations.  </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>IDMAC_RST</name>
              <description>DMA Reset.  When set, the DMA Controller resets all its internal registers. SWR is read/write. It is automatically cleared after 1 clock cycle. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DRV_DL_REG</name>
          <description>SMHC_DRV_DL_REG</description>
          <addressOffset>0x140</addressOffset>
          <resetValue>0x10000</resetValue>
          <resetMask>0x30000</resetMask>
          <fields>
            <field>
              <name>DAT_DRV_PH_SEL</name>
              <description>Data Drive Phase Select  
0: Drive phase offset is 90 
1: Drive phase select is 180   In DDR mode, only 90 phase offset is valid. </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Drive_phase_offset</name>
                  <description>Drive phase offset is 90</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Drive_phase_select</name>
                  <description>Drive phase select is 180   In DDR mode, only 90 phase offset is valid.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CMD_DRV_PH_SEL</name>
              <description>Command Drive Phase Select  
0: Drive phase offset is 90 
1: Drive phase select is 180 </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Drive_phase_offset</name>
                  <description>Drive phase offset is 90</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Drive_phase_select</name>
                  <description>Drive phase select is 180</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DST_REG</name>
          <description>SMHC_DST_REG</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FF37</resetMask>
          <fields>
            <field>
              <name>DMAC_FSM_STA</name>
              <description>DMAC FSM Present State.   
0000: DMA_IDLE  
0001: DMA_SUSPEND  
0010: DESC_RD  
0011: DESC_CHK  
0100: DMA_RD_REQ_WAIT  
0101: DMA_WR_REQ_WAIT  
0110: DMA_RD  
0111: DMA_WR  
1000: DESC_CLOSE  </description>
              <bitRange>[16:13]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>DMA_IDLE</name>
                  <description>DMA_IDLE</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMA_SUSPEND</name>
                  <description>DMA_SUSPEND</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DESC_RD</name>
                  <description>DESC_RD</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DESC_CHK</name>
                  <description>DESC_CHK</description>
                  <value>0b0011</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMA_RD_REQ_WAIT</name>
                  <description>DMA_RD_REQ_WAIT</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMA_WR_REQ_WAIT</name>
                  <description>DMA_WR_REQ_WAIT</description>
                  <value>0b0101</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMA_RD</name>
                  <description>DMA_RD</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DMA_WR</name>
                  <description>DMA_WR</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>DESC_CLOSE</name>
                  <description>DESC_CLOSE</description>
                  <value>0b1000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAC_ERR_STA</name>
              <description>Error Bits.  Indicates the type of error that caused a Bus Error. Valid only with Fatal Bus Error bit ( FATAL_BERR_INT ) set. This field does not generate an interrupt.   
001: Host Abort received during transmission  
010: Host Abort received during reception  Others: Reserved EB is read-only. </description>
              <bitRange>[12:10]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Host_Abort_received_during_transmission</name>
                  <description>Host Abort received during transmission</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Host_Abort_received_during</name>
                  <description>Host Abort received during reception</description>
                  <value>0b010</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ABN_INT_SUM</name>
              <description>Abnormal Interrupt Summary.   Logical OR of the following:  IDSTS[2]: Fatal Bus Interrupt  IDSTS[4]: DU bit Interrupt  IDSTS[5]: Card Error Summary Interrupt  Only unmasked bits affect this bit.  This is a sticky bit and must be cleared each time a corresponding bit that causes AIS to be set is cleared. Writing a 1 clears this bit. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>NOR_INT_SUM</name>
              <description>Normal Interrupt Summary.   Logical OR of the following:  IDSTS[0]: Transmit Interrupt  IDSTS[1]: Receive Interrupt  Only unmasked bits affect this bit.  This is a sticky bit and must be cleared each time a corresponding bit that causes NIS to be set is cleared. Writing a 1 clears this bit. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>ERR_FLAG_SUM</name>
              <description>Card Error Summary.  Indicates the status of the transaction to/from the card; also present in RINTSTS.   Indicates the logical OR of the following bits:  
EBE: End Bit Error  RTO: Response Timeout/Boot ACK Timeout  RCRC: Response CRC  SBE: Start Bit Error  DRTO: Data Read Timeout/BDS timeout  DCRC: Data CRC for Receive  RE: Response Error  Writing a 1 clears this bit. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DES_UNAVL_INT</name>
              <description>Descriptor Unavailable Interrupt.  This bit is set when the descriptor is unavailable due to OWN bit = 0 (DES0[31] =0). Writing a 1 clears this bit. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>FATAL_BERR_INT</name>
              <description>Fatal Bus Error Interrupt.  Indicates that a Bus Error occurred ( DMAC_ERR_STA ). When this bit is set, the DMA disables all its bus accesses. Writing a 1 clears this bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RX_INT</name>
              <description>Receive Interrupt.  Indicates the completion of data reception for a descriptor. Writing a 1  clears this bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TX_INT</name>
              <description>Transmit Interrupt.  Indicates that data transmission is finished for a descriptor. Writing a 1  clears this bit. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_DS_DL_REG</name>
          <description>SMHC_DS_DL_REG</description>
          <addressOffset>0x148</addressOffset>
          <resetValue>0x2000</resetValue>
          <resetMask>0xFFBF</resetMask>
          <fields>
            <field>
              <name>DS_DL_CAL_START</name>
              <description>Data Strobe Delay Calibration Start When set, start sample delay chain calibration. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DS_DL_CAL_DONE</name>
              <description>Data Strobe Delay Calibration Done When set, it means that sample delay chain calibration is done and the result of calibration is shown in DS_DL . </description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DS_DL</name>
              <description>Data Strobe Delay It indicates the number of delay cells corresponding to current card clock. The delay time generated by these delay cells is equal to the cycle of SMHC s clock nearly.  This bit is valid only when SAMP_DL_CAL_DONE is set.  </description>
              <bitRange>[13:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>DS_DL_SW_EN</name>
              <description>Sample Delay Software Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DS_DL_SW</name>
              <description>Data Strobe Delay Software </description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_EDSD_REG</name>
          <description>SMHC_EDSD_REG</description>
          <addressOffset>0x10C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000001</resetMask>
          <fields>
            <field>
              <name>HS400_MD_EN</name>
              <description>HS400_MD_EN(for SMHC2 only) HS400 Mode Enable   
0: Disable  
1: Enable   It is required to set HS400_MD_EN  to '1' before initiating any data transfer CMD in HS400 mode. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable   It is required to set HS400_MD_EN  to '1' before initiating any data transfer CMD in HS400 mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALF_START_BIT</name>
              <description>Control for start bit detection mechanism inside mstorage based on duration of start bit.   For eMMC 4.5, start bit can be:  
0: Full cycle   
1: Less than one full cycle   Set HALF_START_BIT  to 1 for eMMC 4.5 and above; set to 0 for SD applications. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Full_cycle</name>
                  <description>Full cycle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Less</name>
                  <description>Less than one full cycle   Set HALF_START_BIT  to 1 for eMMC 4.5 and above; set to 0 for SD applications.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_FIFOTH</name>
          <description>SMHC_FIFOTH</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0xF0000</resetValue>
          <resetMask>0x70FF00FF</resetMask>
          <fields>
            <field>
              <name>BSIZE_OF_TRANS</name>
              <description>Burst size of multiple transaction  
000: 1 transfers 
001: 4 
010: 8 
011: 16 (only SMHC2 support) Others: Reserved  Should be programmed same as DMA controller multiple transaction size. The units for transfers are the DWORD. A single transfer would be signaled based on this value. Value should be sub-multiple of (RX_TL + 1) and (FIFO_DEPTH - TX_TL) Recommended: MSize = 16, TX_TL = 240, RX_TL = 15(SMHC2) </description>
              <bitRange>[30:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 transfers</description>
                  <value>0b000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16 (only SMHC2 support) Others: Reserved  Should be programmed same as DMA controller multiple transaction size. The units for transfers are the DWORD. A single transfer would be signaled based on this value. Value should be sub-multiple of (RX_TL + 1) and (FIFO_DEPTH - TX_TL) Recommended: MSize = 16, TX_TL = 240, RX_TL = 15(SMHC2)</description>
                  <value>0b011</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_TL</name>
              <description>RX Trigger Level  0x0~0xFE: RX Trigger Level is 0~254 
0xFF: Reserved  FIFO threshold when FIFO request host to receive data from FIFO. When FIFO data level is greater than this value, DMA request is raised if DMA enabled, or RX interrupt bit is set if interrupt enabled. At the end of packet, if the last transfer is less than this level, the value is ignored and relative request will be raised as usual. Recommended: 15 (means greater than 15)(SMHC2) </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Reserved</name>
                  <description>Reserved  FIFO threshold when FIFO request host to receive data from FIFO. When FIFO data level is greater than this value, DMA request is raised if DMA enabled, or RX interrupt bit is set if interrupt enabled. At the end of packet, if the last transfer is less than this level, the value is ignored and relative request will be raised as usual. Recommended: 15 (means greater than 15)(SMHC2)</description>
                  <value>0xFF</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_TL</name>
              <description>TX Trigger Level  0x1~0xFF: TX Trigger Level is 1~255 
0x0: No trigger  FIFO threshold when FIFO requests host to transmit data to FIFO. When FIFO data level is less than or equal to this value, DMA TX request is raised if DMA enabled, or TX request interrupt bit is set if interrupt enabled. At the end of packet, if the last transfer is less than this level, the value is ignored and relative request will be raised as usual. Recommended: 240(means less than or equal to 240)(SMHC2) </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_trigger</name>
                  <description>No trigger  FIFO threshold when FIFO requests host to transmit data to FIFO. When FIFO data level is less than or equal to this value, DMA TX request is raised if DMA enabled, or TX request interrupt bit is set if interrupt enabled. At the end of packet, if the last transfer is less than this level, the value is ignored and relative request will be raised as usual. Recommended: 240(means less than or equal to 240)(SMHC2)</description>
                  <value>0x0</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_FIFO_REG</name>
          <description>SMHC_FIFO_REG</description>
          <addressOffset>0x200</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TX/RX_FIFO</name>
              <description>Data FIFO </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_FUNS</name>
          <description>FIFO Function Select Register</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>ABT_RDATA</name>
              <description>Abort Read Data  
0: Ignored 
1: After suspend command is issued during read-transfer, software polls card to find when suspend happened. Once suspend occurs, software sets the bit to reset data state-machine, which is waiting for next block of data.  Used in SDIO card suspends sequence. This bit is auto-cleared once controller reset to idle state. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignored</name>
                  <description>Ignored</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>After</name>
                  <description>After suspend command is issued during read-transfer, software polls card to find when suspend happened. Once suspend occurs, software sets the bit to reset data state-machine, which is waiting for next block of data.  Used in SDIO card suspends sequence. This bit is auto-cleared once controller reset to idle state.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>READ_WAIT</name>
              <description>Read Wait  
0: Clear SDIO read wait 
1: Assert SDIO read wait </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Clear</name>
                  <description>Clear SDIO read wait</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Assert</name>
                  <description>Assert SDIO read wait</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HOST_SEND_MMC_IRQRESQ</name>
              <description>Host Send MMC IRQ Response  
0: Ignored 
1: Send auto IRQ response  When host is waiting MMC card interrupt response, setting this bit will make controller cancel wait state and return to idle state, at which time, controller will receive IRQ response sent by itself. This bit is auto-cleared after response is sent. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Ignored</name>
                  <description>Ignored</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Send</name>
                  <description>Send auto IRQ response  When host is waiting MMC card interrupt response, setting this bit will make controller cancel wait state and return to idle state, at which time, controller will receive IRQ response sent by itself. This bit is auto-cleared after response is sent.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_HWRST</name>
          <description>Hardware Reset Register</description>
          <addressOffset>0x78</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>HW_RST</name>
              <description>0: Reset  
1: Active mode   These bits cause the cards to enter pre-idle state, which requires them to be re-initialized. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Reset</name>
                  <description>Reset</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Active_mode</name>
                  <description>Active mode   These bits cause the cards to enter pre-idle state, which requires them to be re-initialized.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_IDIE_REG</name>
          <description>SMHC_IDIE_REG</description>
          <addressOffset>0x8C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x337</resetMask>
          <fields>
            <field>
              <name>ABN_INT_ENB</name>
              <description>Abnormal Interrupt Summary Enable.  When set, an abnormal interrupt is enabled.   This bit enables the following bits:  IDINTEN[2]: Fatal Bus Error Interrupt  IDINTEN[4]: DU Interrupt  IDINTEN[5]: Card Error Summary Interrupt </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>NOR_INT_ENB</name>
              <description>Normal Interrupt Summary Enable.  When set, a normal interrupt is enabled. When reset, a normal interrupt is disabled.   This bit enables the following bits:  IDINTEN[0]: Transmit Interrupt  IDINTEN[1]: Receive Interrupt </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ERR_SUM_INT_ENB</name>
              <description>Card Error Summary Interrupt Enable.  When set, it enables the Card Interrupt summary. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DES_UNAVL_INT_ENB</name>
              <description>Descriptor Unavailable Interrupt.  When set along with Abnormal Interrupt Summary Enable, the DU interrupt is enabled. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FERR_INT_ENB</name>
              <description>Fatal Bus Error Enable.  When set with Abnormal Interrupt Summary Enable, the Fatal Bus Error Interrupt is enabled. When reset, Fatal Bus Error Enable Interrupt is disabled. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_INT_ENB</name>
              <description>Receive Interrupt Enable.  When set with Normal Interrupt Summary Enable, Receive Interrupt is enabled. When reset, Receive Interrupt is disabled. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_INT_ENB</name>
              <description>Transmit Interrupt Enable.  When set with Normal Interrupt Summary Enable, Transmit Interrupt is enabled. When reset, Transmit Interrupt is disabled. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_INTMASK</name>
          <description>SMHC_INTMASK</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC001FFFE</resetMask>
          <fields>
            <field>
              <name>CARD_REMOVAL_INT_EN</name>
              <description>Card Removed Interrupt Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CARD_INSERT_INT_EN</name>
              <description>Card Inserted Interrupt Enable </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_INT_EN</name>
              <description>SDIO Interrupt Enable </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DEE_INT_EN</name>
              <description>Data End-bit Error Interrupt Enable </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ACD_INT_EN</name>
              <description>Auto Command Done Interrupt Enable </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSE_BC_INT_EN</name>
              <description>Data Start Error Interrupt Enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CB_IW_INT_EN</name>
              <description>Command Busy and Illegal Write Interrupt Enable </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>FU_FO_INT_EN</name>
              <description>FIFO Underrun/Overflow Interrupt Enable </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DSTO_VSD_INT_EN</name>
              <description>Data Starvation Timeout/V1.8 Switch Done Interrupt Enable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTO_BDS_INT_EN</name>
              <description>Data Timeout/Boot Data Start Interrupt Enable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTO_BACK_INT_EN</name>
              <description>Response Timeout/Boot ACK Received Interrupt Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DCE_INT_EN</name>
              <description>Data CRC Error Interrupt Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RCE_INT_EN</name>
              <description>Response CRC Error Interrupt Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DRR_INT_EN</name>
              <description>Data Receive Request Interrupt Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTR_INT_EN</name>
              <description>Data Transmit Request Interrupt Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>DTC_INT_EN</name>
              <description>Data Transfer Complete Interrupt Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CC_INT_EN</name>
              <description>Command Complete Interrupt Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RE_INT_EN</name>
              <description>Response Error Interrupt Enable   </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_MINTSTS</name>
          <description>SMHC_MINTSTS</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC001FFFE</resetMask>
          <fields>
            <field>
              <name>M_CARD_REMOVAL_INT</name>
              <description>Card Removed </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_CARD_INSERT</name>
              <description>Card Inserted </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_SDIO_INT</name>
              <description>SDIO Interrupt </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DEE_INT</name>
              <description>Data End-bit Error When set during receiving data, it means that host controller does not receive valid data end bit. When set during transmitting data, it means that host controller does not receive CRC status taken or received CRC status taken is negative. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_ACD_INT</name>
              <description>Auto Command Done When set, it means auto stop command(CMD12) completed. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DSE_BC_INT</name>
              <description>Data Start Error When set during receiving data, it means that host controller found a error start bit. When set during transmitting data, it means that busy signal is cleared. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_CB_IW_INT</name>
              <description>Command Busy and Illegal Write </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_FU_FO_INT</name>
              <description>FIFO Underrun/Overflow </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DSTO_VSD_INT</name>
              <description>Data Starvation Timeout/V1.8 Switch Done </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DTO_BDS_INT</name>
              <description>Data Timeout/Boot Data Start </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RTO_BACK_INT</name>
              <description>Response Timeout/Boot ACK Received </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DCE_INT</name>
              <description>Data CRC Error When set during receiving data, it means that the received data have data CRC error. When set during transmitting data, it means that the received CRC status taken is negative. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RCE_INT</name>
              <description>Response CRC Error </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DRR_INT</name>
              <description>Data Receive Request When set, it means that there are enough data in FIFO during receiving data. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DTR_INT</name>
              <description>Data Transmit Request When set, it means that there is enough space in FIFO during transmitting data. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_DTC_INT</name>
              <description>Data Transfer Complete </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_CC_INT</name>
              <description>Command Complete </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_RE_INT</name>
              <description>Response Error (no response or response CRC error) When set, Transmit Bit error or End Bit error or CMD Index error may occur. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_NTSR_REG</name>
          <description>SMHC_NTSR_REG</description>
          <addressOffset>0x5C</addressOffset>
          <resetValue>0x81710000</resetValue>
          <resetMask>0x81710330</resetMask>
          <fields>
            <field>
              <name>MODE_SELEC</name>
              <description>0: Old mode of Sample/Output Timing 
1: New mode of Sample/Output Timing </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Old_mode</name>
                  <description>Old mode of Sample/Output Timing</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>New_mode</name>
                  <description>New mode of Sample/Output Timing</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CMD_DAT_RX_PHASE_CLR</name>
              <description>During update clock , command and data RX phase clear  
0: Disable 
1: Enable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAT_CRC_STATUS_RX_PHASE_CLR</name>
              <description>Before receive CRC status, data RX phase clear  
0: Disable 
1: Enable </description>
              <bitRange>[22:22]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAT_TRANS_RX_PHASE_CLR</name>
              <description>Before transfer data , data RX phase clear  
0: Disable 
1: Enable </description>
              <bitRange>[21:21]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAT_RECV_RX_PHASE_CLR</name>
              <description>Before receive data , data RX phase clear  
0: Disable 
1: Enable </description>
              <bitRange>[20:20]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CMD_SEND_RX_PHASE_CLR</name>
              <description>Before send command, command RX phase clear  
0: Disable 
1: Enable </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DAT_SAMPLE_TIMING_PHASE_RX</name>
              <description>DAT_SAMPLE_TIMING_PHASE(RX)  
00: Sample timing phase offset 90 
01: Sample timing phase offset 180 
10: Sample timing phase offset 270 
11: Ignore </description>
              <bitRange>[9:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CMD_SAMPLE_TIMING_PHASE_RX</name>
              <description>CMD_SAMPLE_TIMING_PHASE(RX)  
00: Sample timing phase offset 90 
01: Sample timing phase offset 180 
10: Sample timing phase offset 270 
11: Ignore </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RESP0</name>
          <description>Response 0 Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_RESP0</name>
              <description>Response 0 Bit[31:0] of response </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RESP1</name>
          <description>Response 1 Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_RESP1</name>
              <description>Response 1 Bit[63:31] of response </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RESP2</name>
          <description>Response 2 Register</description>
          <addressOffset>0x28</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_RESP2</name>
              <description>Response 2 Bit[95:64] of response </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RESP3</name>
          <description>Response 3 Register</description>
          <addressOffset>0x2C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>CMD_RESP3</name>
              <description>Response 3 Bit[127:96] of response </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RESP_CRC_REG</name>
          <description>SMHC_RESP_CRC_REG</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RESP_CRC</name>
              <description>Response CRC Response CRC from device. </description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_RINTSTS</name>
          <description>SMHC_RINTSTS</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC001FFFE</resetMask>
          <fields>
            <field>
              <name>CARD_REMOVAL</name>
              <description>Card Removed This is write-1-to-clear bit. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CARD_INSERT</name>
              <description>Card Inserted This is write-1-to-clear bit. </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>SDIOI_INT</name>
              <description>SDIO Interrupt This is write-1-to-clear bit. </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DEE</name>
              <description>Data End-bit Error When set during receiving data, it means that host controller does not receive valid data end bit. When set during transmitting data, it means that host controller does not receive CRC status taken. This is write-1-to-clear bit. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>ACD</name>
              <description>Auto Command Done When set, it means auto stop command(CMD12) completed. This is write-1-to-clear bit. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DSE_BC</name>
              <description>Data Start Error When set during receiving data, it means that host controller found a error start bit. When set during transmitting data, it means that busy signal is cleared. This is write-1-to-clear bit. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CB_IW</name>
              <description>Command Busy and Illegal Write This is write-1-to-clear bit. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>FU_FO</name>
              <description>FIFO Underrun/Overflow This is write-1-to-clear bit. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DSTO_VSD</name>
              <description>Data Starvation Timeout/V1.8 Switch Done This is write-1-to-clear bit. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DTO_BDS</name>
              <description>Data Timeout/Boot Data Start This is write-1-to-clear bit. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RTO_BACK</name>
              <description>Response Timeout/Boot ACK Received This is write-1-to-clear bit. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DCE</name>
              <description>Data CRC Error When set during receiving data, it means that the received data have data CRC error. When set during transmitting data, it means that the received CRC status taken is negative. This is write-1-to-clear bit. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RCE</name>
              <description>Response CRC Error This is write-1-to-clear bit. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DRR</name>
              <description>Data Receive Request When set, it means that there are enough data in FIFO during receiving data. This is write-1-to-clear bit. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Transmit Request When set, it means that there is enough space in FIFO during transmitting data. This is write-1-to-clear bit. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>DTC</name>
              <description>Data Transfer Complete This is write-1-to-clear bit. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>CC</name>
              <description>Command Complete This is write-1-to-clear bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>RE</name>
              <description>Response Error (no response or response CRC error) When set, Transmit Bit error or End Bit error or CMD Index error may occur. This is write-1-to-clear bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_SAMP_DL_REG</name>
          <description>SMHC_SAMP_DL_REG</description>
          <addressOffset>0x144</addressOffset>
          <resetValue>0x2000</resetValue>
          <resetMask>0xFFBF</resetMask>
          <fields>
            <field>
              <name>SAMP_DL_CAL_START</name>
              <description>Sample Delay Calibration Start When set, start sample delay chain calibration. </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAMP_DL_CAL_DONE</name>
              <description>Sample Delay Calibration Done When set, it means that sample delay chain calibration is done and the result of calibration is shown in SAMP_DL . </description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SAMP_DL</name>
              <description>Sample Delay It indicates the number of delay cells corresponding to current card clock. The delay time generated by these delay cells is equal to the cycle of card clock nearly.  Generally, it is necessary to do drive delay calibration when card clock is changed. This bit is valid only when SAMP_DL_CAL_DONE is set.  </description>
              <bitRange>[13:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>SAMP_DL_SW_EN</name>
              <description>Sample Delay Software Enable When set, enable sample delay specified at SAMP_DL_SW . </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAMP_DL_SW</name>
              <description>Sample Delay Software The relative delay between clock line and command line, data lines. It can be determined according to the value of SAMP_DL , the cycle of card clock and device s input timing requirement. </description>
              <bitRange>[5:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_STATUS</name>
          <description>SMHC_STATUS</description>
          <addressOffset>0x3C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x83FFFFFF</resetMask>
          <fields>
            <field>
              <name>DMA_REQ</name>
              <description>DMA Request DMA request signal state </description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FIFO_LEVEL</name>
              <description>FIFO Level Number of filled locations in FIFO </description>
              <bitRange>[25:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RESP_IDX</name>
              <description>Response Index Index of previous response, including any auto-stop sent by controller </description>
              <bitRange>[16:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FSM_BUSY</name>
              <description>Data FSM Busy Data transmit or receive state-machine is busy </description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>CARD_BUSY</name>
              <description>Card Data Busy Inverted version of DATA[0]  
0: Card data not busy 
1: Card data busy </description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Card_data_not_busy</name>
                  <description>Card data not busy</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Card_data_busy</name>
                  <description>Card data busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CARD_PRESENT</name>
              <description>Data[3] Status Level of DATA[3]; checks whether card is present  
0: Card not present 
1: Card present </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Card_not_present</name>
                  <description>Card not present</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Card_present</name>
                  <description>Card present</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FSM_STA</name>
              <description>Command FSM States  
0000: Idle 
0001: Send init sequence 
0010: TX CMD start bit 
0011: TX CMD TX bit 
0100: TX CMD index + argument 
0101: TX CMD CRC7 
0110: TX CMD end bit 
0111: RX response start bit 
1000: RX response IRQ response 
1001: RX response TX bit 
1010: RX response CMD index 
1011: RX response data 
1100: RX response CRC7 
1101: RX response end bit 
1110: CMD path wait NCC 
1111: Wait; CMD-to-response turnaround </description>
              <bitRange>[7:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FIFO_FULL</name>
              <description>FIFO Full   
0: FIFO not full 
1: FIFO full </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_full</name>
                  <description>FIFO full</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_EMPTY</name>
              <description>FIFO Empty  
0: FIFO not empty 
1: FIFO empty </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO</name>
                  <description>FIFO not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_TX_LEVEL</name>
              <description>FIFO TX Water Level Flag  
0: FIFO didn t reach transmit trigger level 
1: FIFO reached transmit trigger level </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_didn</name>
                  <description>FIFO didn t reach transmit trigger level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_reached</name>
                  <description>FIFO reached transmit trigger level</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FIFO_RX_LEVEL</name>
              <description>FIFO TX Water Level Flag  
0: FIFO didn t reach receive trigger level 
1: FIFO reached receive trigger level </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_didn</name>
                  <description>FIFO didn t reach receive trigger level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_reached</name>
                  <description>FIFO reached receive trigger level</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_TBC_REG0</name>
          <description>SMHC_TBC_REG0</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TBC0</name>
              <description>Transferred Count 0 Number of bytes transferred between card and internal FIFO. The register should be accessed in full to avoid read-coherency problems and read only after data transfer completes. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_TBC_REG1</name>
          <description>SMHC_TBC_REG1</description>
          <addressOffset>0x4C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TBC1</name>
              <description>Transferred Count 1 Number of bytes transferred between card and internal FIFO. The register should be accessed in full to avoid read-coherency problems and read only after data transfer completes. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_THLD_REG</name>
          <description>SMHC_THLD_REG</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0007</resetMask>
          <fields>
            <field>
              <name>CARD_RD_THLD</name>
              <description>Card Read Threshold Size </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CARD_WR_THLD_ENB</name>
              <description>(only for SMHC2 ) Card Write Threshold Enable(HS400)   
0: Card Write Threshold Disable  
1: Card Write Threshold Enable   Host controller initiates write transfer only if card threshold amount of data is available in transmit FIFO. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Card_Write_Threshold_Disable</name>
                  <description>Card Write Threshold Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Card_Write_Threshold_Enable</name>
                  <description>Card Write Threshold Enable   Host controller initiates write transfer only if card threshold amount of data is available in transmit FIFO.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BCIG</name>
              <description>(only for SMHC2) Busy Clear Interrupt Generation   
0: Busy Clear Interrupt Disable  
1: Busy Clear Interrupt Enable   The application can disable this feature if it does not want to wait for a Busy Clear Interrupt.  </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Busy_Clear_Interrupt_Disable</name>
                  <description>Busy Clear Interrupt Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy_Clear_Interrupt_Enable</name>
                  <description>Busy Clear Interrupt Enable   The application can disable this feature if it does not want to wait for a Busy Clear Interrupt.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CARD_RD_THLD_ENB</name>
              <description>Card Read Threshold Enable  
0: Card Read Threshold Disable 
1: Card Read Threshold Enable  Host controller initiates Read Transfer only if CARD_RD_THLD  amount of space is available in receive FIFO. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Card_Read_Threshold_Disable</name>
                  <description>Card Read Threshold Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Card_Read_Threshold_Enable</name>
                  <description>Card Read Threshold Enable  Host controller initiates Read Transfer only if CARD_RD_THLD  amount of space is available in receive FIFO.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SMHC_TMOUT</name>
          <description>SMHC_TMOUT</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0xFFFFFF40</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>DTO_LMT</name>
              <description>Data Timeout Limit </description>
              <bitRange>[31:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RTO_LMT</name>
              <description>Response Timeout Limit </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="SMHC0">
      <name>SMHC1</name>
      <description>SMHC1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C10000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="SMHC0">
      <name>SMHC2</name>
      <description>SMHC2</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C11000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>SPC</name>
      <description>SPC</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C23400</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>SPC_DECPORT0_CLR_REG</name>
          <description>SPC Decode Port0 Clear Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>CLR_DEC_PROT0_OUT</name>
              <description>Clears the corresponding decode protection output.  
0: No effect 
1: Set decode region to secure.  There is one bit of the register for each protection output (See the SPC Configuration Table in Table 4-7 for detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPC_DECPORT0_SET_REG</name>
          <description>SPC Decode Port0 Set Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SET_DEC_PORT0_OUT</name>
              <description>Sets the corresponding decode protection output.  
0: No effect 
1: Set decode region to non-secure.  There is one bit of the register for each protection output (See the SPC Configuration Table in Table 4-7 for detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPC_DECPORT0_STA_REG</name>
          <description>SPC Decode Port0 Status Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>STA_DEC_PROT0_OUT</name>
              <description>Shows the status of the decode protection output  
0: Decode region corresponding to the bit is secure 
1: Decode region corresponding to the bit is non-secure.  There is one bit of the register for each protection output (See the SPC Configuration Table in Table 4-7 for detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPC_DECPORT1_CLR_REG</name>
          <description>SPC Decode Port1 Clear Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>CLR_DEC_PROT1_OUT</name>
              <description>Clears the corresponding decode protection output.  
0: No effect 
1: Set decode region to secure.  There is one bit of the register for each protection output (See the SPC Configuration Table in Table 4-7 for detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPC_DECPORT1_SET_REG</name>
          <description>SPC Decode Port1 Set Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SET_DEC_PORT1_OUT</name>
              <description>Sets the corresponding decode protection output.  
0: No effect 
1: Set decode region to non-secure.  There is one bit of the register for each protection output (See the SPC Configuration Table in Table 4-7 for detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPC_DECPORT1_STA_REG</name>
          <description>SPC Decode Port1 Status Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>STA_DEC_PROT1_OUT</name>
              <description>Shows the status of the decode protection output.  
0: Decode region corresponding to the bit is secure 
1: Decode region corresponding to the bit is non-secure.  There is one bit of the register for each protection output (See the SPC Configuration Table in Table 4-7 for detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPC_DECPORT2_CLR_REG</name>
          <description>SPC Decode Port2 Clear Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>CLR_DEC_PROT2_OUT</name>
              <description>Clears the corresponding decode protection output.  
0: No effect 
1: Set decode region to secure.  There is one bit of the register for each protection output (See the SPC Configuration Table in Table 4-7 for detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPC_DECPORT2_SET_REG</name>
          <description>SPC Decode Port2 Set Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SET_DEC_PORT2_OUT</name>
              <description>Sets the corresponding decode protection output.  
0: No effect 
1: Set decode region to non-secure.  There is one bit of the register for each protection output (See the SPC Configuration Table in Table 4-7 for detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPC_DECPORT2_STA_REG</name>
          <description>SPC Decode Port2 Status Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>STA_DEC_PROT2_OUT</name>
              <description>Show the status of the decode protection output.  
0: Decode region corresponding to the bit is secure 
1: Decode region corresponding to the bit is non-secure.  There is one bit of the register for each protection output (See the SPC Configuration Table in Table 4-7 for detail). </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SPINLOCK</name>
      <description>SPINLOCK</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C18000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <dim>32</dim>
          <dimIncrement>4</dimIncrement>
          <name>SPINLOCKN_LOCK_REG[%s]</name>
          <description>SPINLOCKN_LOCK_REG[%s]</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>TAKEN</name>
              <description>Lock State.  Read 0x0: The lock was previously Not Taken (free).The requester is granted the lock. Write 0x0: Set the lock to Not Taken (free). Read 0x1: The lock was previously Taken. The requester is not granted the lock and must retry. Write 0x1: No update to the lock value. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPINLOCK_STATUS_REG</name>
          <description>Spinlock Status Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>LOCK_REG_STATUS__31</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__30</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[30:30]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__29</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[29:29]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__28</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[28:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__27</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[27:27]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__26</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[26:26]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__25</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[25:25]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__24</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[24:24]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__23</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[23:23]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__22</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[22:22]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__21</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[21:21]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__20</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[20:20]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__19</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[19:19]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__18</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[18:18]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__17</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[17:17]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__16</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[16:16]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__15</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__14</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[14:14]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__13</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[13:13]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__12</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[12:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__11</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[11:11]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__10</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[10:10]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__9</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[9:9]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__8</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__7</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__6</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__5</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__4</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__3</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__2</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__1</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>LOCK_REG_STATUS__0</name>
              <description>SpinLock[i] status (i=0~31) 0: The Spinlock is free 1: The Spinlock is taken.</description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPINLOCK_SYSTATUS_REG</name>
          <description>Spinlock System Status Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x10000000</resetValue>
          <resetMask>0x30000100</resetMask>
          <fields>
            <field>
              <name>LOCKS_NUM</name>
              <description>Number of lock registers implemented.  
00: This instance has 32 lock registers. 
01: This instance has 64 lock registers. 
10: This instance has 128 lock registers. 
11: This instance has 256 lock registers. </description>
              <bitRange>[29:28]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>This_instance_has_32</name>
                  <description>This instance has 32 lock registers.</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>This_instance_has_64</name>
                  <description>This instance has 64 lock registers.</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>This_instance_has_128</name>
                  <description>This instance has 128 lock registers.</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>This_instance_has_256</name>
                  <description>This instance has 256 lock registers.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IU0</name>
              <description>In-Use flag0, covering lock register0-31.  
0: All lock register 0-31 are in the NotTaken state. 
1: At least one of the lock register 0-31 is in the Taken state. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>All</name>
                  <description>All lock register 0-31 are in the NotTaken state.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>At</name>
                  <description>At least one of the lock register 0-31 is in the Taken state.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SPI0</name>
      <description>SPI0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C68000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>SPI_BC</name>
          <description>SPI_BC</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>MBC</name>
              <description>Master Burst Counter In master mode, this field specifies the total burst number.  
0: 0 burst 
1: 1 burst ...  N: N bursts </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_BCC</name>
          <description>SPI Burst Control Register</description>
          <addressOffset>0x38</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFFFFFF</resetMask>
          <fields>
            <field>
              <name>DRM</name>
              <description>Master Dual Mode RX Enable  
0: RX use single-bit mode 
1: RX use dual mode  Note: Can not be written when XCH=1. </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_use_single_bit</name>
                  <description>RX use single-bit mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_use_dual</name>
                  <description>RX use dual mode  Note: Can not be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DBC</name>
              <description>Master Dummy Burst Counter In master mode, this field specifies the burst number that should be sent before receive in dual SPI mode. The device does not care the data.  
0: 0 burst 
1: 1 burst ...  N: N bursts  Note: Can not be written when XCH=1. </description>
              <bitRange>[27:24]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>STC</name>
              <description>Master Single Mode Transmit Counter In master mode, this field specifies the burst number that should be sent in single mode before automatically sending dummy burst. This is the first transmit counter in all bursts.  
0: 0 burst 
1: 1 burst ...  N: N bursts  Note: Can not be written when XCH=1. </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_CCTL</name>
          <description>SPI_CCTL</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x2</resetValue>
          <resetMask>0x1FFF</resetMask>
          <fields>
            <field>
              <name>DRS</name>
              <description>Divide Rate Select (Master Mode Only)  
0: Select Clock Divide Rate 1 
1: Select Clock Divide Rate 2 </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select_Clock_Divide_Rate_1</name>
                  <description>Select Clock Divide Rate 1</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select_Clock_Divide_Rate_2</name>
                  <description>Select Clock Divide Rate 2</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CDR1</name>
              <description>Clock Divide Rate 1 (Master Mode Only) The SPI_SCLK is determined according to the following equation:    SPI_CLK = Source_CLK / 2^n. </description>
              <bitRange>[11:8]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CDR2</name>
              <description>Clock Divide Rate 2 (Master Mode Only) The SPI_SCLK is determined according to the following equation:    SPI_CLK = Source_CLK / (2*(n + 1)). </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_FCR</name>
          <description>SPI FIFO Control Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x400001</resetValue>
          <resetMask>0xC1FFC1FF</resetMask>
          <fields>
            <field>
              <name>TX_FIFO_RST</name>
              <description>TX FIFO Reset W iti g  to this it ill eset the o t ol po tio  of the TX FIFO a d auto ati all  lea to  he  o pleti g eset ope atio .  W iti g to  has o effe t. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TF_TEST</name>
              <description>TX Test Mode Enable  
0: Disable 
1: Enable  Note:  I  o al ode, TX FIFO a o l  e ead  SPI o t olle , iti g  to this bit will switch TX FIFO read and write function to AHB bus. This bit is used to test the TX FIFO. RF_TEST  and TF_TEST  can not be set at the same time. </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  Note:  I  o al ode, TX FIFO a o l  e ead  SPI o t olle , iti g  to this bit will switch TX FIFO read and write function to AHB bus. This bit is used to test the TX FIFO. RF_TEST  and TF_TEST  can not be set at the same time.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TF_DRQ_EN</name>
              <description>TX FIFO DMA Request Enable  
0: Disable 
1: Enable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_TRIG_LEVEL</name>
              <description>TX FIFO Empty Request Trigger Level </description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RF_RST</name>
              <description>RXFIFO Reset W iti g  to this it ill eset the o t ol po tio of the e ei e FIFO, a d auto ati all  lea to  he  o pleti g eset ope atio , ite  to this  bit has no effect.  </description>
              <bitRange>[15:15]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>RF_TEST</name>
              <description>RX Test Mode Enable  
0: Disable 
1: Enable  Note: In normal mode, RX FIFO can only be written by SPI controller, writing  to this it ill s it h RX FIFO ead a d ite fu tio to AHB us. This it is used to test the RX FIFO. RF_TEST and TF_TEST can not be set at the same time.  </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  Note: In normal mode, RX FIFO can only be written by SPI controller, writing  to this it ill s it h RX FIFO ead a d ite fu tio to AHB us. This it is used to test the RX FIFO. RF_TEST and TF_TEST can not be set at the same time.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RF_DRQ_EN</name>
              <description>RX FIFO DMA Request Enable  
0: Disable 
1: Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_TRIG_LEVEL</name>
              <description>RX FIFO Ready Request Trigger Level </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_FSR</name>
          <description>SPI FIFO Status Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF0FFFFFF</resetMask>
          <fields>
            <field>
              <name>TB_WR</name>
              <description>TX FIFO Write Buffer Write Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TB_CNT</name>
              <description>TX FIFO Write Buffer Counter These bits indicate the number of words in TX FIFO Write Buffer </description>
              <bitRange>[30:28]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TF_CNT</name>
              <description>TX FIFO Counter These bits indicate the number of words in TX FIFO  
00000000: 0 byte in TX FIFO 
00000001: 1 byte in TX FIFO ... 
01000000: 64 bytes in TX FIFO Others: Reserved </description>
              <bitRange>[23:16]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0</name>
                  <description>0 byte in TX FIFO</description>
                  <value>0b00000000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 byte in TX FIFO ...</description>
                  <value>0b00000001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 bytes in TX FIFO Others: Reserved</description>
                  <value>0b01000000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RB_WR</name>
              <description>RX FIFO Read Buffer Write Enable </description>
              <bitRange>[15:15]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RB_CNT</name>
              <description>RX FIFO Read Buffer Counter These bits indicate the number of words in RX FIFO Read Buffer. </description>
              <bitRange>[14:12]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>RF_CNT</name>
              <description>RX FIFO Counter These bits indicate the number of words in RX FIFO  
00000000: 0 byte in RX FIFO 
00000001: 1 byte in RX FIFO ...  01000000:64 bytes in RX FIFO Others: Reserved </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_0</name>
                  <description>0 byte in RX FIFO</description>
                  <value>0b00000000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 byte in RX FIFO ...</description>
                  <value>0b00000001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_64</name>
                  <description>64 bytes in RX FIFO Others: Reserved</description>
                  <value>0b01000000</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_GCR</name>
          <description>SPI Global Control Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x80</resetValue>
          <resetMask>0x80000083</resetMask>
          <fields>
            <field>
              <name>SRST</name>
              <description>Soft reset W ite  to this it ill lea the SPI o t olle , a d auto ati all  lea to  when reset operation completes. W iti g  has o effe t. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TP_EN</name>
              <description>Transmit Pause Enable In master mode, it is used to control transmit state machine to stop smart burst sending when RX FIFO is full.  
0: Normal operation, ignore RXFIFO status 
1: Stop transmit data when RXFIFO full  Note: Can not be written when XCH=1 </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal operation, ignore RXFIFO status</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Stop</name>
                  <description>Stop transmit data when RXFIFO full  Note: Can not be written when XCH=1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>MODE</name>
              <description>SPI Function Mode Select  
0: Slave Mode 
1: Master Mode  Note: Can not be written when XCH=1 </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Slave</name>
                  <description>Slave Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Master</name>
                  <description>Master Mode  Note: Can not be written when XCH=1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EN</name>
              <description>SPI Module Enable Control  
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_IER</name>
          <description>SPI Interrupt Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3F77</resetMask>
          <fields>
            <field>
              <name>SS_INT_EN</name>
              <description>SSI Interrupt Enable Chip Select Signal (SSx) from valid state to invalid state  
0: Disable 
1: Enable </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TC_INT_EN</name>
              <description>Transfer Completed Interrupt Enable  
0: Disable 
1: Enable </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TF_UDR_INT_EN</name>
              <description>TXFIFO Underrun Interrupt Enable  
0: Disable 
1: Enable </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TF_OVF_INT_EN</name>
              <description>TX FIFO Overflow Interrupt Enable  
0: Disable 
1: Enable </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RF_UDR_INT_EN</name>
              <description>RXFIFO Underrun Interrupt Enable  
0: Disable 
1: Enable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RF_OVF_INT_EN</name>
              <description>RX FIFO Overflow Interrupt Enable  
0: Disable 
1: Enable </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TF_FUL_INT_EN</name>
              <description>TX FIFO Full Interrupt Enable  
0: Disable 
1: Enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_EMP_INT_EN</name>
              <description>TX FIFO Empty Interrupt Enable  
0: Disable 
1: Enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_ERQ_INT_EN</name>
              <description>TX FIFO Empty Request Interrupt Enable  
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RF_FUL_INT_EN</name>
              <description>RX FIFO Full Interrupt Enable  
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_EMP_INT_EN</name>
              <description>RX FIFO Empty Interrupt Enable  
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RF_RDY_INT_EN</name>
              <description>RX FIFO Ready Request Interrupt Enable  
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_INT_STA</name>
          <description>SPI_INT_STA</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x32</resetValue>
          <resetMask>0x3F77</resetMask>
          <fields>
            <field>
              <name>SSI</name>
              <description>SS Invalid Interrupt When SSI is 1, it indicates that SS has changed from valid state to invalid state. Writing 1 to this bit clears it. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>TC</name>
              <description>Transfer Completed In master mode, it indicates that all bursts specified by SPI_BC  have been exchanged. In other condition, When set, this bit indicates that all the data in TXFIFO has been loaded in the Shift register, and the Shift register has shifted out all the bits. Writing 1 to this bit clears it.   
0: Busy 
1: Transfer Completed </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Transfer</name>
                  <description>Transfer Completed</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TF_UDF</name>
              <description>TXFIFO Underrun This bit is set when if the TXFIFO is underrun. Writing 1 to this bit clears it.  
0: TXFIFO is not underrun 
1: TXFIFO is underrun </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_underrun</name>
                  <description>TXFIFO is not underrun</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>underrun</name>
                  <description>TXFIFO is underrun</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TF_OVF</name>
              <description>TXFIFO Overflow This bit is set when if the TXFIFO is overflow. Writing 1 to this bit clears it.  
0: TXFIFO is not overflow 
1: TXFIFO is overflow </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_overflow</name>
                  <description>TXFIFO is not overflow</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overflow</name>
                  <description>TXFIFO is overflow</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_UDF</name>
              <description>RXFIFO Underrun When set, this bit indicates that RXFIFO is underrun. Writing 1 to this bit clears it.  
0: RXFIFO is not underrun 
1: RXFIFO is underrun </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_underrun</name>
                  <description>RXFIFO is not underrun</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>underrun</name>
                  <description>RXFIFO is underrun</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_OVF</name>
              <description>RXFIFO Overflow When set, this bit indicates that RXFIFO is overflow. Writing 1 to this bit clears it.  
0: RXFIFO is not overflow. 
1: RXFIFO is overflow. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_overflow</name>
                  <description>RXFIFO is not overflow.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>overflow</name>
                  <description>RXFIFO is overflow.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_FULL</name>
              <description>TXFIFO Full This bit is set when if the TXFIFO is full . Writing 1 to this bit clears it.  
0: TXFIFO is not Full 
1: TXFIFO is Full </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_Full</name>
                  <description>TXFIFO is not Full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full</name>
                  <description>TXFIFO is Full</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_EMP</name>
              <description>TXFIFO Empty This bit is set if the TXFIFO is empty. Writing 1 to this bit clears it.  
0: TXFIFO contains one or more words. 
1: TXFIFO is empty </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TXFIFO_contains</name>
                  <description>TXFIFO contains one or more words.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>TXFIFO is empty</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TX_READY</name>
              <description>TXFIFO Ready  
0: TX_WL &gt; TX_TRIG_LEVEL 
1: TX_WL &lt;= TX_TRIG_LEVEL   This it is set a ti e if TX_WL &lt;= TX_TRIG_LEVEL. W iti g  to this it clears it. Where TX_WL is the water level of RXFIFO. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TX_WL__gt_</name>
                  <description>TX_WL &gt; TX_TRIG_LEVEL</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TX_WL__lt__equals_</name>
                  <description>TX_WL &lt;= TX_TRIG_LEVEL   This it is set a ti e if TX_WL &lt;= TX_TRIG_LEVEL. W iti g  to this it clears it. Where TX_WL is the water level of RXFIFO.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_FULL</name>
              <description>RXFIFO Full This bit is set when the RXFIFO is full . Writing 1 to this bit clears it.  
0: Not Full 
1: Full </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_Full</name>
                  <description>Not Full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Full</name>
                  <description>Full</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_EMP</name>
              <description>RXFIFO Empty This bit is set when the RXFIFO is empty . Writing 1 to this bit clears it.  
0: Not empty 
1: empty </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_empty</name>
                  <description>Not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>empty</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RX_RDY</name>
              <description>RXFIFO Ready  
0: RX_WL &lt; RX_TRIG_LEVEL 
1: RX_WL &gt;= RX_TRIG_LEVEL  This bit is set any time if RX_WL &gt;= RX_TRIG_LEVEL. Writing 1 to this bit clears it. Where RX_WL is the water level of RXFIFO. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>RX_WL__lt_</name>
                  <description>RX_WL &lt; RX_TRIG_LEVEL</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>RX_WL__gt__equals_</name>
                  <description>RX_WL &gt;= RX_TRIG_LEVEL  This bit is set any time if RX_WL &gt;= RX_TRIG_LEVEL. Writing 1 to this bit clears it. Where RX_WL is the water level of RXFIFO.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_NDMA_CTL</name>
          <description>SPI Normal DMA Control Register</description>
          <addressOffset>0x88</addressOffset>
          <resetValue>0xA5</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>NDMA_MODE_CTL</name>
              <description>0xEA: NDMA handshake mode  Note: NDMA wait mode does not care the value. 0xA5 can be used in handshake mode, but 0xEA is better. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>NDMA</name>
                  <description>NDMA handshake mode  Note: NDMA wait mode does not care the value. 0xA5 can be used in handshake mode, but 0xEA is better.</description>
                  <value>0xEA</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_RXD</name>
          <description>SPI RX Data Register</description>
          <addressOffset>0x300</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>RDATA</name>
              <description>Receive Data This register can be accessed in byte, half-word or word unit by AHB. In byte accessing method, if there are data in RXFIFO, the top word is returned and the RXFIFO depth is decreased by 1. In half-word accessing method, two SPI bursts are returned and the RXFIFO depth is decreased by 2. In word accessing method, the four SPI bursts are returned and the RXFIFO depth is decreased by 4. Note: This address is read-only if RF_TEST  is , a d if RF_TEST  is set to , this address is readable and writable to test the RX FIFO through the AHB bus. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_TC</name>
          <description>SPI_TC</description>
          <addressOffset>0x34</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFF</resetMask>
          <fields>
            <field>
              <name>MWTC</name>
              <description>Master Write Transmit Counter In master mode, this field specifies the burst number that should be sent to TXFIFO before automatically sending dummy burst. For saving bus bandwidth, the dummy burst (all zero bits or all one bits) is sent by SPI Controller automatically.  
0: 0 burst 
1: 1 burst ...  N: N bursts </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_TCR</name>
          <description>SPI Transfer Control register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x87</resetValue>
          <resetMask>0x80007FFF</resetMask>
          <fields>
            <field>
              <name>XCH</name>
              <description>Exchange Burst In master mode it is used to start SPI burst  
0: Idle 
1: Initiates exchange.  W ite  to this it ill sta t the SPI u st, a d ill auto matically clear after finishing the bursts transfe spe ified  BC. W ite  to SRST will also clear this it. W iti g  to this it has o effe t.   Note: Can not be written when XCH=1. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Initiates</name>
                  <description>Initiates exchange.  W ite  to this it ill sta t the SPI u st, a d ill auto matically clear after finishing the bursts transfe spe ified  BC. W ite  to SRST will also clear this it. W iti g  to this it has o effe t.   Note: Can not be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDDM</name>
              <description>Sending Data Delay Mode  
0: Normal sending 
1: Delay sending  Set the it to  to ake the data se d ith a dela of half le of SPI_CLK in dual IO mode for SPI mode0.  </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal sending</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Delay</name>
                  <description>Delay sending  Set the it to  to ake the data se d ith a dela of half le of SPI_CLK in dual IO mode for SPI mode0.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDM</name>
              <description>Master Sample Data Mode  
0: Delay Sample Mode 
1: Normal Sample Mode  In Normal Sample Mode, SPI master samples the data at the correct edge for each SPI mode. In Delay Sample Mode, SPI master samples data at the edge that is half cycle delayed by the correct edge defined in respective SPI mode. </description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Delay</name>
                  <description>Delay Sample Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Sample Mode  In Normal Sample Mode, SPI master samples the data at the correct edge for each SPI mode. In Delay Sample Mode, SPI master samples data at the edge that is half cycle delayed by the correct edge defined in respective SPI mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FBS</name>
              <description>First Transmit Bit Select  
0: MSB first 
1: LSB first  Note: Can not be written when XCH=1. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>MSB</name>
                  <description>MSB first</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>LSB</name>
                  <description>LSB first  Note: Can not be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDC</name>
              <description>Master Sample Data Control Set this it to  to ake the i te al ead sa ple poi t ith a dela of half cycle of SPI_CLK. It is used in high speed read operation to reduce the error caused by the time delay of SPI_CLK propagating between master and slave.  
0: Normal operation, do not delay internal read sample point 
1: Delay internal read sample point  Note: Can not be written when XCH=1. </description>
              <bitRange>[11:11]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal operation, do not delay internal read sample point</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Delay</name>
                  <description>Delay internal read sample point  Note: Can not be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RPSM</name>
              <description>Rapids Mode Select Select Rapids mode for high speed write.  
0: Normal write mode 
1: Rapids write mode  Note: Can not be written when XCH=1. </description>
              <bitRange>[10:10]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal write mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Rapids</name>
                  <description>Rapids write mode  Note: Can not be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDB</name>
              <description>Dummy Burst Type  
0: The bit value of dummy SPI burst is zero 
1: The bit value of dummy SPI burst is one  Note: Can not be written when XCH=1. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>zero</name>
                  <description>The bit value of dummy SPI burst is zero</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>one</name>
                  <description>The bit value of dummy SPI burst is one  Note: Can not be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DHB</name>
              <description>Discard Hash Burst In master mode it controls whether discarding unused SPI bursts  
0: Receiving all SPI bursts in BC period 
1: Discard unused SPI bursts, only fetching the SPI bursts during dummy burst period. The bursts number is specified by TC.  Note: Can not be written when XCH=1. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receiving</name>
                  <description>Receiving all SPI bursts in BC period</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Discard</name>
                  <description>Discard unused SPI bursts, only fetching the SPI bursts during dummy burst period. The bursts number is specified by TC.  Note: Can not be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SS_LEVEL</name>
              <description>Whe  o t ol SS sig al a uall , set this it to  o  to o t ol the le el of SS signal.  
0: Set SS to low 
1: Set SS to high  Note: Can not be written when XCH=1. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Set_SS_to_low</name>
                  <description>Set SS to low</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Set_SS_to_high</name>
                  <description>Set SS to high  Note: Can not be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SS_OWNER</name>
              <description>SS Output Owner Select Usually, the controller sends SS signal automatically with data together. When this bit is set to 1, software must manually write SS_LEVEL to 1 or 0 to control the level of SS signal.  
0: SPI controller 
1: Software  Note: Can not be written when XCH=1. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SPI</name>
                  <description>SPI controller</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Software</name>
                  <description>Software  Note: Can not be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SS_SEL</name>
              <description>SPI Chip Select Select one of four external SPI Master/Slave Devices  
00: SPI_SS0 will be asserted 
01: SPI_SS1 will be asserted 
10: SPI_SS2 will be asserted 
11: SPI_SS3 will be asserted  Note: Can not be written when XCH=1. </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SPI_SS0</name>
                  <description>SPI_SS0 will be asserted</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI_SS1</name>
                  <description>SPI_SS1 will be asserted</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI_SS2</name>
                  <description>SPI_SS2 will be asserted</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>SPI_SS3</name>
                  <description>SPI_SS3 will be asserted  Note: Can not be written when XCH=1.</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SSCTL</name>
              <description>In master mode, this bit selects the output wave for the SPI_SSx signal. Only valid when SS_OWNER = 0.  
0: SPI_SSx remains asserted between SPI bursts 
1: Negate SPI_SSx between SPI bursts  Note: Can not be written when XCH=1. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>SPI_SSx</name>
                  <description>SPI_SSx remains asserted between SPI bursts</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Negate</name>
                  <description>Negate SPI_SSx between SPI bursts  Note: Can not be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SPOL</name>
              <description>SPI Chip Select Signal Polarity Control  
0: Active high polarity (0 = Idle) 
1: Active low polarity (1 = Idle)  Note: Can not be written when XCH=1. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Active_high</name>
                  <description>Active high polarity (0 = Idle)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Active_low</name>
                  <description>Active low polarity (1 = Idle)  Note: Can not be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPOL</name>
              <description>SPI Clock Polarity Control  
0: Active high polarity (0 = Idle) 
1: Active low polarity (1 = Idle)  Note: Can not be written when XCH=1. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Active_high</name>
                  <description>Active high polarity (0 = Idle)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Active_low</name>
                  <description>Active low polarity (1 = Idle)  Note: Can not be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CPHA</name>
              <description>SPI Clock/Data Phase Control  
0: Phase 0 (Leading edge for sample data) 
1: Phase 1 (Leading edge for setup data)  Note: Can not be written when XCH=1. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Phase_0</name>
                  <description>Phase 0 (Leading edge for sample data)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Phase_1</name>
                  <description>Phase 1 (Leading edge for setup data)  Note: Can not be written when XCH=1.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_TXD</name>
          <description>SPI TX Data Register</description>
          <addressOffset>0x200</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TDATA</name>
              <description>Transmit Data This register can be accessed in byte, half-word or word unit by AHB. In byte accessing method, if there are rooms in RXFIFO, one burst data is written to RXFIFO and the depth is increased by 1. In half-word accessing method, two SPI burst data are written and the TXFIFO depth is increased by 2. In word accessing method, four SPI burst data are written and the TXFIFO depth is increased by 4. Note: This address is writing-only if TF_TEST  is , a d if TF_TEST  is set to , this address is readable and writable to test the TX FIFO through the AHB bus. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SPI_WCR</name>
          <description>SPI Wait Clock Counter Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFF</resetMask>
          <fields>
            <field>
              <name>SWC</name>
              <description>Dual mode direction switch wait clock counter (for master mode only).  
0: No wait states inserted N: N SPI_SCLK wait states inserted  Note: These bits control the number of wait states to be inserted before start dual data transfer in dual SPI mode. The SPI module counts SPI_SCLK by SWC  for delaying next word data transfer. These bits can not be written when XCH=1. </description>
              <bitRange>[19:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>WCC</name>
              <description>Wait Clock Counter (In Master mode) These bits control the number of wait states to be inserted in data transfers. The SPI module counts SPI_SCLK by WCC  for delaying next word data transfer.  
0: No wait states inserted N: N SPI_SCLK wait states inserted </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="SPI0">
      <name>SPI1</name>
      <description>SPI1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C69000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>TWD</name>
      <description>TWD</description>
      <groupName>generic</groupName>
      <baseAddress>0x1F01800</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>SST_NV_CNT_REG</name>
          <description>Secure Storage NV-Counter Register</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SST_NV_CNT</name>
              <description>This counter protects the trusted world secure storage file from replay attacks. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYN_DATA_CNT_REG0</name>
          <description>Synchronize Data Counter Register 0</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYN_DATA_CNT0</name>
              <description>This counter is used for synchronizing data stores against replay attacks. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYN_DATA_CNT_REG1</name>
          <description>Synchronize Data Counter Register 1</description>
          <addressOffset>0x114</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYN_DATA_CNT1</name>
              <description>This counter is used for synchronizing data stores against replay attacks. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYN_DATA_CNT_REG2</name>
          <description>Synchronize Data Counter Register 2</description>
          <addressOffset>0x118</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYN_DATA_CNT2</name>
              <description>This counter is used for synchronizing data stores against replay attacks. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SYN_DATA_CNT_REG3</name>
          <description>Synchronize Data Counter Register 3</description>
          <addressOffset>0x11C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYN_DATA_CNT3</name>
              <description>This counter is used for synchronizing data stores against replay attacks. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWD_CTRL_REG</name>
          <description>TWD Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000303</resetMask>
          <fields>
            <field>
              <name>CNT64_CLK_SRC_SEL</name>
              <description>64-bit counter clock source select.  
0: LOSC. 
1: OSC24M. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>LOSC</name>
                  <description>LOSC.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>OSC24M</name>
                  <description>OSC24M.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWD_RESET_EN</name>
              <description>TWD reset enable.  
0: Reset disable. 
1: Reset enable. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Reset_disable</name>
                  <description>Reset disable.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reset_enable</name>
                  <description>Reset enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWD_INT_EN</name>
              <description>TWD Interrupt Enable.  
0: Interrupt disable. 
1: Interrupt enable. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Interrupt_disable</name>
                  <description>Interrupt disable.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Interrupt_enable</name>
                  <description>Interrupt enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWD_STOP_EN</name>
              <description>TWD stop enable.  
0: Resume rolling-over. 
1: Stop rolling-over. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Resume</name>
                  <description>Resume rolling-over.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Stop</name>
                  <description>Stop rolling-over.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TWD_CLR_EN</name>
              <description>TWD clear enable.  
0: No effect. 
1: To clear relevant registers, it will change to zero after the registers are cleared. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>To_clear</name>
                  <description>To clear relevant registers, it will change to zero after the registers are cleared.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TWD_HIGH_CNT_CMP_REG</name>
          <description>TWD High Counter Compare Register</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TWD_HIGH_CMP</name>
              <description>The TWD high 32-bit compare counter. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWD_HIGH_CNT_REG</name>
          <description>TWD High Counter Register</description>
          <addressOffset>0x24</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TWD_HIGH_CNT</name>
              <description>The TWD high 32-bit counter. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWD_INTV_VAL_REG</name>
          <description>TWD Interval Value Register</description>
          <addressOffset>0x30</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TWD_INTV_VAL</name>
              <description>The TWD interval value. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWD_LOW_CNT_CMP_REG</name>
          <description>TWD Low Counter Compare Register</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TWD_LOW_CMP</name>
              <description>The TWD low 32-bit compare counter. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWD_LOW_CNT_REG</name>
          <description>TWD Low Counter Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>TWD_LOW_CNT</name>
              <description>The TWD low 32-bit counter. </description>
              <bitRange>[31:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWD_RESTART_REG</name>
          <description>TWD Restart Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0001</resetMask>
          <fields>
            <field>
              <name>TWD_RESTART_KEYFILED</name>
              <description>It should be written to 0xD14. Writing any other value in this field aborts the write operation. </description>
              <bitRange>[27:16]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>TWD_RESTART_EN</name>
              <description>If writin g  to this it, the alue of Counter Compare Registers  would change.   
0: No effect. 
1: Restart enable. </description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Restart</name>
                  <description>Restart enable.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TWD_STATUS_REG</name>
          <description>TWD Status Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>TWD_PEND_FLAG</name>
              <description>Interrupt pending.  Setting 1 to the bit will clear it.  
0: No effect. 
1: Pending. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_effect</name>
                  <description>No effect.</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Pending</name>
                  <description>Pending.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TCON0</name>
      <description>TCON0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C0C000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>3</dim>
          <dimIncrement>16</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x11c</addressOffset>
          <register>
            <name>TCON0_CEU_COEF_ADD_REG</name>
            <description>TCON0_CEU_COEF_ADD_REG</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x7FFFF</resetMask>
            <fields>
              <field>
                <name>CEU_COEF_ADD_VALUE</name>
                <description>Signed 19bit value, range of (-16384, 16384) N=0: Rc N=1: Gc N=2: Bc </description>
                <bitRange>[18:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON0_CEU_COEF_RANGE_REG</name>
            <description>TCON0_CEU_COEF_RANGE_REG</description>
            <addressOffset>0x24</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFF00FF</resetMask>
            <fields>
              <field>
                <name>CEU_COEF_RANGE_MIN</name>
                <description>Unsigned 8bit value, range of [0,255] </description>
                <bitRange>[23:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>CEU_COEF_RANGE_MAX</name>
                <description>Unsigned 8bit value, range of [0,255] </description>
                <bitRange>[7:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON0_FILL_BEGIN_REG</name>
            <description>TCON0_FILL_BEGIN_REG</description>
            <addressOffset>0x1E8</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>FILL_BEGIN</name>
                <description></description>
                <bitRange>[23:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON0_FILL_DATA_REG</name>
            <description>TCON0_FILL_DATA_REG</description>
            <addressOffset>0x1F0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>FILL_VALUE</name>
                <description></description>
                <bitRange>[23:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON0_FILL_END_REG</name>
            <description>TCON0_FILL_END_REG</description>
            <addressOffset>0x1EC</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>FILL_END</name>
                <description></description>
                <bitRange>[23:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>TCON0_BASIC0_REG</name>
          <description>TCON0_BASIC0_REG</description>
          <addressOffset>0x94</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>TCON1_XI</name>
              <description>Source width is X+1 </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_YI</name>
              <description>Source height is Y+1 </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_BASIC1_REG</name>
          <description>TCON0_BASIC1_REG</description>
          <addressOffset>0x98</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>LS_XO</name>
              <description>Width is LS_XO+1 </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LS_YO</name>
              <description>Width is LS_YO+1 Note: This version LS_YO = TCON1_YI </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_BASIC2_REG</name>
          <description>TCON0_BASIC2_REG</description>
          <addressOffset>0x9C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>TCON1_XO</name>
              <description>Width is TCON1_XO+1 </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_YO</name>
              <description>Height is TCON1_YO+1 </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_BASIC3_REG</name>
          <description>TCON0_BASIC3_REG</description>
          <addressOffset>0xA0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>HT</name>
              <description>Horizontal total time  Thcycle = (HT+1) * Thdclk  </description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HBP</name>
              <description>Horizontal back porch  Thbp = (HBP +1) * Thdclk </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_BASIC4_REG</name>
          <description>TCON0_BASIC4_REG</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>VT</name>
              <description>Horizontal total time (in HD line) Tvt = VT/2 * Th  </description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VBP</name>
              <description>Horizontal back porch (in HD line) Tvbp = (VBP +1) * Th </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_BASIC5_REG</name>
          <description>TCON0_BASIC5_REG</description>
          <addressOffset>0xA8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF03FF</resetMask>
          <fields>
            <field>
              <name>HSPW</name>
              <description>Horizontal Sync Pulse Width (in dclk) Thspw = (HSPW+1) * Tdclk Note: HT&gt; (HSPW+1) </description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VSPW</name>
              <description>Vertical Sync Pulse Width (in lines) Tvspw = (VSPW+1) * Th Note: VT/2 &gt; (VSPW+1) </description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CEU_COEF_REG_0</name>
          <description>TCON0_CEU_COEF_REG_0</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF</resetMask>
          <fields>
            <field>
              <name>CEU_COEF_MUL_VALUE</name>
              <description>Signed 13bit value, range of (-16,16) N=0: Rr N=1: Rg N=2: Rb N=4: Gr N=5: Gg N=6: Gb N=8: Br N=9: Bg N=10: Bb</description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register derivedFrom="TCON0_CEU_COEF_REG_0">
          <name>TCON0_CEU_COEF_REG_1</name>
          <addressOffset>0x114</addressOffset>
        </register>
        <register derivedFrom="TCON0_CEU_COEF_REG_0">
          <name>TCON0_CEU_COEF_REG_2</name>
          <addressOffset>0x118</addressOffset>
        </register>
        <register derivedFrom="TCON0_CEU_COEF_REG_0">
          <name>TCON0_CEU_COEF_REG_4</name>
          <addressOffset>0x120</addressOffset>
        </register>
        <register derivedFrom="TCON0_CEU_COEF_REG_0">
          <name>TCON0_CEU_COEF_REG_5</name>
          <addressOffset>0x124</addressOffset>
        </register>
        <register derivedFrom="TCON0_CEU_COEF_REG_0">
          <name>TCON0_CEU_COEF_REG_6</name>
          <addressOffset>0x128</addressOffset>
        </register>
        <register derivedFrom="TCON0_CEU_COEF_REG_0">
          <name>TCON0_CEU_COEF_REG_8</name>
          <addressOffset>0x130</addressOffset>
        </register>
        <register derivedFrom="TCON0_CEU_COEF_REG_0">
          <name>TCON0_CEU_COEF_REG_9</name>
          <addressOffset>0x134</addressOffset>
        </register>
        <register derivedFrom="TCON0_CEU_COEF_REG_0">
          <name>TCON0_CEU_COEF_REG_10</name>
          <addressOffset>0x138</addressOffset>
        </register>
        <register>
          <name>TCON0_CEU_CTL_REG</name>
          <description>TCON0_CEU_CTL_REG</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>CEU_EN</name>
              <description>0: Bypass 
1: Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Bypass</name>
                  <description>Bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_CTL_REG</name>
          <description>TCON0_CTL_REG</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800001F2</resetMask>
          <fields>
            <field>
              <name>TCON1_EN</name>
              <description>0: Disable 
1: Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>START_DELAY</name>
              <description>This is for DE1 and DE2 </description>
              <bitRange>[8:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_SRC_SEL</name>
              <description>0: Reserved 
1: BLUE data(FIFO2 disable, RGB=0000FF) </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLUE</name>
                  <description>BLUE data(FIFO2 disable, RGB=0000FF)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_ECC_FIFO_REG</name>
          <description>TCON0_ECC_FIFO_REG</description>
          <addressOffset>0xF8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>ECC_FIFO_BIST_EN</name>
              <description>0: Disable 
1: Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_FIFO_ERR_FLAG</name>
              <description></description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ECC_FIFO_ERR_BITS</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ECC_FIFO_BLANK_EN</name>
              <description>0: Disable ECC function in blanking 
1: Enable ECC function in blanking  ECC fu tio is te t to t igge i  la ki g a ea at h  ode, set  he i h  mode. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable ECC function in blanking</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable ECC function in blanking  ECC fu tio is te t to t igge i  la ki g a ea at h  ode, set  he i h  mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_FIFO</name>
              <description>Bit3  
0: Enable 
1: Disable </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_FILL_CTL_REG</name>
          <description>TCON0_FILL_CTL_REG</description>
          <addressOffset>0x300</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>TCON1_FILL_EN</name>
              <description>0: Bypass 
1: Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Bypass</name>
                  <description>Bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_GCTL_REG</name>
          <description>TCON0_GCTL_REG</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC0000000</resetMask>
          <fields>
            <field>
              <name>TCON_EN</name>
              <description>0: Disable 
1: Enable  Whe it s disa led, the odule ill e eset to idle state. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  Whe it s disa led, the odule ill e eset to idle state.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON_GAMMA_EN</name>
              <description>0: Disable 
1: Enable </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_GINT0_REG</name>
          <description>TCON0_GINT0_REG</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x50005000</resetMask>
          <fields>
            <field>
              <name>TCON1_VB_INT_EN</name>
              <description>0: Disable 
1: Enable </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_LINE_INT_EN</name>
              <description>0: Disable 
1: Enable </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_VB_INT_FLAG</name>
              <description>Asserted during vertical no-display period every frame. Write 0 to clear it. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_LINE_INT_FLAG</name>
              <description>Trigger when SY1 match the current TCON1 scan line Write 0 to clear it. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_GINT1_REG</name>
          <description>TCON0_GINT1_REG</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>TCON1_LINE_INT_NUM</name>
              <description>Scan line for TCON1 line trigger(including inactive lines) Setting it for the specified line for trigger1. Note: SY1 is writable only when LINE_TRG1 disable. </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_IO_POL_REG</name>
          <description>TCON0_IO_POL_REG</description>
          <addressOffset>0xF0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IO3_INV</name>
              <description>0: Not invert 
1: Invert </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO2_INV</name>
              <description>0: Not invert 
1: Invert </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO1_INV</name>
              <description>0: Not invert 
1: Invert </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO0_INV</name>
              <description>0: Not invert 
1: Invert </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_INV</name>
              <description>TCON output port D[23:0] polarity control, with independent bit control  0s: Normal polarity 1s: Invert the specify output </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_IO_TRI_REG</name>
          <description>TCON0_IO_TRI_REG</description>
          <addressOffset>0xF4</addressOffset>
          <resetValue>0xFFFFFFF</resetValue>
          <resetMask>0xFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IO3_OUTPUT_TRI_EN</name>
              <description>0: Enable 
1: Disable </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO2_OUTPUT_TRI_EN</name>
              <description>0: Enable 
1: Disable </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO1_OUTPUT_TRI_EN</name>
              <description>0: Enable 
1: Disable </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO0_OUTPUT_TRI_EN</name>
              <description>0: Enable 
1: Disable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_OUTPUT_TRI_EN</name>
              <description>TCON output port D[23:0] output enable,with independent bit control.  0s: Enable 1s: Disable </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_PS_SYNC_REG</name>
          <description>TCON0_PS_SYNC_REG</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYNC_X</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNC_Y</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON0_SAFE_PERIOD_REG</name>
          <description>TCON0_SAFE_PERIOD_REG</description>
          <addressOffset>0x1F0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF0003</resetMask>
          <fields>
            <field>
              <name>SAFE_PERIOD_FIFO_NUM</name>
              <description></description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAFE_PERIOD_MODE</name>
              <description>00: Unsafe 
01: Safe 
10: Safe at ECC_FIFO_CUR_NUM &gt; SAFE_PERIOD_FIFO_NUM 
11: Safe at 2 and safe at sync active </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TCON1</name>
      <description>TCON1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C0D000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <dim>3</dim>
          <dimIncrement>16</dimIncrement>
          <name>_N[%s]</name>
          <addressOffset>0x11c</addressOffset>
          <register>
            <name>TCON1_CEU_COEF_ADD_REG</name>
            <description>TCON1_CEU_COEF_ADD_REG</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x7FFFF</resetMask>
            <fields>
              <field>
                <name>CEU_COEF_ADD_VALUE</name>
                <description>Signed 19bit value, range of (-16384, 16384) N=0: Rc N=1: Gc N=2: Bc </description>
                <bitRange>[18:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON1_CEU_COEF_RANG_REG</name>
            <description>TCON1_CEU_COEF_RANG_REG</description>
            <addressOffset>0x24</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFF00FF</resetMask>
            <fields>
              <field>
                <name>CEU_COEF_RANGE_MIN</name>
                <description>Unsigned 8bit value, range of [0,255] </description>
                <bitRange>[23:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>CEU_COEF_RANGE_MAX</name>
                <description>Unsigned 8bit value, range of [0,255] </description>
                <bitRange>[7:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON1_FILL_BEGIN_REG</name>
            <description>TCON1 Fill Data Begin Register(N=0,1,2)</description>
            <addressOffset>0x1E8</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>FILL_BEGIN</name>
                <description></description>
                <bitRange>[23:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON1_FILL_DATA_REG</name>
            <description>TCON1_FILL_DATA_REG</description>
            <addressOffset>0x1F0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>FILL_VALUE</name>
                <description>FILL_VALUE</description>
                <bitRange>[23:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TCON1_FILL_END_REG</name>
            <description>TCON1 Fill Data End Register(N=0,1,2)</description>
            <addressOffset>0x1EC</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>FILL_END</name>
                <description>FILL_END</description>
                <bitRange>[23:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>TCON1_BASIC0_REG</name>
          <description>TCON1 Basic Timing Register0</description>
          <addressOffset>0x94</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>TCON1_XI</name>
              <description>Source width is X+1 </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_YI</name>
              <description>Source height is Y+1 </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_BASIC1_REG</name>
          <description>TCON1 Basic Timing Register1</description>
          <addressOffset>0x98</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>LS_XO</name>
              <description>Width is LS_XO+1 </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>LS_YO</name>
              <description>Width is LS_YO+1 Note: This version LS_YO = TCON1_YI </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_BASIC2_REG</name>
          <description>TCON1 Basic Timing Register2</description>
          <addressOffset>0x9C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>TCON1_XO</name>
              <description>Width is TCON1_XO+1 </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_YO</name>
              <description>Height is TCON1_YO+1 </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_BASIC3_REG</name>
          <description>TCON1 Basic Timing Register3</description>
          <addressOffset>0xA0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>HT</name>
              <description>Horizontal total time  Thcycle = (HT+1) * Thdclk  </description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>HBP</name>
              <description>Horizontal back porch  Thbp = (HBP +1) * Thdclk </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_BASIC4_REG</name>
          <description>TCON1 Basic Timing Register4</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF0FFF</resetMask>
          <fields>
            <field>
              <name>VT</name>
              <description>Horizontal total time (in HD line) Tvt = VT/2 * Th  </description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VBP</name>
              <description>Horizontal back porch (in HD line) Tvbp = (VBP +1) * Th </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_BASIC5_REG</name>
          <description>TCON1 Basic Timing Register5</description>
          <addressOffset>0xA8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3FF03FF</resetMask>
          <fields>
            <field>
              <name>HSPW</name>
              <description>Horizontal Sync Pulse Width (in dclk) Thspw = (HSPW+1) * Tdclk Note: HT&gt;  (HSPW+1) </description>
              <bitRange>[25:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>VSPW</name>
              <description>Vertical Sync Pulse Width (in lines) Tvspw = (VSPW+1) * Th Note: VT/2 &gt;  (VSPW+1) </description>
              <bitRange>[9:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_CEU_COEF_MUL_REG_0</name>
          <description>TCON1_CEU_COEF_MUL_REG_0</description>
          <addressOffset>0x110</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF</resetMask>
          <fields>
            <field>
              <name>CEU_COEF_MUL_VALUE</name>
              <description>Signed 13bit value, range of (-16,16) N=0: Rr N=1: Rg N=2: Rb N=4: Gr N=5: Gg N=6: Gb N=8: Br N=9: Bg N=10: Bb </description>
              <bitRange>[12:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register derivedFrom="TCON1_CEU_COEF_MUL_REG_0">
          <name>TCON1_CEU_COEF_MUL_REG_1</name>
          <addressOffset>0x114</addressOffset>
        </register>
        <register derivedFrom="TCON1_CEU_COEF_MUL_REG_0">
          <name>TCON1_CEU_COEF_MUL_REG_2</name>
          <addressOffset>0x118</addressOffset>
        </register>
        <register derivedFrom="TCON1_CEU_COEF_MUL_REG_0">
          <name>TCON1_CEU_COEF_MUL_REG_4</name>
          <addressOffset>0x120</addressOffset>
        </register>
        <register derivedFrom="TCON1_CEU_COEF_MUL_REG_0">
          <name>TCON1_CEU_COEF_MUL_REG_5</name>
          <addressOffset>0x124</addressOffset>
        </register>
        <register derivedFrom="TCON1_CEU_COEF_MUL_REG_0">
          <name>TCON1_CEU_COEF_MUL_REG_6</name>
          <addressOffset>0x128</addressOffset>
        </register>
        <register derivedFrom="TCON1_CEU_COEF_MUL_REG_0">
          <name>TCON1_CEU_COEF_MUL_REG_8</name>
          <addressOffset>0x130</addressOffset>
        </register>
        <register derivedFrom="TCON1_CEU_COEF_MUL_REG_0">
          <name>TCON1_CEU_COEF_MUL_REG_9</name>
          <addressOffset>0x134</addressOffset>
        </register>
        <register derivedFrom="TCON1_CEU_COEF_MUL_REG_0">
          <name>TCON1_CEU_COEF_MUL_REG_10</name>
          <addressOffset>0x138</addressOffset>
        </register>
        <register>
          <name>TCON1_CEU_CTL_REG</name>
          <description>TCON1_CEU_CTL_REG</description>
          <addressOffset>0x100</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>CEU_EN</name>
              <description>0: Bypass 
1: Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Bypass</name>
                  <description>Bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_CTL_REG</name>
          <description>TCON1 Control Register</description>
          <addressOffset>0x90</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x800001F2</resetMask>
          <fields>
            <field>
              <name>TCON1_EN</name>
              <description>0: Disable 
1: Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>START_DELAY</name>
              <description>This is for DE1 and DE2 </description>
              <bitRange>[8:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_SRC_SEL</name>
              <description>0: Reserved 
1: BLUE data(FIFO2 disable,RGB = 0000FF) </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>BLUE</name>
                  <description>BLUE data(FIFO2 disable,RGB = 0000FF)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_ECC_FIFO_REG</name>
          <description>TCON1_ECC_FIFO_REG</description>
          <addressOffset>0xF8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x0</resetMask>
          <fields>
            <field>
              <name>ECC_FIFO_BIST_EN</name>
              <description>0: Disable 
1: Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_FIFO_ERR_FLAG</name>
              <description></description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ECC_FIFO_ERR_BITS</name>
              <description></description>
              <bitRange>[23:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ECC_FIFO_BLANK_EN</name>
              <description>0: Disable ECC function in blanking 
1: Enable ECC function in blanking  ECC fu tio is te t to t igge i  la ki g a ea at h  ode, set  he i h  mode. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable ECC function in blanking</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable ECC function in blanking  ECC fu tio is te t to t igge i  la ki g a ea at h  ode, set  he i h  mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ECC_FIFO</name>
              <description>Bit3  
0: Enable 
1: Disable </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_FILL_CTL_REG</name>
          <description>TCON1 Fill Data Control Register</description>
          <addressOffset>0x300</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x80000000</resetMask>
          <fields>
            <field>
              <name>TCON1_FILL_EN</name>
              <description>0: Bypass 
1: Enable </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Bypass</name>
                  <description>Bypass</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_GCTL_REG</name>
          <description>TCON1_GCTL_REG</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xC0000000</resetMask>
          <fields>
            <field>
              <name>TCON_EN</name>
              <description>0: Disable 
1: Enable  Whe it s disa led, the odule ill e eset to idle state. </description>
              <bitRange>[31:31]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  Whe it s disa led, the odule ill e eset to idle state.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON_GAMMA_EN</name>
              <description>0: Disable 
1: Enable </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_GINT0_REG</name>
          <description>TCON1_GINT0_REG</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x50005000</resetMask>
          <fields>
            <field>
              <name>TCON1_VB_INT_EN</name>
              <description>0: Disable 
1: Enable </description>
              <bitRange>[30:30]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_LINE_INT_EN</name>
              <description>0: Disable 
1: Enable </description>
              <bitRange>[28:28]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TCON1_VB_INT_FLAG</name>
              <description>Asserted during vertical no-display period every frame. Write 0 to clear it. </description>
              <bitRange>[14:14]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TCON1_LINE_INT_FLAG</name>
              <description>Trigger when SY1 match the current TCON1 scan line. Write 0 to clear it. </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_GINT1_REG</name>
          <description>TCON1_GINT1_REG</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>TCON1_LINE_INT_NUM</name>
              <description>Scan line for TCON1 line trigger(including inactive lines) Setting it for the specified line for trigger 1. Note: SY1 is writable only when LINE_TRG1 disable. </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_IO_POL_REG</name>
          <description>TCON1 IO Polarity Register</description>
          <addressOffset>0xF0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IO3_INV</name>
              <description>0: Not invert 
1: Invert </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO2_INV</name>
              <description>0: Not invert 
1: Invert </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO1_INV</name>
              <description>0: Not invert 
1: Invert </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO0_INV</name>
              <description>0: Not invert 
1: Invert </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_INV</name>
              <description>TCON output port D[23:0] polarity control,with independent bit control  0s: Normal polarity 1s: Invert the specify output </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_IO_TRI_REG</name>
          <description>TCON1 IO Trigger Register</description>
          <addressOffset>0xF4</addressOffset>
          <resetValue>0xFFFFFFF</resetValue>
          <resetMask>0xFFFFFFF</resetMask>
          <fields>
            <field>
              <name>IO3_OUTPUT_TRI_EN</name>
              <description>0: Enable 
1: Disable </description>
              <bitRange>[27:27]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO2_OUTPUT_TRI_EN</name>
              <description>0: Enable 
1: Disable </description>
              <bitRange>[26:26]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO1_OUTPUT_TRI_EN</name>
              <description>0: Enable 
1: Disable </description>
              <bitRange>[25:25]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IO0_OUTPUT_TRI_EN</name>
              <description>0: Enable 
1: Disable </description>
              <bitRange>[24:24]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DATA_OUTPUT_TRI_EN</name>
              <description>TCON output port D[23:0] output enable,with independent bit control.  0s: Enable 1s: Disable </description>
              <bitRange>[23:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_PS_SYNC_REG</name>
          <description>TCON1 Sync Register</description>
          <addressOffset>0xB0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFFFFF</resetMask>
          <fields>
            <field>
              <name>SYNC_X</name>
              <description></description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SYNC_Y</name>
              <description></description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TCON1_SAFE_PERIOD_REG</name>
          <description>TCON1_SAFE_PERIOD_REG</description>
          <addressOffset>0x1F0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1FFF0003</resetMask>
          <fields>
            <field>
              <name>SAFE_PERIOD_FIFO_NUM</name>
              <description></description>
              <bitRange>[28:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SAFE_PERIOD_MODE</name>
              <description>00: Unsafe 
01: Safe 
10: Safe at ECC_FIFO_CUR_NUM &gt; SAFE_PERIOD_FIFO_NUM 
11: Safe at 2 and safe at sync active </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>Thermal Sensor</name>
      <description>Thermal Sensor</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C25000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>THS0_ALARM_CTRL_REG</name>
          <description>THS0_ALARM_CTRL_REG</description>
          <addressOffset>0x50</addressOffset>
          <resetValue>0x5A00684</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>ALARM0_T_HOT</name>
              <description>Thermal sensor0 alarm threshold for hot temperature </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALARM0_T_HYST</name>
              <description>Thermal sensor0 alarm threshold for hysteresis temperature  </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS0_DATA_REG</name>
          <description>THS0_DATA_REG</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>THS0_DATA</name>
              <description>Temperature measurement data of sensor0</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS0_SHUTDOWN_CTRL_REG</name>
          <description>THS0_SHUTDOWN_CTRL_REG</description>
          <addressOffset>0x60</addressOffset>
          <resetValue>0x4E90000</resetValue>
          <resetMask>0xFFF0000</resetMask>
          <fields>
            <field>
              <name>SHUT0_T_HOT</name>
              <description>Thermal sensor0 shutdown threshold for hot temperature </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS1_ALARM_CTRL_REG</name>
          <description>THS1_ALARM_CTRL_REG</description>
          <addressOffset>0x54</addressOffset>
          <resetValue>0x5A00684</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>ALARM1_T_HOT</name>
              <description>Thermal sensor1 alarm threshold for hot temperature </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>ALARM1_T_HYST</name>
              <description>Thermal sensor1 alarm threshold for hysteresis temperature  </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS1_DATA_REG</name>
          <description>THS1_DATA_REG</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFF</resetMask>
          <fields>
            <field>
              <name>THS1_DATA</name>
              <description>Temperature measurement data of sensor1</description>
              <bitRange>[11:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS1_SHUTDOWN_CTRL_REG</name>
          <description>THS1_SHUTDOWN_CTRL_REG</description>
          <addressOffset>0x64</addressOffset>
          <resetValue>0x4E90000</resetValue>
          <resetMask>0xFFF0000</resetMask>
          <fields>
            <field>
              <name>SHUT1_T_HOT</name>
              <description>Thermal sensor1 shutdown threshold for hot temperature </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_CDATA__REG</name>
          <description>THS_CDATA__REG</description>
          <addressOffset>0x74</addressOffset>
          <resetValue>0x8000800</resetValue>
          <resetMask>0xFFF0FFF</resetMask>
          <fields>
            <field>
              <name>THS1_CDATA</name>
              <description>Thermal Sensor1 calibration data </description>
              <bitRange>[27:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>THS0_CDATA</name>
              <description>Thermal Sensor0 calibration data </description>
              <bitRange>[11:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_CTRL_REG0</name>
          <description>THS_CTRL_REG0</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFF</resetMask>
          <fields>
            <field>
              <name>SENSOR_ACQ</name>
              <description>Sensor acquire time CLK_IN/(N+1) </description>
              <bitRange>[15:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_CTRL_REG2</name>
          <description>THS_CTRL_REG2</description>
          <addressOffset>0x40</addressOffset>
          <resetValue>0x40000</resetValue>
          <resetMask>0xFFFF0003</resetMask>
          <fields>
            <field>
              <name>ADC_ACQ</name>
              <description>ADC acquire time CLK_IN/(N+1)</description>
              <bitRange>[31:16]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SENSE1_EN</name>
              <description>Enable temperature measurement of sensor1   0:Disable 1:Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>SENSE0_EN</name>
              <description>Enable temperature measurement of sensor0  0:Disable 1:Enable</description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_FILTER__REG</name>
          <description>THS_FILTER__REG</description>
          <addressOffset>0x70</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0x7</resetMask>
          <fields>
            <field>
              <name>FILTER_EN</name>
              <description>Filter Enable  
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>FILTER_TYPE</name>
              <description>Average Filter Type  
00: 2 
01: 4 
10: 8 
11: 16 </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_4</name>
                  <description>4</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8</name>
                  <description>8</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_16</name>
                  <description>16</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_INT_CTRL_REG</name>
          <description>THS_INT_CTRL_REG</description>
          <addressOffset>0x44</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFFFFF333</resetMask>
          <fields>
            <field>
              <name>THERMAL_PER</name>
              <description>4096*(n+1)/CLK_IN</description>
              <bitRange>[31:12]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>THS1_DATA_IRQ_EN</name>
              <description>Enable temperature measurement data of sensor1    
0: Disable 
1: Enable </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>THS0_DATA_IRQ_EN</name>
              <description>Enable temperature measurement data of sensor0  
0: Disable 
1: Enable</description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SHUT_INT1_EN</name>
              <description>Enable shutdown interrupt of sensor1  
0: Disable 
1: Enable</description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SHUT0_INT_EN</name>
              <description>Enable shutdown interrupt of sensor0  
0: Disable 
1: Enable </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ALARM_INT1_EN</name>
              <description>Enable alarm interrupt of sensor1   
0: Disable 
1: Enable</description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ALARM_INT0_EN</name>
              <description>Enable alarm interrupt of sensor0  
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>THS_STAT_REG</name>
          <description>THS_STAT_REG</description>
          <addressOffset>0x48</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x331B</resetMask>
          <fields>
            <field>
              <name>ALARM1_OFF_STS</name>
              <description>Alarm interrupt off pending for sensor1 W ite  to lea this i te upt o auto ati all  lear if interrupt condition fails</description>
              <bitRange>[13:13]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>ALARM0_OFF_STS</name>
              <description>Alarm interrupt off pending for sensor0 W ite  to lea this i te upt o auto ati all  lea if i te upt o ditio  fails </description>
              <bitRange>[12:12]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>THS1_DATA_IRQ_STS</name>
              <description>Data interrupt status for sensor1  W ite  to lea this i te upt o auto ati all  lea if i te upt o ditio  fails </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>THS0_DATA_IRQ_STS</name>
              <description>Data interrupt status for sensor0  W ite  to lea this i te upt o auto ati all  lea if i te upt o ditio n fails </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>THS1_SHUT_INT_STS</name>
              <description>Shutdown interrupt status for sensor1 W ite  to lea this i te upt o auto ati al ly clear if interrupt condition fails </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>THS0_SHUT_INT_STS</name>
              <description>Shutdown interrupt status for sensor0 W ite  to clear this interrupt or automatically clear if interrupt condition fails </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>THS1_ALARM_INT_STS</name>
              <description>Alarm interrupt pending for sensor1 W ite  to lea this i te upt o auto ati al ly clear if interrupt condition fails </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
            <field>
              <name>THS0_ALARM_INT_STS</name>
              <description>Alarm interrupt pending for sensor0 W ite  to lea this i te upt o auto ati al ly clear if interrupt condition fails </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <modifiedWriteValues>oneToClear</modifiedWriteValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>TSC</name>
      <description>TSC</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C06000</baseAddress>
      <access>read-write</access>
      <registers>
        <cluster>
          <name>TSC</name>
          <addressOffset>0x0</addressOffset>
          <register>
            <name>TSC_CTLR</name>
            <description>TSC Control Register</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x0</resetMask>
            <fields/>
          </register>
          <register>
            <name>TSC_INTSTSR</name>
            <description>TSC Interrupt Status Register</description>
            <addressOffset>0x30</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1001F</resetMask>
            <fields>
              <field>
                <name>TSG</name>
                <description>Interrupt Global Status When all TSG interrupt status bits are cleared,the bit will be cleared by hardware. </description>
                <bitRange>[16:16]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>TSF4</name>
                <description>Interrupt Global Status When all TSF4 interrupt status bits are cleared,the bit will be cleared by hardware. </description>
                <bitRange>[4:4]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>TSF3</name>
                <description>Interrupt Global Status When all TSF3 interrupt status bits are cleared,the bit will be cleared by hardware. </description>
                <bitRange>[3:3]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>TSF2</name>
                <description>Interrupt Global Status When all TSF2 interrupt status bits are cleared,the bit will be cleared by hardware. </description>
                <bitRange>[2:2]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>TSF1</name>
                <description>Interrupt Global Status When all TSF1 interrupt status bits are cleared,the bit will be cleared by hardware. </description>
                <bitRange>[1:1]</bitRange>
                <access>read-only</access>
              </field>
              <field>
                <name>TSF0</name>
                <description>Interrupt Global Status When all TSF0 interrupt status bits are cleared,the bit will be cleared by hardware. </description>
                <bitRange>[0:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSC_OUTMUXR</name>
            <description>TSC Port Output Multiplex Control Register</description>
            <addressOffset>0x28</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x0</resetMask>
            <fields/>
          </register>
          <register>
            <name>TSC_PCTLR</name>
            <description>TSC Port Control Register</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0xA</resetValue>
            <resetMask>0xF</resetMask>
            <fields>
              <field>
                <name>TS_IN_PORT3_CTRL</name>
                <description>TSInPort3Ctrl TS Input Port3 Control  
0: Reserved 
1: SSI </description>
                <bitRange>[3:3]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>SSI</name>
                    <description>SSI</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TS_IN_PORT2_CTRL</name>
                <description>TSInPort2Ctrl TS Input Port2 Control  
0: SPI 
1: SSI </description>
                <bitRange>[2:2]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>SPI</name>
                    <description>SPI</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>SSI</name>
                    <description>SSI</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TS_IN_PORT1_CTRL</name>
                <description>TSInPort1Ctrl TS Input Port1 Control  
0: Reserved 
1: SSI </description>
                <bitRange>[1:1]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>SSI</name>
                    <description>SSI</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TS_IN_PORT0_CTRL</name>
                <description>TSInPort0Ctrl TS Input Port0 Control  
0: SPI 
1: SSI </description>
                <bitRange>[0:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>SPI</name>
                    <description>SPI</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>SSI</name>
                    <description>SSI</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>TSC_PPARR</name>
            <description>TSC Port Parameter Register</description>
            <addressOffset>0x14</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>TS_IN_PORT3_PAR</name>
                <description>TSInPort3Par TS Input Port3 Parameters  Bit Definition 7:5 Reserved 4 SSI data order 
0: MSB first for one byte data 
1: LSB first for one byte data 3 CLOCK signal polarity 
0: Rise edge capturing 
1: Fall edge capturing  2 ERROR signal polarity 
0: High level active 
1: Low level active 1 DVALID signal polarity 
0: High level active 
1: Low level active 0 PSYNC signal polarity 
0: High level active 
1: Low level active      </description>
                <bitRange>[31:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TS_IN_PORT2_PAR</name>
                <description>TSInPort2Par TS Input Port2 Parameters  Bit Definition 7:5 Reserved 4 SSI data order 
0: MSB first for one byte data 
1: LSB first for one byte data 3 CLOCK signal polarity 
0: Rise edge capturing 
1: Fall edge capturing  2 ERROR signal polarity 
0: High level active 
1: Low level active 1 DVALID signal polarity 
0: High level active 
1: Low level active 0 PSYNC signal polarity 
0: High level active 
1: Low level active      </description>
                <bitRange>[23:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TS_IN_PORT1_PAR</name>
                <description>TSInPort1Par TS Input Port1 Parameters  Bit Definition 7:5 Reserved 4 SSI data order 
0: MSB first for one byte data 
1: LSB first for one byte data 3 CLOCK signal polarity 
0: Rise edge capturing 
1: Fall edge capturing  2 ERROR signal polarity 
0: High level active 
1: Low level active 1 DVALID signal polarity 
0: High level active 
1: Low level active 0 PSYNC signal polarity 
0: High level active 
1: Low level active      </description>
                <bitRange>[15:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TS_IN_PORT0_PAR</name>
                <description>TSInPort0Par TS Input Port0 Parameters  Bit Definition 7:5 Reserved 4 SSI data order 
0: MSB first for one byte data 
1: LSB first for one byte data 3 CLOCK signal polarity 
0: Rise edge capturing 
1: Fall edge capturing  2 ERROR signal polarity 
0: High level active 
1: Low level active 1 DVALID signal polarity 
0: High level active 
1: Low level active 0 PSYNC signal polarity 
0: High level active 
1: Low level active       </description>
                <bitRange>[7:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSC_STAR</name>
            <description>TSC Status Register</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x0</resetMask>
            <fields/>
          </register>
          <register>
            <name>TSC_TSFMUXR</name>
            <description>TSC TSF Input Multiplex Control Register</description>
            <addressOffset>0x20</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFF</resetMask>
            <fields>
              <field>
                <name>TSF4_INPUT_MUX_CTRL</name>
                <description>TSF4InputMuxCtrl TSF4 Input Multiplex Control  
0000: Data from TSG 
0001: Data from TS IN Port0 
0010: Data from TS IN Port1 
0011: Data from TS IN Port2 
0100: Data from TS IN Port3 Others: Reserved </description>
                <bitRange>[19:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TSF3_INPUT_MUX_CTRL</name>
                <description>TSF3InputMuxCtrl TSF3 Input Multiplex Control  
0000: Data from TSG 
0001: Data from TS IN Port2 
0010: Data from TS IN Port3 Others: Reserved </description>
                <bitRange>[15:12]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TSF2_INPUT_MUX_CTRL</name>
                <description>TSF2InputMuxCtrl TSF2 Input Multiplex Control  
0000: Data from TSG 
0001: Data from TS IN Port2 Others: Reserved </description>
                <bitRange>[11:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Data_from_TSG</name>
                    <description>Data from TSG</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Data_from_TS</name>
                    <description>Data from TS IN Port2 Others: Reserved</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>TSF1_INPUT_MUX_CTRL</name>
                <description>TSF1InputMuxCtrl TSF1 Input Multiplex Control  
0000: Data from TSG 
0001: Data from TS IN Port0 
0010: Data from TS IN Port1 Others: Reserved </description>
                <bitRange>[7:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TSF0_INPUT_MUX_CTRL</name>
                <description>TSF0InputMuxCtrl TSF0 Input Multiplex Control  
0000: Data from TSG 
0001: Data from TS IN Port0 Others: Reserved   </description>
                <bitRange>[3:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Data_from_TSG</name>
                    <description>Data from TSG</description>
                    <value>0b0000</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Data_from_TS</name>
                    <description>Data from TS IN Port0 Others: Reserved</description>
                    <value>0b0001</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
        </cluster>
        <cluster>
          <name>TSD</name>
          <addressOffset>0x0</addressOffset>
          <register>
            <name>TSD_CTLR</name>
            <description>TSD Control Register</description>
            <addressOffset>0x0</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x3</resetMask>
            <fields>
              <field>
                <name>DESC_ARITH</name>
                <description>DescArith Descramble Arithmetic  
00: DVB CSA V1.1 Others: Reserved </description>
                <bitRange>[1:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>DVB</name>
                    <description>DVB CSA V1.1 Others: Reserved</description>
                    <value>0b00</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>TSD_CWIR</name>
            <description>TSD Control Word Index Register</description>
            <addressOffset>0x1C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x73</resetMask>
            <fields>
              <field>
                <name>CWI</name>
                <description>Control Word Index This value is the Control index for Control word access.  Range is from 0x0 to 0x7. </description>
                <bitRange>[6:4]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>CWII</name>
                <description>Control Word Internal Index  
00: Odd Control Word Low 32-bit, OCW[31:0] 
01: Odd Control Word High 32-bit, OCW[63:32] 
10: Even Control Word Low 32-bit, ECW[31:0] 
11: Even Control Word High 32-bit, ECW[63:0]  </description>
                <bitRange>[1:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Odd_Control_Word_Low</name>
                    <description>Odd Control Word Low 32-bit, OCW[31:0]</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Odd_Control_Word_High</name>
                    <description>Odd Control Word High 32-bit, OCW[63:32]</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Even_Control_Word_Low</name>
                    <description>Even Control Word Low 32-bit, ECW[31:0]</description>
                    <value>0b10</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Even_Control_Word_High</name>
                    <description>Even Control Word High 32-bit, ECW[63:0]</description>
                    <value>0b11</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
          <register>
            <name>TSD_CWR</name>
            <description>TSD Control Word Register</description>
            <addressOffset>0x20</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>CWD</name>
                <description>Content of Control Word corresponding to the TSD_CWIR value </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSD_STAR</name>
            <description>TSD Status Register</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x0</resetMask>
            <fields/>
          </register>
        </cluster>
        <cluster>
          <name>TSF</name>
          <addressOffset>0x0</addressOffset>
          <register>
            <name>TSF_CBBAR</name>
            <description>TSF Channel Buffer Base Address Register</description>
            <addressOffset>0x50</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFF</resetMask>
            <fields>
              <field>
                <name>TSF_BUF_B_ADDR</name>
                <description>TSFBufBAddr Data Buffer Base Address for Channel It is 4-word (16Bytes) align address. The LSB four bits should be zero.  </description>
                <bitRange>[27:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CBRPR</name>
            <description>TSF Channel Buffer Read Pointer Register</description>
            <addressOffset>0x5C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1FFFFF</resetMask>
            <fields>
              <field>
                <name>BUFRDPTR</name>
                <description>BufRdPtr Data Buffer Read Pointer (in Bytes) This pointer should be changed by software after the data of buffer is read.  </description>
                <bitRange>[20:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CBSZR</name>
            <description>TSF Channel Buffer Size Register</description>
            <addressOffset>0x54</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x31FFFFF</resetMask>
            <fields>
              <field>
                <name>CHDMA_INT_THD</name>
                <description>CHDMAIntThd DMA Interrupt Threshold for Channel The unit is TS packet size. When received packet (has also stored in DRAM) size is beyond (&gt;=) threshold value, the corresponding channel interrupt is generated to CPU. TSC should count the new received packet again, when exceed the specified threshold value, one new interrupt is generated again.  
00: 1/2 data buffer packet size 
01: 1/4 data buffer packet size 
10: 1/8 data buffer packet size 
11: 1/16 data buffer packet size </description>
                <bitRange>[25:24]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_1_slash_2_data</name>
                    <description>1/2 data buffer packet size</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_1_slash_4_data</name>
                    <description>1/4 data buffer packet size</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_1_slash_8_data</name>
                    <description>1/8 data buffer packet size</description>
                    <value>0b10</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_1_slash_16_data</name>
                    <description>1/16 data buffer packet size</description>
                    <value>0b11</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>CH_BUF_PKT_SZ</name>
                <description>CHBufPktSz Data Buffer Packet Size for Channel The exact buffer size of buffer is N+1 bytes.  The maximum buffer size is 2MB.  This size should be 4-word (16Bytes) aligned. The LSB four bits should be zero. </description>
                <bitRange>[20:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CBWPR</name>
            <description>TSF Channel Buffer Write Pointer Register</description>
            <addressOffset>0x58</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1FFFFF</resetMask>
            <fields>
              <field>
                <name>BUFWRPTR</name>
                <description>BufWrPtr Data Buffer Write Pointer (in Bytes) This value is changed by hardware, when data is filled into buffer, this pointer is increased.  And this pointer can be set by software, but it should not be changed by software during the corresponding channel is enabled.  </description>
                <bitRange>[20:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CCTLR</name>
            <description>TSF Channel Control Register</description>
            <addressOffset>0x40</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x0</resetMask>
            <fields/>
          </register>
          <register>
            <name>TSF_CCWIR</name>
            <description>TSF Channel CW Index Register</description>
            <addressOffset>0x48</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x7</resetMask>
            <fields>
              <field>
                <name>CWIND</name>
                <description>Related Control Word Index Index to the control word used by this channel when Descramble Enable of this channel enable. This alue is useless he the o espo di g Des a le E a le is .  </description>
                <bitRange>[2:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CDER</name>
            <description>TSF Channel Descramble Enable Register</description>
            <addressOffset>0x38</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DESCEN</name>
                <description>DescEn Descramble Enable for Channel 0~31  
0: Disable 
1: Enable  These bits should not be changed during the corresponding channel enable.  </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CENR</name>
            <description>TSF Channel Enable Register</description>
            <addressOffset>0x30</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>FILTEREN_FILTER_ENABLE_FOR_CHANNEL</name>
                <description>FilterEn Filter Enable for Channel 0~31  
0: Disable 
1: Enable  From Disable to Enable, internal status of the corresponding filter channel will be reset.  </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CINDR</name>
            <description>TSF Channel Index Register</description>
            <addressOffset>0x3C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x1F</resetMask>
            <fields>
              <field>
                <name>CHIND</name>
                <description>Channel Index This value is the channel index for channel private registers access.  Range is from 0x00 to 0x1f. Address range of channel private registers is 0x40~0x7f.  </description>
                <bitRange>[4:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CPER</name>
            <description>TSF Channel PES Enable Register</description>
            <addressOffset>0x34</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>PESEN</name>
                <description>PESEn PES Packet Enable for Channel 0~31  
0: Disable 
1: Enable  These bits should not be changed during the corresponding channel enable.  </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CPIDR</name>
            <description>TSF Channel PID Register</description>
            <addressOffset>0x4C</addressOffset>
            <resetValue>0x1FFF0000</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>PIDMSK</name>
                <description>Filter PID Mask for Channel </description>
                <bitRange>[31:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>PIDVAL</name>
                <description>Filter PID value for Channel  </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_CSTAR</name>
            <description>TSF Channel Status Register</description>
            <addressOffset>0x44</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x0</resetMask>
            <fields/>
          </register>
          <register>
            <name>TSF_DIER</name>
            <description>TSF DMA Interrupt Enable Register</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DMAIE</name>
                <description>DMA Interrupt Enable DMA interrupt enable bits for channel 0~31.  </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_DISR</name>
            <description>TSF DMA Interrupt Status Register</description>
            <addressOffset>0x18</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>DMAIS</name>
                <description>DMA Interrupt Status DMA interrupt status bits for channel 0~31. Set by hardware, and write 1 to clear it by software. When both these bits and the corresponding DMA Interrupt Enable bits set, the TSF interrupt will generate.   </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_OIER</name>
            <description>TSF Overlap Interrupt Enable Register</description>
            <addressOffset>0x14</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>OLPIE</name>
                <description>Overlap Interrupt Enable Overlap interrupt enable bits for channel 0~31. </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_OISR</name>
            <description>TSF Overlap Interrupt Status Register</description>
            <addressOffset>0x1C</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>OLPIS</name>
                <description>Overlap Interrupt Status Overlap interrupt status bits for channel 0~31. Set  ha d a e, a d a  e lea ed  soft a e iti g .  When both these bits and the corresponding Overlap Interrupt Enable bits set, the TSF interrupt will generate.   </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_PCRCR</name>
            <description>TSF PCR Control Register</description>
            <addressOffset>0x20</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0x11F01</resetMask>
            <fields>
              <field>
                <name>PCRDE</name>
                <description>PCR Detecting Enable  
0: Disable 
1: Enable </description>
                <bitRange>[16:16]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>Disable</name>
                    <description>Disable</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>Enable</name>
                    <description>Enable</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>PCRCIND</name>
                <description>Channel Index m for detecting PCR packet (m from 0 to 31) </description>
                <bitRange>[12:8]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>PCRLSB</name>
                <description>PCR Contest LSB 1 bit PCR[0] </description>
                <bitRange>[0:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_PCRDR</name>
            <description>TSF PCR Data Register</description>
            <addressOffset>0x24</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>PCRMSB</name>
                <description>PCR Data High 32 bits PCR[33:1]  </description>
                <bitRange>[31:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSF_PPR</name>
            <description>TSF Packet Parameter Register</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x470000</resetValue>
            <resetMask>0xFFFF0383</resetMask>
            <fields>
              <field>
                <name>LOST_SYNC_THD</name>
                <description>LostSyncThd Lost Sync Packet Threshold It is used for packet sync lost by checking the value of sync byte. </description>
                <bitRange>[31:28]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SYNCTHD</name>
                <description>SyncThd Sync Packet Threshold It is used for packet sync by checking the value of sync byte. </description>
                <bitRange>[27:24]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SYNC_BYTE_VAL</name>
                <description>SyncByteVal Sync Byte Value This is the value of sync byte used in the TS Packet. </description>
                <bitRange>[23:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SYNCMTHD</name>
                <description>SyncMthd Packet Sync Method  
00: By PSYNC signal 
01: By Sync byte 
10: By both PSYNC and Sync Byte 
11: Reserved </description>
                <bitRange>[9:8]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>By_PSYNC</name>
                    <description>By PSYNC signal</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>By_Sync</name>
                    <description>By Sync byte</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>By_both</name>
                    <description>By both PSYNC and Sync Byte</description>
                    <value>0b10</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>SYNC_BYTE_POS</name>
                <description>SyncBytePos Sync Byte Position  
0: The 1st byte position 
1: The 5th byte position  Note: This bit is only used for 192 bytes packet size. </description>
                <bitRange>[7:7]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_1st</name>
                    <description>The 1st byte position</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_5th</name>
                    <description>The 5th byte position  Note: This bit is only used for 192 bytes packet size.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>PKTSIZE</name>
                <description>PktSize Packet Size Byte Size for one TS packet  
00: 188 bytes 
01: 192 bytes 
10: 204 bytes 
11: Reserved  </description>
                <bitRange>[1:0]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_188</name>
                    <description>188 bytes</description>
                    <value>0b00</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_192</name>
                    <description>192 bytes</description>
                    <value>0b01</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_204</name>
                    <description>204 bytes</description>
                    <value>0b10</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
            </fields>
          </register>
        </cluster>
        <cluster>
          <name>TSG</name>
          <addressOffset>0x0</addressOffset>
          <register>
            <name>TSG_BBAR</name>
            <description>TSG Buffer Base Address Register</description>
            <addressOffset>0x10</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>TSG_BUF_BASE</name>
                <description>TSGBufBase Buffer Base Address This value is a start address of TSG buffer.  Note: This value should be 4-word (16Bytes) align, and the lowest 4 bits of this value should be zero. </description>
                <bitRange>[31:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSG_BPR</name>
            <description>TSG Buffer Pointer Register</description>
            <addressOffset>0x18</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>TSG_BUF_PTR</name>
                <description>TSGBufPtr Data Buffer Pointer for TS Generator Current TS generator data buffer read pointer (in byte unit)  </description>
                <bitRange>[23:0]</bitRange>
                <access>read-only</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSG_BSZR</name>
            <description>TSG Buffer Size Register</description>
            <addressOffset>0x14</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFF</resetMask>
            <fields>
              <field>
                <name>TSG_BUF_SIZE</name>
                <description>TSGBufSize Data Buffer Size for TS Generator It is in byte unit.  The size should be 4-word (16Bytes) align, and the lowest 4 bits should be zero. </description>
                <bitRange>[23:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSG_CCR</name>
            <description>TSG Clock Control Register</description>
            <addressOffset>0xC</addressOffset>
            <resetValue>0x0</resetValue>
            <resetMask>0xFFFFFFFF</resetMask>
            <fields>
              <field>
                <name>TSGCDF_N</name>
                <description>TSG Clock Divide Factor (N) The Numerator part of TSG Clock Divisor Factor.  </description>
                <bitRange>[31:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>TSGCDF_D</name>
                <description>TSG Clock Divide Factor (D) The Denominator part of TSG Clock Divisor Factor. Frequency of output clock: Fo = (Fi*(N+1))/(8*(D+1)). Fi is the input special clock of TSC, and D must not less than N.  </description>
                <bitRange>[15:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
          <register>
            <name>TSG_PPR</name>
            <description>TSG Packet Parameter Register</description>
            <addressOffset>0x4</addressOffset>
            <resetValue>0x470000</resetValue>
            <resetMask>0xFF0083</resetMask>
            <fields>
              <field>
                <name>SYNC_BYTE_VAL</name>
                <description>SyncByteVal Sync Byte Value This is the value of sync byte used in the TS Packet. </description>
                <bitRange>[23:16]</bitRange>
                <access>read-write</access>
              </field>
              <field>
                <name>SYNC_BYTE_POS</name>
                <description>SyncBytePos Sync Byte Position  
0: the 1st byte position 
1: the 5th byte position  Note: This bit is only used for 192 bytes packet size. </description>
                <bitRange>[7:7]</bitRange>
                <access>read-write</access>
                <enumeratedValues>
                  <enumeratedValue>
                    <name>_1st</name>
                    <description>the 1st byte position</description>
                    <value>0b0</value>
                  </enumeratedValue>
                  <enumeratedValue>
                    <name>_5th</name>
                    <description>the 5th byte position  Note: This bit is only used for 192 bytes packet size.</description>
                    <value>0b1</value>
                  </enumeratedValue>
                </enumeratedValues>
              </field>
              <field>
                <name>PKTSIZE</name>
                <description>PktSize Packet Size Byte Size for one TS packet  
0: 188 bytes Others: Reserved  </description>
                <bitRange>[1:0]</bitRange>
                <access>read-write</access>
              </field>
            </fields>
          </register>
        </cluster>
        <register>
          <name>TSC_CSR</name>
          <description>TSC_CSR</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3000307</resetMask>
          <fields>
            <field>
              <name>TSGSTS</name>
              <description>TSGSts Status for TS Generator  
00: IDLE state 
01: Running state 
10: PAUSE state Others: Reserved </description>
              <bitRange>[25:24]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>IDLE</name>
                  <description>IDLE state</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Running</name>
                  <description>Running state</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>PAUSE</name>
                  <description>PAUSE state Others: Reserved</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSGL_BUF_MODE</name>
              <description>TSGLBufMode Loop Buffer Mode Whe set to , the TSG e te al uffe is i loop ode. </description>
              <bitRange>[9:9]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSG_SYNC_BYTE_CHK_EN</name>
              <description>TSGSyncByteChkEn Sync Byte Check Enable Enable/Disable check SYNC byte for receiving new packet  
0: Disable 
1: Enable  If enable check SYNC byte and an error SYNC byte is receiver, TS Generator would come into PAUSE state. If the correspond interrupt is enable, the interrupt would happen. </description>
              <bitRange>[8:8]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  If enable check SYNC byte and an error SYNC byte is receiver, TS Generator would come into PAUSE state. If the correspond interrupt is enable, the interrupt would happen.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSG_PAUSE_BIT</name>
              <description>TSGPauseBit Pause Bit for TS Generator W ite  to pause TS Generator. TS Generator would stop fetch new data from DRAM. After finishing this operation, this bit will clear to zero by ha d a e. I PAUSE state, ite  to esu e this state. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSG_STOP_BIT</name>
              <description>TSGStopBit Stop Bit for TS Generator W ite  to s top TS Generator. TS Generator would stop fetch new data from DRAM. The data already in its FIFO should be sent to TS filter. After finishing this operation, this bit will clear to zero by hardware.  </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSG_START_BIT</name>
              <description>TSGStartBit Start Bit for TS Generator Write  to sta t TS Ge e ato . TS Ge e ato  ould fet h data f o DRAM and generate SPI stream to TS filter. This bit will clear to zero by hardware after TS Generator is running. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TSF_CSR</name>
          <description>TSF_CSR</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x5</resetMask>
          <fields>
            <field>
              <name>TSF</name>
              <description>Enable  
0: Disable TSF Input 
1: Enable TSF Input </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable TSF Input</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable TSF Input</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>R/W</name>
              <description>0 TSFGSR TSF Global Soft Reset W iti g  by software will reset all status and state machine of TSF. And it is cleared by hardware after reset. W iti g  by software has no effect.  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TSF_IESR</name>
          <description>TSF_IESR</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF000F</resetMask>
          <fields>
            <field>
              <name>TSFFOIE</name>
              <description>TS PID Filter (TSF) Internal FIFO Overrun Interrupt Enable  
0: Disable 
1: Enable </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSFPPDIE</name>
              <description>TS PCR Packet Detect Interrupt Enable  
0: Disable 
1: Enable </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSFCOIE</name>
              <description>TS PID Filter (TSF) Channel Overlap Interrupt Global Enable  
0: Disable 
1: Enable </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSFCDIE</name>
              <description>TS PID Filter (TSF) Channel DMA Interrupt Global Enable  
0: Disable 
1: Enable </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSFFOIS</name>
              <description>TS PID Filter (TSF) Internal FIFO Overrun Status W ite  to lea it. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSFPPDIS</name>
              <description>TS PCR Packet Found Status Whe it is , o e TS PCR Pa ket is fou d. W ite  to lea it. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSFCOIS</name>
              <description>TS PID Filter (TSF) Channel Overlap Status It is global status for 32 channel. It would clear to zero after all channels status bits are cleared. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TSFCDIS</name>
              <description>TS PID Filter (TSF) Channel DMA status It is global status for 32 channel. It would clear to zero after all channels status bits are cleared.  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TSG_IESR</name>
          <description>TSG_IESR</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xF000F</resetMask>
          <fields>
            <field>
              <name>TSGENDIE</name>
              <description>TSGEndIE TS Generator (TSG) End Interrupt Enable  
0: Disable 
1: Enable  If set this bit, the interrupt would assert to CPU when all data in external DRAM are sent to TS PID filter. </description>
              <bitRange>[19:19]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable  If set this bit, the interrupt would assert to CPU when all data in external DRAM are sent to TS PID filter.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSGFFIE</name>
              <description>TS Generator (TSG) Full Finish Interrupt Enable  
0: Disable 
1: Enable </description>
              <bitRange>[18:18]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSGHFIE</name>
              <description>TS Generator (TSG) Half Finish Interrupt Enable  
0: Disable 
1: Enable </description>
              <bitRange>[17:17]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSG_ERR_SYNC_BYTE_IE</name>
              <description>TSGErrSyncByteIE TS Generator (TSG) Error Sync Byte Interrupt Enable  
0: Disable 
1: Enable </description>
              <bitRange>[16:16]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TSG_END_STS</name>
              <description>TSGEndSts TS Generator (TSG) End Status W ite  to lea it. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSGFFSTS</name>
              <description>TSGFFSts TS Generator (TSG) Full Finish Status W ite  to lea it. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSGHFSTS</name>
              <description>TSGHFSts TS Generator (TSG) Half Finish Status W ite  to lea it. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>TSG_ERR_SYNC_BYTE_STS</name>
              <description>TSGErrSyncByteSts TS Generator (TSG) Error Sync Byte Status W ite  to lea it.  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="TSC">
      <name>TSG</name>
      <description>TSG</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C06040</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="TSC">
      <name>TSF0</name>
      <description>TSF0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C06100</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="TSC">
      <name>TSD0</name>
      <description>TSD0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C06180</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="TSC">
      <name>TSF1</name>
      <description>TSF1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C06200</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="TSC">
      <name>TSD1</name>
      <description>TSD1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C06280</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="TSC">
      <name>TSF2</name>
      <description>TSF2</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C06300</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="TSC">
      <name>TSD2</name>
      <description>TSD2</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C06380</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="TSC">
      <name>TSF3</name>
      <description>TSF3</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C06400</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="TSC">
      <name>TSD3</name>
      <description>TSD3</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C06480</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="TSC">
      <name>TSF4</name>
      <description>TSF4</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C06500</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="TSC">
      <name>TSD4</name>
      <description>TSD4</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C06580</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>R_TWI</name>
      <description>R_TWI</description>
      <groupName>generic</groupName>
      <baseAddress>0x1F02400</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>TWI_ADDR</name>
          <description>TWI Slave Address Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SLA</name>
              <description>Slave address 7-bit addressing SLA6, SLA5, SLA4, SLA3, SLA2, SLA1, SLA0 10-bit addressing 1, 1, 1, 1, 0, SLAX[9:8] </description>
              <bitRange>[7:1]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>GCE</name>
              <description>General call address enable  
0: Disable 
1: Enable  </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_CCR</name>
          <description>TWI Clock Control Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>CLK_M</name>
              <description></description>
              <bitRange>[6:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_N</name>
              <description>The TWI bus is sampled by the TWI at the frequency defined by F0: Fsamp = F0 = Fin / 2^CLK_N The TWI OSCL output frequency, in master mode, is F1 / 10: F1 = F0 / (CLK_M + 1) Foscl = F1 / 10 = Fin / (2^CLK_N * (CLK_M + 1)*10)  For Example  Fin = 48MHz (APB clock input) For 400KHz full speed 2Wire, CLK_N = 2, CLK_M=2 F0 = 48M/2^2=12MHz, F1= F0/(10*(2+1)) = 0.4MHz For 100KHz standard speed 2Wire, CLK_N=2, CLK_M=11 F0=48M/2^2=12MHz, F1=F0/(10*(11+1)) = 0.1MHz </description>
              <bitRange>[2:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_CNTR</name>
          <description>TWI Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFC</resetMask>
          <fields>
            <field>
              <name>INT_EN</name>
              <description>Interrupt Enable  
0: The interrupt line always low 
1: The interrupt line will go high when INT_FLAG is set. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>interrupt_line_always_low</name>
                  <description>The interrupt line always low</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>interrupt_line_will_go</name>
                  <description>The interrupt line will go high when INT_FLAG is set.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUS_EN</name>
              <description>TWI Bus Enable  
0: The TWI bus inputs ISDA/ISCL are ignored and the TWI controller will not  respond to any address on the bus 
1: The TWI will respond to call to its slave address - and to the general call  address if the GCE bit in the TWI_ADDR register is set.  Note:  I  aste ope atio  ode, this it should e set to . </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>TWI_bus</name>
                  <description>The TWI bus inputs ISDA/ISCL are ignored and the TWI controller will not  respond to any address on the bus</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>TWI_will_respond</name>
                  <description>The TWI will respond to call to its slave address - and to the general call  address if the GCE bit in the TWI_ADDR register is set.  Note:  I  aste ope atio  ode, this it should e set to .</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>M_STA</name>
              <description>Master Mode Start When M_STA  is set to , the TWI o t olle e te s aste  ode a d ill transmit a START condition on the bus when the bus is free. If M_STA is se t to  he the TWI o t olle is al ead i  aste  ode a d one or more bytes have been transmitted, then a repeated START condition will be sent.  If M_STA  is set to  he the TWI is a cessed in slave mode, the TWI will complete the data transfer in slave mode then enter master mode when the bus has been released. M_STA is cleared automatically after a START condition sent. W iti g a  to this it has o effe t. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>M_STP</name>
              <description>Master Mode Stop If M_STP  is set to  i  aste  ode, a STOP o ditio is t a s itted o the TWI bus. If M_STP  is set to  i  sla e ode, the TWI ill eha e as if a STOP condition has been received, but no STOP condition will be transmitted on the TWI bus.  If both M_STA and M_STP  are set, the TWI will first transmit the STOP condition (if in master mode) then transmit the START condition. M_STP is cleared automatically.  W iti g a  to this it has o effe t. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>INT_FLAG</name>
              <description>Interrupt Flag INT_FLAG  is auto ati all set to  he a of  out of the possi le 29) states is e te ed see TWI_STAT  elo . INT_FLAG  can not be set when TWI code state is F8h. If the INT_EN bit is set, the interrupt line goes high when INT_FLAG is set to .  If the TWI is operating in slave mode, data transfer is suspended when INT_FLAG  is set and the low period of the TWI bus clock line (SCL) is st et hed u til  is itte to INT_FLAG . The TWI clock line is then released and the interrupt line goes low. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>A_ACK</name>
              <description>Assert Acknowledge When A_ACK  is set to , a A k o ledge lo le el o SDA  ill e se t during the acknowledge clock pulse on the TWI bus if: (1). Either the whole of a matching 7-bit slave address or the first or the second byte of a matching 10-bit slave address has been received. (2). The general call address has been received and the GCE  bit in the TWI_ADDR  egiste is set to .  (3). A data byte has been received in master or slave mode. When A_ACK  is , a Not A k o ledge high le el o SDA  ill e se t he  a data byte is received in master or slave mode.  If A_ACK  is lea ed to  i  sla e t a nsmitter mode, the byte in the DATA egiste is assu ed to e the last te . Afte this te has ee t a s itted, the TWI will enter state C8h then return to the idle state (status code F8h) when INT_FLAG is cleared. The TWI will not respond as a slave unless A_ACK is set. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_DATA</name>
          <description>TWI Data Byte Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>TWI_DATA</name>
              <description>Data byte for transmitting or received </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_EFR</name>
          <description>TWI Enhance Feature Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x3</resetMask>
          <fields>
            <field>
              <name>DBN</name>
              <description>Data Byte number follow Read Command Control  
00: No Data Byte to be written after read command 
01: Only 1 byte data to be written after read command 
10: 2 bytes data can be written after read command 
11: 3 bytes data can be written after read command </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_Data</name>
                  <description>No Data Byte to be written after read command</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Only_1</name>
                  <description>Only 1 byte data to be written after read command</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2</name>
                  <description>2 bytes data can be written after read command</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_3</name>
                  <description>3 bytes data can be written after read command</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_LCR</name>
          <description>TWI Line Control Register</description>
          <addressOffset>0x20</addressOffset>
          <resetValue>0x3A</resetValue>
          <resetMask>0x3F</resetMask>
          <fields>
            <field>
              <name>SCL_STATE</name>
              <description>Current state of TWI_SCL  
0: Low 
1: High </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Low</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High</name>
                  <description>High</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDA_STATE</name>
              <description>Current state of TWI_SDA  
0: Low 
1: High </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Low</name>
                  <description>Low</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>High</name>
                  <description>High</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCL_CTL</name>
              <description>TWI_SCL line state control bit When line control mode is enabled ( SCL_CTL_EN  is set), this bit decide the output level of TWI_SCL.  
0: Output low level 
1: Output high level </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Output_low_level</name>
                  <description>Output low level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output_high_level</name>
                  <description>Output high level</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SCL_CTL_EN</name>
              <description>TWI_SCL line state control enable When this bit is set, the state of TWI_SCL is controlled by the value of SCL_CTL .  
0: Disable TWI_SCL line control mode 
1: Enable TWI_SCL line control mode </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable TWI_SCL line control mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable TWI_SCL line control mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDA_CTL</name>
              <description>TWI_SDA line state control bit When line control mode is enabled ( SDA_CTL_EN is set), this bit decides the output level of TWI_SDA.  
0: Output low level 
1: Output high level </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Output_low_level</name>
                  <description>Output low level</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Output_high_level</name>
                  <description>Output high level</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SDA_CTL_EN</name>
              <description>TWI_SDA line state control enable When this bit is set, the state of TWI_SDA is controlled by the value of SDA_CTL .  
0: Disable TWI_SDA line control mode 
1: Enable TWI_SDA line control mode </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable TWI_SDA line control mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable TWI_SDA line control mode</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_SRST</name>
          <description>TWI Software Reset Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x1</resetMask>
          <fields>
            <field>
              <name>SOFT_RST</name>
              <description>Soft Reset W ite  to this it to eset the TWI a d lea to  he  o pleti g Soft Reset operation. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_STAT</name>
          <description>TWI Status Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0xF8</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>STA</name>
              <description>Status Information Byte Code Status 
0x00: Bus error 
0x08: START condition transmitted 
0x10: Repeated START condition transmitted 
0x18: Address + Write bit transmitted, ACK received 
0x20: Address + Write bit transmitted, ACK not received 
0x28: Data byte transmitted in master mode, ACK received 
0x30: Data byte transmitted in master mode, ACK not received 
0x38: Arbitration lost in address or data byte 
0x40: Address + Read bit transmitted, ACK received 
0x48: Address + Read bit transmitted, ACK not received 
0x50: Data byte received in master mode, ACK transmitted 
0x58: Data byte received in master mode, ACK not transmitted 
0x60: Slave address + Write bit received, ACK transmitted 
0x68: Arbitration lost in address as master, slave address + Write bit received, ACK transmitted 
0x70: General Call address received, ACK transmitted 
0x78: Arbitration lost in address as master, General Call address received, ACK transmitted 
0x80: Data byte received after slave address received, ACK transmitted 
0x88: Data byte received after slave address received, ACK not transmitted 
0x90: Data byte received after General Call received, ACK transmitted 
0x98: Data byte received after General Call received, ACK not transmitted 
0xA0: STOP or repeated START condition received in slave mode 
0xA8: Slave address + Read bit received, ACK transmitted 
0xB0: Arbitration lost in address as master, slave address + Read bit received, ACK transmitted 
0xB8: Data byte transmitted in slave mode, ACK received 
0xC0: Data byte transmitted in slave mode, ACK not received 
0xC8: Last byte transmitted in slave mode, ACK received 
0xD0: Second Address byte + Write bit transmitted, ACK received 
0xD8: Second Address byte + Write bit transmitted, ACK not received 
0xF8: No relevant status information, INT_FLAG=0 Others: Reserved </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TWI_XADDR</name>
          <description>TWI Extended Slave Address Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SLAX</name>
              <description>Extend Slave Address SLAX[7:0] </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral derivedFrom="R_TWI">
      <name>TWI0</name>
      <description>TWI0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C2AC00</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="R_TWI">
      <name>TWI1</name>
      <description>TWI1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C2B000</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral derivedFrom="R_TWI">
      <name>TWI2</name>
      <description>TWI2</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C2B400</baseAddress>
      <access>read-write</access>
    </peripheral>
    <peripheral>
      <name>UART0</name>
      <description>UART0</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C28000</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>UART_DLH</name>
          <description>UART Divisor Latch High Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLH</name>
              <description>Divisor Latch High  Upper 8 bits of a 16-bit, read/write, Divisor Latch register contains the baud rate divisor for the UART. This register may only be accessed when the DLAB  bit (LCR[7]) is set and the UART is not busy ( UART Busy = 0). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows:  baud rate = (serial clock freq) / (16 * divisor)  Note that with the Divisor Latch Registers ( DLL  and DLH ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the DLH is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLL</name>
          <description>UART Divisor Latch Low Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLL</name>
              <description>Divisor Latch Low  Lower 8 bits of a 16-bit, read/write, Divisor Latch register contains the baud rate divisor for the UART. This register may only be accessed when the DLAB  bit (LCR[7]) is set and the UART is not busy ( UART Busy = 0). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows:  baud rate = (serial clock freq) / (16 * divisor)  Note that with the Divisor Latch Registers ( DLL  and DLH ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the DLL is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <description>UART FIFO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RT</name>
              <description>RCVR Trigger This is used to select the trigger level in the receiver FIFO at which the Received Data Available Interrupt is generated. In auto flow control mode it is used to determine when the rts_n signal is de-asserted. It also determines when the dma_rx_req_n signal is asserted in certain modes of operation.  
00: 1 character in the FIFO 
01: FIFO 25% full 
10: FIFO 50% full 
11: FIFO-2 less than full </description>
              <bitRange>[7:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_character</name>
                  <description>1 character in the FIFO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_minus_2_less</name>
                  <description>FIFO-2 less than full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFT</name>
              <description>TX Empty Trigger Writes have no effect when THRE_MODE_USER = Disabled. This is used to select the empty threshold level at which the THRE Interrupts are generated when the mode is active. It also determines when the dma_tx_req_n signal is asserted when in certain modes of operation.  
00: FIFO empty 
01: 2 characters in the FIFO 
10: FIFO 25% full 
11: FIFO 50% full </description>
              <bitRange>[5:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_characters</name>
                  <description>2 characters in the FIFO</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAM</name>
              <description>DMA Mode  
0: Mode 0 
1: Mode 1 </description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mode_0</name>
                  <description>Mode 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mode_1</name>
                  <description>Mode 1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XFIFOR</name>
              <description>XMIT FIFO Reset This resets the control portion of the transmit FIFO and treats the FIFO as empty. This also de-asserts the DMA TX request.  It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RFIFOR</name>
              <description>RCVR FIFO Reset This resets the control portion of the receive FIFO and treats the FIFO as empty. This also de-asserts the DMA RX request. It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FIFOE</name>
              <description>Enable FIFOs This enables/disables the transmit (XMIT) and receive (RCVR) FIFOs. Whenever the value of this bit is changed both the XMIT and RCVR controller portion of FIFOs is reset. </description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HALT</name>
          <description>UART Halt TX Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x37</resetMask>
          <fields>
            <field>
              <name>SIR_RX_INVERT</name>
              <description>SIR Receiver Pulse Polarity Invert  
0: Not invert receiver signal 
1: Invert receiver signal </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIR_TX_INVERT</name>
              <description>SIR Transmit Pulse Polarity Invert  
0: Not invert transmit pulse 
1: Invert transmit pulse </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert transmit pulse</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert transmit pulse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANGE_UPDATE</name>
              <description>After the user use HALT[1] to change the baud rate or UART_LCR  configuration. Write 1 to update the configuration and waiting this bit self clear to 0 to finish update process.  Writing 0 to this bit has no effect.  
1: Update trigger, Self clear to 0 when finish update. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update trigger, Self clear to 0 when finish update.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHCFG_AT_BUSY</name>
              <description>This is an enable bit for the user to change UART_LCR register configuration (except for the DLAB  bit) and baud rate register ( DLL and DLH ) when the UART is busy.  
1: Enable change when busy   </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable change when busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT_TX</name>
              <description>Halt TX This register is used to halt transmissions for testing, so that the transmit FIFO can be filled by the master when FIFOs are implemented and enabled.  0 : Halt TX disabled 1 : Halt TX enabled  Note:  If FIFOs are not enabled, the setting of the halt TX register has no effect on operation. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <description>UART Interrupt Enable Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8F</resetMask>
          <fields>
            <field>
              <name>PTIME</name>
              <description>Programmable THRE Interrupt Mode Enable This is used to enable/disable the generation of THRE Interrupt.  
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EDSSI</name>
              <description>Enable Modem Status Interrupt This is used to enable/disable the generation of Modem Status Interrupt. This is the fourth highest priority interrupt.  
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ELSI</name>
              <description>Enable Receiver Line Status Interrupt This is used to enable/disable the generation of Receiver Line Status Interrupt. This is the highest priority interrupt.  
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETBEI</name>
              <description>Enable Transmit Holding Register Empty Interrupt This is used to enable/disable the generation of Transmitter Holding Register Empty Interrupt. This is the third highest priority interrupt.  
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERBFI</name>
              <description>Enable Received Data Available Interrupt This is used to enable/disable the generation of Received Data Available Interrupt and the Character Timeout Interrupt (if in FIFO mode and FIFOs enabled). These are the second highest priority interrupts.  
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <description>UART Interrupt Identity Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xCF</resetMask>
          <fields>
            <field>
              <name>FEFLAG</name>
              <description>FIFOs Enable Flag This is used to indicate whether the FIFOs are enabled or disabled.  
00: Disable 
11: Enable </description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IID</name>
              <description>Interrupt ID This indicates the highest priority pending interrupt which can be one of the following types:  
0000: modem status 
0001: no interrupt pending 
0010: THR empty 
0100: received data available 
0110: receiver line status 
0111: busy detect 
1100: character timeout  Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>modem_status</name>
                  <description>modem status</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>no interrupt pending</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>THR_empty</name>
                  <description>THR empty</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>received_data</name>
                  <description>received data available</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>receiver_line</name>
                  <description>receiver line status</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy_detect</name>
                  <description>busy detect</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>character_timeout</name>
                  <description>character timeout  Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <description>UART Line Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access Bit It is writable only when UART is not busy ( UART Busy  = 0) and always readable. This bit is used to enable reading and writing of the Divisor Latch register ( UART_DLL  and UART_DLH ) to set the baud rate of the UART. This bit must be cleared after initial baud rate setup in order to access other registers.  
0: Select RX Buffer Register ( UART_RBR ) / TX Holding Register( UART_THR ) and Interrupt Enable Register ( UART_IER ) 
1: Select Divisor Latch Low Register ( UART_DLL ) and Divisor Latch High Register ( UART_DLH ) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select_RX</name>
                  <description>Select RX Buffer Register ( UART_RBR ) / TX Holding Register( UART_THR ) and Interrupt Enable Register ( UART_IER )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select_Divisor</name>
                  <description>Select Divisor Latch Low Register ( UART_DLL ) and Divisor Latch High Register ( UART_DLH )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BC</name>
              <description>Break Control Bit This is used to cause a break condition to be transmitted to the receiving device. If set to one the serial output is forced to the spacing (logic 0) state. When not in Loop Back Mode , as determined by UART_MCR[4] , the sout line is forced low until the Break bit is cleared. If SIR_MODE = Enabled and active ( UART_MCR[6]  is set to 1) the sir_out_n line is continuously pulsed. When in Loop Back Mode , the break condition is internally looped back to the receiver and the sir_out_n line is forced low. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EPS</name>
              <description>Even Parity Select It is writable only when UART is not busy ( UART Busy  = 0) .This is used to select even and odd parity when parity is enabled ( PEN is set to one). Setting the bit5 is to reverse the bit4.   
00: Odd Parity 
01: Even Parity 
1X: Reverse LCR[4] </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Odd</name>
                  <description>Odd Parity</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Even</name>
                  <description>Even Parity</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reverse</name>
                  <description>Reverse LCR[4]</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PEN</name>
              <description>Parity Enable It is writable only when UART is not busy ( UART Busy  = 0) and always readable. This bit is used to enable and disable parity generation and detection in transmitted and received serial character respectively.  
0: Parity disabled 
1: Parity enabled </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Parity_disabled</name>
                  <description>Parity disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Parity_enabled</name>
                  <description>Parity enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP</name>
              <description>Number of stop bits It is writable only when UART is not busy ( UART Busy  = 0) and always readable. This is used to select the number of stop bits per character that the peripheral transmits and receives. If the bit is set to zero, one stop bit is transmitted in the serial data. If the bit is set to one and the Data Length  are set to 5 bits ( DLS =0) one and a half stop bits is transmitted. Otherwise, two stop bits are transmitted. Note that regardless of the number of stop bits selected, the receiver checks only the first stop bit.  
0: 1 stop bit 
1: 1.5 stop bits when DLS is zero, else 2 stop bit </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 stop bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_5</name>
                  <description>1.5 stop bits when DLS is zero, else 2 stop bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLS</name>
              <description>Data Length Select It is writable only when UART is not busy ( UART Busy ) and always readable. This is used to select the number of data bits per character that the peripheral transmits and receives. The number of bit that may be selected is as follows:  
00: 5 bits 
01: 6 bits 
10: 7 bits 
11: 8 bits </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5_bits</name>
                  <description>5 bits</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_bits</name>
                  <description>6 bits</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_bits</name>
                  <description>7 bits</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bits</name>
                  <description>8 bits</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <description>UART Line Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x60</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFOERR</name>
              <description>RX Data Error in FIFO When FIFOs are disabled, this bit is always 0. When FIFOs are enabled, this bit is set to 1 when there is at least one PE, FE, or BI in the RX FIFO. It is cleared by a read from the UART_LSR  register provided there are no subsequent errors in the FIFO. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TEMT</name>
              <description>Transmitter Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register and the TX Shift Register are empty. If the FIFOs are enabled, this bit is set whenever the TX FIFO and the TX Shift Register  are empty. In both cases, this bit is cleared when a byte is written to the TX data channel. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>THRE</name>
              <description>TX Holding Register Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register  is empty and ready to accept new data and it is cleared when the CPU writes to the TX Holding Register . If the FIFOs are enabled, this bit is set to "1" whenever the TX FIFO is empty and it is cleared when at least one byte is written to the TX FIFO. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BI</name>
              <description>Break Interrupt This is used to indicate the detection of a break sequence on the serial input data.  In UART mode ( SIRE = 0), it is set whenever the serial input, sin, is held in a logic '0' state for longer than the sum of + + + . In infrared mode ( SIRE  = 1), it is set whenever the serial input, sir_in, is continuously pulsed to logic '0' for longer than the sum of + + + . A break condition on serial input causes one and only one character, consisting of all zeros, to be received by the UART. In the FIFO mode, the character associated with the break condition is carried through the FIFO and is revealed when the character is at the top of the FIFO. Reading the LSR clears the BI  bit. In the non-FIFO mode, the BI  indication occurs immediately and persists until the LSR is read. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FE</name>
              <description>Framing Error This is used to indicate the occurrence of a framing error in the receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received data. In the FIFO mode, since the framing error is associated with a character received, it is revealed when the character with the framing error is at the top of the FIFO. When a framing error occurs, the UART tries to resynchronize. It does this by assuming that the error was due to the start bit of the next character and then continues receiving the other bit i.e. data, and/or parity and stop. It should be noted that the FE  bit is set if a break interrupt has occurred, as indicated by the BI bit.  
0: No framing error 
1: Framing error  Reading the LSR clears the FE bit. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_framing</name>
                  <description>No framing error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Framing</name>
                  <description>Framing error  Reading the LSR clears the FE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE</name>
              <description>Parity Error This is used to indicate the occurrence of a parity error in the receiver if the PEN  bit is set. In the FIFO mode, since the parity error is associated with a character received, it is revealed when the character with the parity error arrives at the top of the FIFO. It should be noted that the PE  bit is set if a break interrupt has occurred, as indicated by the Break Interrupt bit.  
0: No parity error 
1: Parity error  Reading the LSR clears the PE bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_parity</name>
                  <description>No parity error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Parity</name>
                  <description>Parity error  Reading the LSR clears the PE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OE</name>
              <description>Overrun Error This occurs if a new data character was received before the previous data was read. In the non-FIFO mode, the OE  bit is set when a new character arrives in the receiver before the previous character was read from the Receiver Buffer Register . When this happens, the data in the Receiver Buffer Register  is overwritten. In the FIFO mode, an overrun error occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is retained and the data in the receive shift register is lost.  
0: No overrun error 
1: Overrun error  Reading the LSR clears the OE bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_overrun</name>
                  <description>No overrun error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Overrun</name>
                  <description>Overrun error  Reading the LSR clears the OE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DR</name>
              <description>Data Ready This is used to indicate that the receiver contains at least one character in the Receiver Buffer Register or the receiver FIFO.  
0: No data ready 
1: Data ready  This bit is cleared when the Receiver Buffer Register  is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_data</name>
                  <description>No data ready</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data ready  This bit is cleared when the Receiver Buffer Register  is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <description>UART Modem Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x73</resetMask>
          <fields>
            <field>
              <name>SIRE</name>
              <description>SIR Mode Enable  
0: IrDA SIR mode disable 
1: IrDA SIR mode enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>IrDA SIR mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>IrDA SIR mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AFCE</name>
              <description>Auto Flow Control Enable When FIFOs are enabled and the Auto Flow Control Enable ( AFCE ) bit is set, Auto Flow Control features are enabled.  
0: Auto Flow Control Mode disable 
1: Auto Flow Control Mode enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Auto Flow Control Mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Auto Flow Control Mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Mode  
0: Normal Mode 
1: Loop Back Mode  This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, UART_MCR[6]  is set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in Loop Back Mode , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, UART_MCR[6] set to 1), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop Back Mode  This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, UART_MCR[6]  is set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in Loop Back Mode , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, UART_MCR[6] set to 1), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTS</name>
              <description>Request to Send This is used to directly control the Request to Send (rts_n) output. The Request To Send (rts_n) output is used to inform the modem or data set that the UART is ready to exchange data. When Auto RTS Flow Control is not enabled ( AFCE  = 0), the rts_n signal is set low by programming RTS  to a high.In Auto Flow Control, AFCE_MODE == Enabled and active ( AFCE = 1) and FIFOs enable ( FIFOE =1), the rts_n output is controlled in the same way, but is also gated with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The rts_n signal is de-asserted when RTS  is set low.  
0: rts_n de-asserted (logic 1) 
1: rts_n asserted (logic 0)  Note that in Loopback mode ( LOOP =1), the rts_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>rts_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>rts_n asserted (logic 0)  Note that in Loopback mode ( LOOP =1), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Terminal Ready This is used to directly control the DTR (dtr_n) output. The value written to this location is inverted and driven out on dtr_n.  
0: dtr_n de-asserted (logic 1) 
1: dtr_n asserted (logic 0)  The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode ( LOOP  =1), the dtr_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>dtr_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>dtr_n asserted (logic 0)  The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode ( LOOP  =1), the dtr_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <description>UART Modem Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DCD</name>
              <description>Line State of Data Carrier Detect This is used to indicate the current state of the modem control line dcd_n. This bit is the complement of dcd_n. When the Data Carrier Detect  input (dcd_n) is asserted it is an indication that the carrier has been detected by the modem or data set.  
0: dcd_n input is de-asserted (logic 1) 
1: dcd_n input is asserted (logic 0) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dcd_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dcd_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RI</name>
              <description>Line State of Ring Indicator This is used to indicate the current state of the modem control line ri_n. This bit is the complement of ri_n. When the Ring Indicator  input (ri_n) is asserted it is an indication that a telephone ringing signal has been received by the modem or data set.  
0: ri_n input is de-asserted (logic 1) 
1: ri_n input is asserted (logic 0) </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>ri_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>ri_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSR</name>
              <description>Line State of Data Set Ready This is used to indicate the current state of the modem control line dsr_n. This bit is the complement of dsr_n. When the Data Set Ready input (dsr_n) is asserted it is an indication that the modem or data set is ready to establish communications with UART.  
0: dsr_n input is de-asserted (logic 1) 
1: dsr_n input is asserted (logic 0)  In Loop Back Mode (MCR[4] set to one), DSR is the same as MCR[0] ( DTR ). </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dsr_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dsr_n input is asserted (logic 0)  In Loop Back Mode (MCR[4] set to one), DSR is the same as MCR[0] ( DTR ).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTS</name>
              <description>Line State of Clear To Send This is used to indicate the current state of the modem control line cts_n. This bit is the complement of cts_n. When the Clear To Send input (cts_n) is asserted it is an indication that the modem or data set is ready to exchange data with UART.  
0: cts_n input is de-asserted (logic 1) 
1: cts_n input is asserted (logic 0)  In Loop Back Mode (MCR[4] = 1), CTS is the same as MCR[1] ( RTS ). </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>cts_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>cts_n input is asserted (logic 0)  In Loop Back Mode (MCR[4] = 1), CTS is the same as MCR[1] ( RTS ).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDCD</name>
              <description>Delta Data Carrier Detect This is used to indicate that the modem control line dcd_n has changed since the last time the MSR was read.  
0: no change on dcd_n since last read of MSR 
1: change on dcd_n since last read of MSR  Reading the MSR clears the DDCD bit. Note: If the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dcd_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dcd_n since last read of MSR  Reading the MSR clears the DDCD bit. Note: If the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TERI</name>
              <description>Trailing Edge Ring Indicator This is used to indicate that a change on the input ri_n (from an active-low to an inactive-high state) has occurred since the last time the MSR was read.  
0: no change on ri_n since last read of MSR 
1: change on ri_n since last read of MSR  Reading the MSR clears the TERI bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ri_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ri_n since last read of MSR  Reading the MSR clears the TERI bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDSR</name>
              <description>Delta Data Set Ready This is used to indicate that the modem control line dsr_n has changed since the last time the MSR was read.  
0: no change on dsr_n since last read of MSR 
1: change on dsr_n since last read of MSR  Reading the MSR clears the DDSR  bit. In Loop Back Mode  (MCR[4] = 1), DDSR reflects changes on MCR[0] ( DTR ).  Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dsr_n since last read of MSR  Reading the MSR clears the DDSR  bit. In Loop Back Mode  (MCR[4] = 1), DDSR reflects changes on MCR[0] ( DTR ).  Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCTS</name>
              <description>Delta Clear to Send This is used to indicate that the modem control line cts_n has changed since the last time the MSR was read.  
0: no change on ctsdsr_n since last read of MSR 
1: change on ctsdsr_n since last read of MSR  Reading the MSR clears the DCTS bit. In Loop Back Mode (MCR[4] = 1), DCTS reflects changes on MCR[1] ( RTS ). Note:  If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset is removed if the cts_n signal remains asserted. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ctsdsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ctsdsr_n since last read of MSR  Reading the MSR clears the DCTS bit. In Loop Back Mode (MCR[4] = 1), DCTS reflects changes on MCR[1] ( RTS ). Note:  If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset is removed if the cts_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR</name>
          <description>UART Receive Buffer Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RBR</name>
              <description>Receiver Buffer Register Data byte received on the serial input port (sin) in UART mode, or the serial infrared input (sir_in) in infrared mode. The data in this register is valid only if the Data Ready bit in the UART_LSR register is set.  If in FIFO mode and FIFOs are enabled ( FIFOE = 1), this register accesses the head of the receive FIFO. If the receive FIFO is full and this register is not read before the next data character arrives, then the data already in the FIFO is preserved, but any incoming data are lost and an overrun error occurs. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RFL</name>
          <description>UART Receive FIFO Level</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RFL</name>
              <description>Receive FIFO Level This is indicates the number of data entries in the receive FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCH</name>
          <description>UART Scratch Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SCRATCH_REG</name>
              <description>Scratch Register This register is for programmers to use as a temporary storage space. It has no defined purpose in the UART.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_TFL</name>
          <description>UART Transmit FIFO Level</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>TFL</name>
              <description>Transmit FIFO Level This is indicates the number of data entries in the transmit FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR</name>
          <description>UART Transmit Holding Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>THR</name>
              <description>Transmit Holding Register Data to be transmitted on the serial output port (sout) in UART mode or the serial infrared output (sir_out_n) in infrared mode. Data should only be written to THR when the THRE bit is set.   If in FIFO mode and FIFOs are enabled ( FIFOE  = 1) and THRE  is set, 16 number of characters of data may be written to the THR before the FIFO is full. Any write data operations when the FIFO is full causes the write data loss. </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_USR</name>
          <description>UART Status Register</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Full This is used to indicate that the receive FIFO is completely full.  
0: Receive FIFO not full 
1: Receive FIFO Full  This bit is cleared when the RX FIFO is no longer full. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_FIFO_not_full</name>
                  <description>Receive FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_FIFO_Full</name>
                  <description>Receive FIFO Full  This bit is cleared when the RX FIFO is no longer full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty This is used to indicate that the receive FIFO contains one or more entries.  
0: Receive FIFO is empty 
1: Receive FIFO is not empty  This bit is cleared when the RX FIFO is empty. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Receive FIFO is empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Receive FIFO is not empty  This bit is cleared when the RX FIFO is empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Empty This is used to indicate that the transmit FIFO is completely empty.  
0: Transmit FIFO is not empty 
1: Transmit FIFO is empty  This bit is cleared when the TX FIFO is no longer empty. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Transmit FIFO is not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Transmit FIFO is empty  This bit is cleared when the TX FIFO is no longer empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full This is used to indicate that the transmit FIFO in not full.  
0: Transmit FIFO is full 
1: Transmit FIFO is not full  This bit is cleared when the TX FIFO is full. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>full</name>
                  <description>Transmit FIFO is full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_full</name>
                  <description>Transmit FIFO is not full  This bit is cleared when the TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSY</name>
              <description>UART Busy Bit  
0: Idle or inactive 
1: Busy </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle or inactive</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>UART1</name>
      <description>UART1</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C28400</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>UART_DLH</name>
          <description>UART Divisor Latch High Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLH</name>
              <description>Divisor Latch High  Upper 8 bits of a 16-bit, read/write, Divisor Latch register contains the baud rate divisor for the UART. This register may only be accessed when the DLAB  bit (LCR[7]) is set and the UART is not busy ( UART Busy = 0). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows:  baud rate = (serial clock freq) / (16 * divisor)  Note that with the Divisor Latch Registers ( DLL  and DLH ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the DLH is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLL</name>
          <description>UART Divisor Latch Low Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLL</name>
              <description>Divisor Latch Low  Lower 8 bits of a 16-bit, read/write, Divisor Latch register contains the baud rate divisor for the UART. This register may only be accessed when the DLAB  bit (LCR[7]) is set and the UART is not busy ( UART Busy = 0). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows:  baud rate = (serial clock freq) / (16 * divisor)  Note that with the Divisor Latch Registers ( DLL  and DLH ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the DLL is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <description>UART FIFO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RT</name>
              <description>RCVR Trigger This is used to select the trigger level in the receiver FIFO at which the Received Data Available Interrupt is generated. In auto flow control mode it is used to determine when the rts_n signal is de-asserted. It also determines when the dma_rx_req_n signal is asserted in certain modes of operation.  
00: 1 character in the FIFO 
01: FIFO 25% full 
10: FIFO 50% full 
11: FIFO-2 less than full </description>
              <bitRange>[7:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_character</name>
                  <description>1 character in the FIFO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_minus_2_less</name>
                  <description>FIFO-2 less than full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFT</name>
              <description>TX Empty Trigger Writes have no effect when THRE_MODE_USER = Disabled. This is used to select the empty threshold level at which the THRE Interrupts are generated when the mode is active. It also determines when the dma_tx_req_n signal is asserted when in certain modes of operation.  
00: FIFO empty 
01: 2 characters in the FIFO 
10: FIFO 25% full 
11: FIFO 50% full </description>
              <bitRange>[5:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_characters</name>
                  <description>2 characters in the FIFO</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAM</name>
              <description>DMA Mode  
0: Mode 0 
1: Mode 1 </description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mode_0</name>
                  <description>Mode 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mode_1</name>
                  <description>Mode 1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XFIFOR</name>
              <description>XMIT FIFO Reset This resets the control portion of the transmit FIFO and treats the FIFO as empty. This also de-asserts the DMA TX request.  It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RFIFOR</name>
              <description>RCVR FIFO Reset This resets the control portion of the receive FIFO and treats the FIFO as empty. This also de-asserts the DMA RX request. It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FIFOE</name>
              <description>Enable FIFOs This enables/disables the transmit (XMIT) and receive (RCVR) FIFOs. Whenever the value of this bit is changed both the XMIT and RCVR controller portion of FIFOs is reset. </description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HALT</name>
          <description>UART Halt TX Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x37</resetMask>
          <fields>
            <field>
              <name>SIR_RX_INVERT</name>
              <description>SIR Receiver Pulse Polarity Invert  
0: Not invert receiver signal 
1: Invert receiver signal </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIR_TX_INVERT</name>
              <description>SIR Transmit Pulse Polarity Invert  
0: Not invert transmit pulse 
1: Invert transmit pulse </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert transmit pulse</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert transmit pulse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANGE_UPDATE</name>
              <description>After the user use HALT[1] to change the baud rate or UART_LCR  configuration. Write 1 to update the configuration and waiting this bit self clear to 0 to finish update process.  Writing 0 to this bit has no effect.  
1: Update trigger, Self clear to 0 when finish update. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update trigger, Self clear to 0 when finish update.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHCFG_AT_BUSY</name>
              <description>This is an enable bit for the user to change UART_LCR register configuration (except for the DLAB  bit) and baud rate register ( DLL and DLH ) when the UART is busy.  
1: Enable change when busy   </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable change when busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT_TX</name>
              <description>Halt TX This register is used to halt transmissions for testing, so that the transmit FIFO can be filled by the master when FIFOs are implemented and enabled.  0 : Halt TX disabled 1 : Halt TX enabled  Note:  If FIFOs are not enabled, the setting of the halt TX register has no effect on operation. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <description>UART Interrupt Enable Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8F</resetMask>
          <fields>
            <field>
              <name>PTIME</name>
              <description>Programmable THRE Interrupt Mode Enable This is used to enable/disable the generation of THRE Interrupt.  
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EDSSI</name>
              <description>Enable Modem Status Interrupt This is used to enable/disable the generation of Modem Status Interrupt. This is the fourth highest priority interrupt.  
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ELSI</name>
              <description>Enable Receiver Line Status Interrupt This is used to enable/disable the generation of Receiver Line Status Interrupt. This is the highest priority interrupt.  
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETBEI</name>
              <description>Enable Transmit Holding Register Empty Interrupt This is used to enable/disable the generation of Transmitter Holding Register Empty Interrupt. This is the third highest priority interrupt.  
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERBFI</name>
              <description>Enable Received Data Available Interrupt This is used to enable/disable the generation of Received Data Available Interrupt and the Character Timeout Interrupt (if in FIFO mode and FIFOs enabled). These are the second highest priority interrupts.  
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <description>UART Interrupt Identity Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xCF</resetMask>
          <fields>
            <field>
              <name>FEFLAG</name>
              <description>FIFOs Enable Flag This is used to indicate whether the FIFOs are enabled or disabled.  
00: Disable 
11: Enable </description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IID</name>
              <description>Interrupt ID This indicates the highest priority pending interrupt which can be one of the following types:  
0000: modem status 
0001: no interrupt pending 
0010: THR empty 
0100: received data available 
0110: receiver line status 
0111: busy detect 
1100: character timeout  Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>modem_status</name>
                  <description>modem status</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>no interrupt pending</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>THR_empty</name>
                  <description>THR empty</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>received_data</name>
                  <description>received data available</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>receiver_line</name>
                  <description>receiver line status</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy_detect</name>
                  <description>busy detect</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>character_timeout</name>
                  <description>character timeout  Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <description>UART Line Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access Bit It is writable only when UART is not busy ( UART Busy  = 0) and always readable. This bit is used to enable reading and writing of the Divisor Latch register ( UART_DLL  and UART_DLH ) to set the baud rate of the UART. This bit must be cleared after initial baud rate setup in order to access other registers.  
0: Select RX Buffer Register ( UART_RBR ) / TX Holding Register( UART_THR ) and Interrupt Enable Register ( UART_IER ) 
1: Select Divisor Latch Low Register ( UART_DLL ) and Divisor Latch High Register ( UART_DLH ) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select_RX</name>
                  <description>Select RX Buffer Register ( UART_RBR ) / TX Holding Register( UART_THR ) and Interrupt Enable Register ( UART_IER )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select_Divisor</name>
                  <description>Select Divisor Latch Low Register ( UART_DLL ) and Divisor Latch High Register ( UART_DLH )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BC</name>
              <description>Break Control Bit This is used to cause a break condition to be transmitted to the receiving device. If set to one the serial output is forced to the spacing (logic 0) state. When not in Loop Back Mode , as determined by UART_MCR[4] , the sout line is forced low until the Break bit is cleared. If SIR_MODE = Enabled and active ( UART_MCR[6]  is set to 1) the sir_out_n line is continuously pulsed. When in Loop Back Mode , the break condition is internally looped back to the receiver and the sir_out_n line is forced low. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EPS</name>
              <description>Even Parity Select It is writable only when UART is not busy ( UART Busy  = 0) .This is used to select even and odd parity when parity is enabled ( PEN is set to one). Setting the bit5 is to reverse the bit4.   
00: Odd Parity 
01: Even Parity 
1X: Reverse LCR[4] </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Odd</name>
                  <description>Odd Parity</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Even</name>
                  <description>Even Parity</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reverse</name>
                  <description>Reverse LCR[4]</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PEN</name>
              <description>Parity Enable It is writable only when UART is not busy ( UART Busy  = 0) and always readable. This bit is used to enable and disable parity generation and detection in transmitted and received serial character respectively.  
0: Parity disabled 
1: Parity enabled </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Parity_disabled</name>
                  <description>Parity disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Parity_enabled</name>
                  <description>Parity enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP</name>
              <description>Number of stop bits It is writable only when UART is not busy ( UART Busy  = 0) and always readable. This is used to select the number of stop bits per character that the peripheral transmits and receives. If the bit is set to zero, one stop bit is transmitted in the serial data. If the bit is set to one and the Data Length  are set to 5 bits ( DLS =0) one and a half stop bits is transmitted. Otherwise, two stop bits are transmitted. Note that regardless of the number of stop bits selected, the receiver checks only the first stop bit.  
0: 1 stop bit 
1: 1.5 stop bits when DLS is zero, else 2 stop bit </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 stop bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_5</name>
                  <description>1.5 stop bits when DLS is zero, else 2 stop bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLS</name>
              <description>Data Length Select It is writable only when UART is not busy ( UART Busy ) and always readable. This is used to select the number of data bits per character that the peripheral transmits and receives. The number of bit that may be selected is as follows:  
00: 5 bits 
01: 6 bits 
10: 7 bits 
11: 8 bits </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5_bits</name>
                  <description>5 bits</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_bits</name>
                  <description>6 bits</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_bits</name>
                  <description>7 bits</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bits</name>
                  <description>8 bits</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <description>UART Line Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x60</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFOERR</name>
              <description>RX Data Error in FIFO When FIFOs are disabled, this bit is always 0. When FIFOs are enabled, this bit is set to 1 when there is at least one PE, FE, or BI in the RX FIFO. It is cleared by a read from the UART_LSR  register provided there are no subsequent errors in the FIFO. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TEMT</name>
              <description>Transmitter Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register and the TX Shift Register are empty. If the FIFOs are enabled, this bit is set whenever the TX FIFO and the TX Shift Register  are empty. In both cases, this bit is cleared when a byte is written to the TX data channel. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>THRE</name>
              <description>TX Holding Register Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register  is empty and ready to accept new data and it is cleared when the CPU writes to the TX Holding Register . If the FIFOs are enabled, this bit is set to "1" whenever the TX FIFO is empty and it is cleared when at least one byte is written to the TX FIFO. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BI</name>
              <description>Break Interrupt This is used to indicate the detection of a break sequence on the serial input data.  In UART mode ( SIRE = 0), it is set whenever the serial input, sin, is held in a logic '0' state for longer than the sum of + + + . In infrared mode ( SIRE  = 1), it is set whenever the serial input, sir_in, is continuously pulsed to logic '0' for longer than the sum of + + + . A break condition on serial input causes one and only one character, consisting of all zeros, to be received by the UART. In the FIFO mode, the character associated with the break condition is carried through the FIFO and is revealed when the character is at the top of the FIFO. Reading the LSR clears the BI  bit. In the non-FIFO mode, the BI  indication occurs immediately and persists until the LSR is read. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FE</name>
              <description>Framing Error This is used to indicate the occurrence of a framing error in the receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received data. In the FIFO mode, since the framing error is associated with a character received, it is revealed when the character with the framing error is at the top of the FIFO. When a framing error occurs, the UART tries to resynchronize. It does this by assuming that the error was due to the start bit of the next character and then continues receiving the other bit i.e. data, and/or parity and stop. It should be noted that the FE  bit is set if a break interrupt has occurred, as indicated by the BI bit.  
0: No framing error 
1: Framing error  Reading the LSR clears the FE bit. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_framing</name>
                  <description>No framing error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Framing</name>
                  <description>Framing error  Reading the LSR clears the FE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE</name>
              <description>Parity Error This is used to indicate the occurrence of a parity error in the receiver if the PEN  bit is set. In the FIFO mode, since the parity error is associated with a character received, it is revealed when the character with the parity error arrives at the top of the FIFO. It should be noted that the PE  bit is set if a break interrupt has occurred, as indicated by the Break Interrupt bit.  
0: No parity error 
1: Parity error  Reading the LSR clears the PE bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_parity</name>
                  <description>No parity error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Parity</name>
                  <description>Parity error  Reading the LSR clears the PE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OE</name>
              <description>Overrun Error This occurs if a new data character was received before the previous data was read. In the non-FIFO mode, the OE  bit is set when a new character arrives in the receiver before the previous character was read from the Receiver Buffer Register . When this happens, the data in the Receiver Buffer Register  is overwritten. In the FIFO mode, an overrun error occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is retained and the data in the receive shift register is lost.  
0: No overrun error 
1: Overrun error  Reading the LSR clears the OE bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_overrun</name>
                  <description>No overrun error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Overrun</name>
                  <description>Overrun error  Reading the LSR clears the OE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DR</name>
              <description>Data Ready This is used to indicate that the receiver contains at least one character in the Receiver Buffer Register or the receiver FIFO.  
0: No data ready 
1: Data ready  This bit is cleared when the Receiver Buffer Register  is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_data</name>
                  <description>No data ready</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data ready  This bit is cleared when the Receiver Buffer Register  is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <description>UART Modem Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x73</resetMask>
          <fields>
            <field>
              <name>SIRE</name>
              <description>SIR Mode Enable  
0: IrDA SIR mode disable 
1: IrDA SIR mode enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>IrDA SIR mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>IrDA SIR mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AFCE</name>
              <description>Auto Flow Control Enable When FIFOs are enabled and the Auto Flow Control Enable ( AFCE ) bit is set, Auto Flow Control features are enabled.  
0: Auto Flow Control Mode disable 
1: Auto Flow Control Mode enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Auto Flow Control Mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Auto Flow Control Mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Mode  
0: Normal Mode 
1: Loop Back Mode  This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, UART_MCR[6]  is set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in Loop Back Mode , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, UART_MCR[6] set to 1), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop Back Mode  This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, UART_MCR[6]  is set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in Loop Back Mode , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, UART_MCR[6] set to 1), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTS</name>
              <description>Request to Send This is used to directly control the Request to Send (rts_n) output. The Request To Send (rts_n) output is used to inform the modem or data set that the UART is ready to exchange data. When Auto RTS Flow Control is not enabled ( AFCE  = 0), the rts_n signal is set low by programming RTS  to a high.In Auto Flow Control, AFCE_MODE == Enabled and active ( AFCE = 1) and FIFOs enable ( FIFOE =1), the rts_n output is controlled in the same way, but is also gated with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The rts_n signal is de-asserted when RTS  is set low.  
0: rts_n de-asserted (logic 1) 
1: rts_n asserted (logic 0)  Note that in Loopback mode ( LOOP =1), the rts_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>rts_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>rts_n asserted (logic 0)  Note that in Loopback mode ( LOOP =1), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Terminal Ready This is used to directly control the DTR (dtr_n) output. The value written to this location is inverted and driven out on dtr_n.  
0: dtr_n de-asserted (logic 1) 
1: dtr_n asserted (logic 0)  The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode ( LOOP  =1), the dtr_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>dtr_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>dtr_n asserted (logic 0)  The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode ( LOOP  =1), the dtr_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <description>UART Modem Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DCD</name>
              <description>Line State of Data Carrier Detect This is used to indicate the current state of the modem control line dcd_n. This bit is the complement of dcd_n. When the Data Carrier Detect  input (dcd_n) is asserted it is an indication that the carrier has been detected by the modem or data set.  
0: dcd_n input is de-asserted (logic 1) 
1: dcd_n input is asserted (logic 0) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dcd_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dcd_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RI</name>
              <description>Line State of Ring Indicator This is used to indicate the current state of the modem control line ri_n. This bit is the complement of ri_n. When the Ring Indicator  input (ri_n) is asserted it is an indication that a telephone ringing signal has been received by the modem or data set.  
0: ri_n input is de-asserted (logic 1) 
1: ri_n input is asserted (logic 0) </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>ri_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>ri_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSR</name>
              <description>Line State of Data Set Ready This is used to indicate the current state of the modem control line dsr_n. This bit is the complement of dsr_n. When the Data Set Ready input (dsr_n) is asserted it is an indication that the modem or data set is ready to establish communications with UART.  
0: dsr_n input is de-asserted (logic 1) 
1: dsr_n input is asserted (logic 0)  In Loop Back Mode (MCR[4] set to one), DSR is the same as MCR[0] ( DTR ). </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dsr_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dsr_n input is asserted (logic 0)  In Loop Back Mode (MCR[4] set to one), DSR is the same as MCR[0] ( DTR ).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTS</name>
              <description>Line State of Clear To Send This is used to indicate the current state of the modem control line cts_n. This bit is the complement of cts_n. When the Clear To Send input (cts_n) is asserted it is an indication that the modem or data set is ready to exchange data with UART.  
0: cts_n input is de-asserted (logic 1) 
1: cts_n input is asserted (logic 0)  In Loop Back Mode (MCR[4] = 1), CTS is the same as MCR[1] ( RTS ). </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>cts_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>cts_n input is asserted (logic 0)  In Loop Back Mode (MCR[4] = 1), CTS is the same as MCR[1] ( RTS ).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDCD</name>
              <description>Delta Data Carrier Detect This is used to indicate that the modem control line dcd_n has changed since the last time the MSR was read.  
0: no change on dcd_n since last read of MSR 
1: change on dcd_n since last read of MSR  Reading the MSR clears the DDCD bit. Note: If the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dcd_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dcd_n since last read of MSR  Reading the MSR clears the DDCD bit. Note: If the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TERI</name>
              <description>Trailing Edge Ring Indicator This is used to indicate that a change on the input ri_n (from an active-low to an inactive-high state) has occurred since the last time the MSR was read.  
0: no change on ri_n since last read of MSR 
1: change on ri_n since last read of MSR  Reading the MSR clears the TERI bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ri_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ri_n since last read of MSR  Reading the MSR clears the TERI bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDSR</name>
              <description>Delta Data Set Ready This is used to indicate that the modem control line dsr_n has changed since the last time the MSR was read.  
0: no change on dsr_n since last read of MSR 
1: change on dsr_n since last read of MSR  Reading the MSR clears the DDSR  bit. In Loop Back Mode  (MCR[4] = 1), DDSR reflects changes on MCR[0] ( DTR ).  Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dsr_n since last read of MSR  Reading the MSR clears the DDSR  bit. In Loop Back Mode  (MCR[4] = 1), DDSR reflects changes on MCR[0] ( DTR ).  Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCTS</name>
              <description>Delta Clear to Send This is used to indicate that the modem control line cts_n has changed since the last time the MSR was read.  
0: no change on ctsdsr_n since last read of MSR 
1: change on ctsdsr_n since last read of MSR  Reading the MSR clears the DCTS bit. In Loop Back Mode (MCR[4] = 1), DCTS reflects changes on MCR[1] ( RTS ). Note:  If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset is removed if the cts_n signal remains asserted. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ctsdsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ctsdsr_n since last read of MSR  Reading the MSR clears the DCTS bit. In Loop Back Mode (MCR[4] = 1), DCTS reflects changes on MCR[1] ( RTS ). Note:  If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset is removed if the cts_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR</name>
          <description>UART Receive Buffer Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RBR</name>
              <description>Receiver Buffer Register Data byte received on the serial input port (sin) in UART mode, or the serial infrared input (sir_in) in infrared mode. The data in this register is valid only if the Data Ready bit in the UART_LSR register is set.  If in FIFO mode and FIFOs are enabled ( FIFOE = 1), this register accesses the head of the receive FIFO. If the receive FIFO is full and this register is not read before the next data character arrives, then the data already in the FIFO is preserved, but any incoming data are lost and an overrun error occurs. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RFL</name>
          <description>UART Receive FIFO Level</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RFL</name>
              <description>Receive FIFO Level This is indicates the number of data entries in the receive FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCH</name>
          <description>UART Scratch Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SCRATCH_REG</name>
              <description>Scratch Register This register is for programmers to use as a temporary storage space. It has no defined purpose in the UART.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_TFL</name>
          <description>UART Transmit FIFO Level</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>TFL</name>
              <description>Transmit FIFO Level This is indicates the number of data entries in the transmit FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR</name>
          <description>UART Transmit Holding Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>THR</name>
              <description>Transmit Holding Register Data to be transmitted on the serial output port (sout) in UART mode or the serial infrared output (sir_out_n) in infrared mode. Data should only be written to THR when the THRE bit is set.   If in FIFO mode and FIFOs are enabled ( FIFOE  = 1) and THRE  is set, 16 number of characters of data may be written to the THR before the FIFO is full. Any write data operations when the FIFO is full causes the write data loss. </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_USR</name>
          <description>UART Status Register</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Full This is used to indicate that the receive FIFO is completely full.  
0: Receive FIFO not full 
1: Receive FIFO Full  This bit is cleared when the RX FIFO is no longer full. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_FIFO_not_full</name>
                  <description>Receive FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_FIFO_Full</name>
                  <description>Receive FIFO Full  This bit is cleared when the RX FIFO is no longer full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty This is used to indicate that the receive FIFO contains one or more entries.  
0: Receive FIFO is empty 
1: Receive FIFO is not empty  This bit is cleared when the RX FIFO is empty. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Receive FIFO is empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Receive FIFO is not empty  This bit is cleared when the RX FIFO is empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Empty This is used to indicate that the transmit FIFO is completely empty.  
0: Transmit FIFO is not empty 
1: Transmit FIFO is empty  This bit is cleared when the TX FIFO is no longer empty. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Transmit FIFO is not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Transmit FIFO is empty  This bit is cleared when the TX FIFO is no longer empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full This is used to indicate that the transmit FIFO in not full.  
0: Transmit FIFO is full 
1: Transmit FIFO is not full  This bit is cleared when the TX FIFO is full. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>full</name>
                  <description>Transmit FIFO is full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_full</name>
                  <description>Transmit FIFO is not full  This bit is cleared when the TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSY</name>
              <description>UART Busy Bit  
0: Idle or inactive 
1: Busy </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle or inactive</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>UART2</name>
      <description>UART2</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C28800</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>UART_DLH</name>
          <description>UART Divisor Latch High Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLH</name>
              <description>Divisor Latch High  Upper 8 bits of a 16-bit, read/write, Divisor Latch register contains the baud rate divisor for the UART. This register may only be accessed when the DLAB  bit (LCR[7]) is set and the UART is not busy ( UART Busy = 0). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows:  baud rate = (serial clock freq) / (16 * divisor)  Note that with the Divisor Latch Registers ( DLL  and DLH ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the DLH is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLL</name>
          <description>UART Divisor Latch Low Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLL</name>
              <description>Divisor Latch Low  Lower 8 bits of a 16-bit, read/write, Divisor Latch register contains the baud rate divisor for the UART. This register may only be accessed when the DLAB  bit (LCR[7]) is set and the UART is not busy ( UART Busy = 0). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows:  baud rate = (serial clock freq) / (16 * divisor)  Note that with the Divisor Latch Registers ( DLL  and DLH ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the DLL is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <description>UART FIFO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RT</name>
              <description>RCVR Trigger This is used to select the trigger level in the receiver FIFO at which the Received Data Available Interrupt is generated. In auto flow control mode it is used to determine when the rts_n signal is de-asserted. It also determines when the dma_rx_req_n signal is asserted in certain modes of operation.  
00: 1 character in the FIFO 
01: FIFO 25% full 
10: FIFO 50% full 
11: FIFO-2 less than full </description>
              <bitRange>[7:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_character</name>
                  <description>1 character in the FIFO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_minus_2_less</name>
                  <description>FIFO-2 less than full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFT</name>
              <description>TX Empty Trigger Writes have no effect when THRE_MODE_USER = Disabled. This is used to select the empty threshold level at which the THRE Interrupts are generated when the mode is active. It also determines when the dma_tx_req_n signal is asserted when in certain modes of operation.  
00: FIFO empty 
01: 2 characters in the FIFO 
10: FIFO 25% full 
11: FIFO 50% full </description>
              <bitRange>[5:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_characters</name>
                  <description>2 characters in the FIFO</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAM</name>
              <description>DMA Mode  
0: Mode 0 
1: Mode 1 </description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mode_0</name>
                  <description>Mode 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mode_1</name>
                  <description>Mode 1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XFIFOR</name>
              <description>XMIT FIFO Reset This resets the control portion of the transmit FIFO and treats the FIFO as empty. This also de-asserts the DMA TX request.  It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RFIFOR</name>
              <description>RCVR FIFO Reset This resets the control portion of the receive FIFO and treats the FIFO as empty. This also de-asserts the DMA RX request. It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FIFOE</name>
              <description>Enable FIFOs This enables/disables the transmit (XMIT) and receive (RCVR) FIFOs. Whenever the value of this bit is changed both the XMIT and RCVR controller portion of FIFOs is reset. </description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HALT</name>
          <description>UART Halt TX Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x37</resetMask>
          <fields>
            <field>
              <name>SIR_RX_INVERT</name>
              <description>SIR Receiver Pulse Polarity Invert  
0: Not invert receiver signal 
1: Invert receiver signal </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIR_TX_INVERT</name>
              <description>SIR Transmit Pulse Polarity Invert  
0: Not invert transmit pulse 
1: Invert transmit pulse </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert transmit pulse</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert transmit pulse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANGE_UPDATE</name>
              <description>After the user use HALT[1] to change the baud rate or UART_LCR  configuration. Write 1 to update the configuration and waiting this bit self clear to 0 to finish update process.  Writing 0 to this bit has no effect.  
1: Update trigger, Self clear to 0 when finish update. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update trigger, Self clear to 0 when finish update.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHCFG_AT_BUSY</name>
              <description>This is an enable bit for the user to change UART_LCR register configuration (except for the DLAB  bit) and baud rate register ( DLL and DLH ) when the UART is busy.  
1: Enable change when busy   </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable change when busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT_TX</name>
              <description>Halt TX This register is used to halt transmissions for testing, so that the transmit FIFO can be filled by the master when FIFOs are implemented and enabled.  0 : Halt TX disabled 1 : Halt TX enabled  Note:  If FIFOs are not enabled, the setting of the halt TX register has no effect on operation. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <description>UART Interrupt Enable Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8F</resetMask>
          <fields>
            <field>
              <name>PTIME</name>
              <description>Programmable THRE Interrupt Mode Enable This is used to enable/disable the generation of THRE Interrupt.  
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EDSSI</name>
              <description>Enable Modem Status Interrupt This is used to enable/disable the generation of Modem Status Interrupt. This is the fourth highest priority interrupt.  
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ELSI</name>
              <description>Enable Receiver Line Status Interrupt This is used to enable/disable the generation of Receiver Line Status Interrupt. This is the highest priority interrupt.  
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETBEI</name>
              <description>Enable Transmit Holding Register Empty Interrupt This is used to enable/disable the generation of Transmitter Holding Register Empty Interrupt. This is the third highest priority interrupt.  
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERBFI</name>
              <description>Enable Received Data Available Interrupt This is used to enable/disable the generation of Received Data Available Interrupt and the Character Timeout Interrupt (if in FIFO mode and FIFOs enabled). These are the second highest priority interrupts.  
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <description>UART Interrupt Identity Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xCF</resetMask>
          <fields>
            <field>
              <name>FEFLAG</name>
              <description>FIFOs Enable Flag This is used to indicate whether the FIFOs are enabled or disabled.  
00: Disable 
11: Enable </description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IID</name>
              <description>Interrupt ID This indicates the highest priority pending interrupt which can be one of the following types:  
0000: modem status 
0001: no interrupt pending 
0010: THR empty 
0100: received data available 
0110: receiver line status 
0111: busy detect 
1100: character timeout  Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>modem_status</name>
                  <description>modem status</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>no interrupt pending</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>THR_empty</name>
                  <description>THR empty</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>received_data</name>
                  <description>received data available</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>receiver_line</name>
                  <description>receiver line status</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy_detect</name>
                  <description>busy detect</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>character_timeout</name>
                  <description>character timeout  Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <description>UART Line Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access Bit It is writable only when UART is not busy ( UART Busy  = 0) and always readable. This bit is used to enable reading and writing of the Divisor Latch register ( UART_DLL  and UART_DLH ) to set the baud rate of the UART. This bit must be cleared after initial baud rate setup in order to access other registers.  
0: Select RX Buffer Register ( UART_RBR ) / TX Holding Register( UART_THR ) and Interrupt Enable Register ( UART_IER ) 
1: Select Divisor Latch Low Register ( UART_DLL ) and Divisor Latch High Register ( UART_DLH ) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select_RX</name>
                  <description>Select RX Buffer Register ( UART_RBR ) / TX Holding Register( UART_THR ) and Interrupt Enable Register ( UART_IER )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select_Divisor</name>
                  <description>Select Divisor Latch Low Register ( UART_DLL ) and Divisor Latch High Register ( UART_DLH )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BC</name>
              <description>Break Control Bit This is used to cause a break condition to be transmitted to the receiving device. If set to one the serial output is forced to the spacing (logic 0) state. When not in Loop Back Mode , as determined by UART_MCR[4] , the sout line is forced low until the Break bit is cleared. If SIR_MODE = Enabled and active ( UART_MCR[6]  is set to 1) the sir_out_n line is continuously pulsed. When in Loop Back Mode , the break condition is internally looped back to the receiver and the sir_out_n line is forced low. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EPS</name>
              <description>Even Parity Select It is writable only when UART is not busy ( UART Busy  = 0) .This is used to select even and odd parity when parity is enabled ( PEN is set to one). Setting the bit5 is to reverse the bit4.   
00: Odd Parity 
01: Even Parity 
1X: Reverse LCR[4] </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Odd</name>
                  <description>Odd Parity</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Even</name>
                  <description>Even Parity</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reverse</name>
                  <description>Reverse LCR[4]</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PEN</name>
              <description>Parity Enable It is writable only when UART is not busy ( UART Busy  = 0) and always readable. This bit is used to enable and disable parity generation and detection in transmitted and received serial character respectively.  
0: Parity disabled 
1: Parity enabled </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Parity_disabled</name>
                  <description>Parity disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Parity_enabled</name>
                  <description>Parity enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP</name>
              <description>Number of stop bits It is writable only when UART is not busy ( UART Busy  = 0) and always readable. This is used to select the number of stop bits per character that the peripheral transmits and receives. If the bit is set to zero, one stop bit is transmitted in the serial data. If the bit is set to one and the Data Length  are set to 5 bits ( DLS =0) one and a half stop bits is transmitted. Otherwise, two stop bits are transmitted. Note that regardless of the number of stop bits selected, the receiver checks only the first stop bit.  
0: 1 stop bit 
1: 1.5 stop bits when DLS is zero, else 2 stop bit </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 stop bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_5</name>
                  <description>1.5 stop bits when DLS is zero, else 2 stop bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLS</name>
              <description>Data Length Select It is writable only when UART is not busy ( UART Busy ) and always readable. This is used to select the number of data bits per character that the peripheral transmits and receives. The number of bit that may be selected is as follows:  
00: 5 bits 
01: 6 bits 
10: 7 bits 
11: 8 bits </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5_bits</name>
                  <description>5 bits</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_bits</name>
                  <description>6 bits</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_bits</name>
                  <description>7 bits</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bits</name>
                  <description>8 bits</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <description>UART Line Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x60</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFOERR</name>
              <description>RX Data Error in FIFO When FIFOs are disabled, this bit is always 0. When FIFOs are enabled, this bit is set to 1 when there is at least one PE, FE, or BI in the RX FIFO. It is cleared by a read from the UART_LSR  register provided there are no subsequent errors in the FIFO. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TEMT</name>
              <description>Transmitter Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register and the TX Shift Register are empty. If the FIFOs are enabled, this bit is set whenever the TX FIFO and the TX Shift Register  are empty. In both cases, this bit is cleared when a byte is written to the TX data channel. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>THRE</name>
              <description>TX Holding Register Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register  is empty and ready to accept new data and it is cleared when the CPU writes to the TX Holding Register . If the FIFOs are enabled, this bit is set to "1" whenever the TX FIFO is empty and it is cleared when at least one byte is written to the TX FIFO. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BI</name>
              <description>Break Interrupt This is used to indicate the detection of a break sequence on the serial input data.  In UART mode ( SIRE = 0), it is set whenever the serial input, sin, is held in a logic '0' state for longer than the sum of + + + . In infrared mode ( SIRE  = 1), it is set whenever the serial input, sir_in, is continuously pulsed to logic '0' for longer than the sum of + + + . A break condition on serial input causes one and only one character, consisting of all zeros, to be received by the UART. In the FIFO mode, the character associated with the break condition is carried through the FIFO and is revealed when the character is at the top of the FIFO. Reading the LSR clears the BI  bit. In the non-FIFO mode, the BI  indication occurs immediately and persists until the LSR is read. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FE</name>
              <description>Framing Error This is used to indicate the occurrence of a framing error in the receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received data. In the FIFO mode, since the framing error is associated with a character received, it is revealed when the character with the framing error is at the top of the FIFO. When a framing error occurs, the UART tries to resynchronize. It does this by assuming that the error was due to the start bit of the next character and then continues receiving the other bit i.e. data, and/or parity and stop. It should be noted that the FE  bit is set if a break interrupt has occurred, as indicated by the BI bit.  
0: No framing error 
1: Framing error  Reading the LSR clears the FE bit. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_framing</name>
                  <description>No framing error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Framing</name>
                  <description>Framing error  Reading the LSR clears the FE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE</name>
              <description>Parity Error This is used to indicate the occurrence of a parity error in the receiver if the PEN  bit is set. In the FIFO mode, since the parity error is associated with a character received, it is revealed when the character with the parity error arrives at the top of the FIFO. It should be noted that the PE  bit is set if a break interrupt has occurred, as indicated by the Break Interrupt bit.  
0: No parity error 
1: Parity error  Reading the LSR clears the PE bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_parity</name>
                  <description>No parity error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Parity</name>
                  <description>Parity error  Reading the LSR clears the PE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OE</name>
              <description>Overrun Error This occurs if a new data character was received before the previous data was read. In the non-FIFO mode, the OE  bit is set when a new character arrives in the receiver before the previous character was read from the Receiver Buffer Register . When this happens, the data in the Receiver Buffer Register  is overwritten. In the FIFO mode, an overrun error occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is retained and the data in the receive shift register is lost.  
0: No overrun error 
1: Overrun error  Reading the LSR clears the OE bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_overrun</name>
                  <description>No overrun error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Overrun</name>
                  <description>Overrun error  Reading the LSR clears the OE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DR</name>
              <description>Data Ready This is used to indicate that the receiver contains at least one character in the Receiver Buffer Register or the receiver FIFO.  
0: No data ready 
1: Data ready  This bit is cleared when the Receiver Buffer Register  is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_data</name>
                  <description>No data ready</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data ready  This bit is cleared when the Receiver Buffer Register  is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <description>UART Modem Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x73</resetMask>
          <fields>
            <field>
              <name>SIRE</name>
              <description>SIR Mode Enable  
0: IrDA SIR mode disable 
1: IrDA SIR mode enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>IrDA SIR mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>IrDA SIR mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AFCE</name>
              <description>Auto Flow Control Enable When FIFOs are enabled and the Auto Flow Control Enable ( AFCE ) bit is set, Auto Flow Control features are enabled.  
0: Auto Flow Control Mode disable 
1: Auto Flow Control Mode enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Auto Flow Control Mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Auto Flow Control Mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Mode  
0: Normal Mode 
1: Loop Back Mode  This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, UART_MCR[6]  is set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in Loop Back Mode , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, UART_MCR[6] set to 1), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop Back Mode  This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, UART_MCR[6]  is set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in Loop Back Mode , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, UART_MCR[6] set to 1), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTS</name>
              <description>Request to Send This is used to directly control the Request to Send (rts_n) output. The Request To Send (rts_n) output is used to inform the modem or data set that the UART is ready to exchange data. When Auto RTS Flow Control is not enabled ( AFCE  = 0), the rts_n signal is set low by programming RTS  to a high.In Auto Flow Control, AFCE_MODE == Enabled and active ( AFCE = 1) and FIFOs enable ( FIFOE =1), the rts_n output is controlled in the same way, but is also gated with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The rts_n signal is de-asserted when RTS  is set low.  
0: rts_n de-asserted (logic 1) 
1: rts_n asserted (logic 0)  Note that in Loopback mode ( LOOP =1), the rts_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>rts_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>rts_n asserted (logic 0)  Note that in Loopback mode ( LOOP =1), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Terminal Ready This is used to directly control the DTR (dtr_n) output. The value written to this location is inverted and driven out on dtr_n.  
0: dtr_n de-asserted (logic 1) 
1: dtr_n asserted (logic 0)  The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode ( LOOP  =1), the dtr_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>dtr_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>dtr_n asserted (logic 0)  The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode ( LOOP  =1), the dtr_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <description>UART Modem Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DCD</name>
              <description>Line State of Data Carrier Detect This is used to indicate the current state of the modem control line dcd_n. This bit is the complement of dcd_n. When the Data Carrier Detect  input (dcd_n) is asserted it is an indication that the carrier has been detected by the modem or data set.  
0: dcd_n input is de-asserted (logic 1) 
1: dcd_n input is asserted (logic 0) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dcd_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dcd_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RI</name>
              <description>Line State of Ring Indicator This is used to indicate the current state of the modem control line ri_n. This bit is the complement of ri_n. When the Ring Indicator  input (ri_n) is asserted it is an indication that a telephone ringing signal has been received by the modem or data set.  
0: ri_n input is de-asserted (logic 1) 
1: ri_n input is asserted (logic 0) </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>ri_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>ri_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSR</name>
              <description>Line State of Data Set Ready This is used to indicate the current state of the modem control line dsr_n. This bit is the complement of dsr_n. When the Data Set Ready input (dsr_n) is asserted it is an indication that the modem or data set is ready to establish communications with UART.  
0: dsr_n input is de-asserted (logic 1) 
1: dsr_n input is asserted (logic 0)  In Loop Back Mode (MCR[4] set to one), DSR is the same as MCR[0] ( DTR ). </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dsr_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dsr_n input is asserted (logic 0)  In Loop Back Mode (MCR[4] set to one), DSR is the same as MCR[0] ( DTR ).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTS</name>
              <description>Line State of Clear To Send This is used to indicate the current state of the modem control line cts_n. This bit is the complement of cts_n. When the Clear To Send input (cts_n) is asserted it is an indication that the modem or data set is ready to exchange data with UART.  
0: cts_n input is de-asserted (logic 1) 
1: cts_n input is asserted (logic 0)  In Loop Back Mode (MCR[4] = 1), CTS is the same as MCR[1] ( RTS ). </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>cts_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>cts_n input is asserted (logic 0)  In Loop Back Mode (MCR[4] = 1), CTS is the same as MCR[1] ( RTS ).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDCD</name>
              <description>Delta Data Carrier Detect This is used to indicate that the modem control line dcd_n has changed since the last time the MSR was read.  
0: no change on dcd_n since last read of MSR 
1: change on dcd_n since last read of MSR  Reading the MSR clears the DDCD bit. Note: If the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dcd_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dcd_n since last read of MSR  Reading the MSR clears the DDCD bit. Note: If the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TERI</name>
              <description>Trailing Edge Ring Indicator This is used to indicate that a change on the input ri_n (from an active-low to an inactive-high state) has occurred since the last time the MSR was read.  
0: no change on ri_n since last read of MSR 
1: change on ri_n since last read of MSR  Reading the MSR clears the TERI bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ri_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ri_n since last read of MSR  Reading the MSR clears the TERI bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDSR</name>
              <description>Delta Data Set Ready This is used to indicate that the modem control line dsr_n has changed since the last time the MSR was read.  
0: no change on dsr_n since last read of MSR 
1: change on dsr_n since last read of MSR  Reading the MSR clears the DDSR  bit. In Loop Back Mode  (MCR[4] = 1), DDSR reflects changes on MCR[0] ( DTR ).  Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dsr_n since last read of MSR  Reading the MSR clears the DDSR  bit. In Loop Back Mode  (MCR[4] = 1), DDSR reflects changes on MCR[0] ( DTR ).  Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCTS</name>
              <description>Delta Clear to Send This is used to indicate that the modem control line cts_n has changed since the last time the MSR was read.  
0: no change on ctsdsr_n since last read of MSR 
1: change on ctsdsr_n since last read of MSR  Reading the MSR clears the DCTS bit. In Loop Back Mode (MCR[4] = 1), DCTS reflects changes on MCR[1] ( RTS ). Note:  If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset is removed if the cts_n signal remains asserted. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ctsdsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ctsdsr_n since last read of MSR  Reading the MSR clears the DCTS bit. In Loop Back Mode (MCR[4] = 1), DCTS reflects changes on MCR[1] ( RTS ). Note:  If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset is removed if the cts_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR</name>
          <description>UART Receive Buffer Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RBR</name>
              <description>Receiver Buffer Register Data byte received on the serial input port (sin) in UART mode, or the serial infrared input (sir_in) in infrared mode. The data in this register is valid only if the Data Ready bit in the UART_LSR register is set.  If in FIFO mode and FIFOs are enabled ( FIFOE = 1), this register accesses the head of the receive FIFO. If the receive FIFO is full and this register is not read before the next data character arrives, then the data already in the FIFO is preserved, but any incoming data are lost and an overrun error occurs. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RFL</name>
          <description>UART Receive FIFO Level</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RFL</name>
              <description>Receive FIFO Level This is indicates the number of data entries in the receive FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCH</name>
          <description>UART Scratch Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SCRATCH_REG</name>
              <description>Scratch Register This register is for programmers to use as a temporary storage space. It has no defined purpose in the UART.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_TFL</name>
          <description>UART Transmit FIFO Level</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>TFL</name>
              <description>Transmit FIFO Level This is indicates the number of data entries in the transmit FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR</name>
          <description>UART Transmit Holding Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>THR</name>
              <description>Transmit Holding Register Data to be transmitted on the serial output port (sout) in UART mode or the serial infrared output (sir_out_n) in infrared mode. Data should only be written to THR when the THRE bit is set.   If in FIFO mode and FIFOs are enabled ( FIFOE  = 1) and THRE  is set, 16 number of characters of data may be written to the THR before the FIFO is full. Any write data operations when the FIFO is full causes the write data loss. </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_USR</name>
          <description>UART Status Register</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Full This is used to indicate that the receive FIFO is completely full.  
0: Receive FIFO not full 
1: Receive FIFO Full  This bit is cleared when the RX FIFO is no longer full. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_FIFO_not_full</name>
                  <description>Receive FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_FIFO_Full</name>
                  <description>Receive FIFO Full  This bit is cleared when the RX FIFO is no longer full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty This is used to indicate that the receive FIFO contains one or more entries.  
0: Receive FIFO is empty 
1: Receive FIFO is not empty  This bit is cleared when the RX FIFO is empty. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Receive FIFO is empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Receive FIFO is not empty  This bit is cleared when the RX FIFO is empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Empty This is used to indicate that the transmit FIFO is completely empty.  
0: Transmit FIFO is not empty 
1: Transmit FIFO is empty  This bit is cleared when the TX FIFO is no longer empty. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Transmit FIFO is not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Transmit FIFO is empty  This bit is cleared when the TX FIFO is no longer empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full This is used to indicate that the transmit FIFO in not full.  
0: Transmit FIFO is full 
1: Transmit FIFO is not full  This bit is cleared when the TX FIFO is full. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>full</name>
                  <description>Transmit FIFO is full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_full</name>
                  <description>Transmit FIFO is not full  This bit is cleared when the TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSY</name>
              <description>UART Busy Bit  
0: Idle or inactive 
1: Busy </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle or inactive</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>UART3</name>
      <description>UART3</description>
      <groupName>generic</groupName>
      <baseAddress>0x1C28C00</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>UART_DLH</name>
          <description>UART Divisor Latch High Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLH</name>
              <description>Divisor Latch High  Upper 8 bits of a 16-bit, read/write, Divisor Latch register contains the baud rate divisor for the UART. This register may only be accessed when the DLAB  bit (LCR[7]) is set and the UART is not busy ( UART Busy = 0). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows:  baud rate = (serial clock freq) / (16 * divisor)  Note that with the Divisor Latch Registers ( DLL  and DLH ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the DLH is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLL</name>
          <description>UART Divisor Latch Low Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLL</name>
              <description>Divisor Latch Low  Lower 8 bits of a 16-bit, read/write, Divisor Latch register contains the baud rate divisor for the UART. This register may only be accessed when the DLAB  bit (LCR[7]) is set and the UART is not busy ( UART Busy = 0). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows:  baud rate = (serial clock freq) / (16 * divisor)  Note that with the Divisor Latch Registers ( DLL  and DLH ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the DLL is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <description>UART FIFO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RT</name>
              <description>RCVR Trigger This is used to select the trigger level in the receiver FIFO at which the Received Data Available Interrupt is generated. In auto flow control mode it is used to determine when the rts_n signal is de-asserted. It also determines when the dma_rx_req_n signal is asserted in certain modes of operation.  
00: 1 character in the FIFO 
01: FIFO 25% full 
10: FIFO 50% full 
11: FIFO-2 less than full </description>
              <bitRange>[7:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_character</name>
                  <description>1 character in the FIFO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_minus_2_less</name>
                  <description>FIFO-2 less than full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFT</name>
              <description>TX Empty Trigger Writes have no effect when THRE_MODE_USER = Disabled. This is used to select the empty threshold level at which the THRE Interrupts are generated when the mode is active. It also determines when the dma_tx_req_n signal is asserted when in certain modes of operation.  
00: FIFO empty 
01: 2 characters in the FIFO 
10: FIFO 25% full 
11: FIFO 50% full </description>
              <bitRange>[5:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_characters</name>
                  <description>2 characters in the FIFO</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAM</name>
              <description>DMA Mode  
0: Mode 0 
1: Mode 1 </description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mode_0</name>
                  <description>Mode 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mode_1</name>
                  <description>Mode 1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XFIFOR</name>
              <description>XMIT FIFO Reset This resets the control portion of the transmit FIFO and treats the FIFO as empty. This also de-asserts the DMA TX request.  It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RFIFOR</name>
              <description>RCVR FIFO Reset This resets the control portion of the receive FIFO and treats the FIFO as empty. This also de-asserts the DMA RX request. It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FIFOE</name>
              <description>Enable FIFOs This enables/disables the transmit (XMIT) and receive (RCVR) FIFOs. Whenever the value of this bit is changed both the XMIT and RCVR controller portion of FIFOs is reset. </description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HALT</name>
          <description>UART Halt TX Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x37</resetMask>
          <fields>
            <field>
              <name>SIR_RX_INVERT</name>
              <description>SIR Receiver Pulse Polarity Invert  
0: Not invert receiver signal 
1: Invert receiver signal </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIR_TX_INVERT</name>
              <description>SIR Transmit Pulse Polarity Invert  
0: Not invert transmit pulse 
1: Invert transmit pulse </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert transmit pulse</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert transmit pulse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANGE_UPDATE</name>
              <description>After the user use HALT[1] to change the baud rate or UART_LCR  configuration. Write 1 to update the configuration and waiting this bit self clear to 0 to finish update process.  Writing 0 to this bit has no effect.  
1: Update trigger, Self clear to 0 when finish update. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update trigger, Self clear to 0 when finish update.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHCFG_AT_BUSY</name>
              <description>This is an enable bit for the user to change UART_LCR register configuration (except for the DLAB  bit) and baud rate register ( DLL and DLH ) when the UART is busy.  
1: Enable change when busy   </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable change when busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT_TX</name>
              <description>Halt TX This register is used to halt transmissions for testing, so that the transmit FIFO can be filled by the master when FIFOs are implemented and enabled.  0 : Halt TX disabled 1 : Halt TX enabled  Note:  If FIFOs are not enabled, the setting of the halt TX register has no effect on operation. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <description>UART Interrupt Enable Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8F</resetMask>
          <fields>
            <field>
              <name>PTIME</name>
              <description>Programmable THRE Interrupt Mode Enable This is used to enable/disable the generation of THRE Interrupt.  
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EDSSI</name>
              <description>Enable Modem Status Interrupt This is used to enable/disable the generation of Modem Status Interrupt. This is the fourth highest priority interrupt.  
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ELSI</name>
              <description>Enable Receiver Line Status Interrupt This is used to enable/disable the generation of Receiver Line Status Interrupt. This is the highest priority interrupt.  
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETBEI</name>
              <description>Enable Transmit Holding Register Empty Interrupt This is used to enable/disable the generation of Transmitter Holding Register Empty Interrupt. This is the third highest priority interrupt.  
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERBFI</name>
              <description>Enable Received Data Available Interrupt This is used to enable/disable the generation of Received Data Available Interrupt and the Character Timeout Interrupt (if in FIFO mode and FIFOs enabled). These are the second highest priority interrupts.  
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <description>UART Interrupt Identity Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xCF</resetMask>
          <fields>
            <field>
              <name>FEFLAG</name>
              <description>FIFOs Enable Flag This is used to indicate whether the FIFOs are enabled or disabled.  
00: Disable 
11: Enable </description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IID</name>
              <description>Interrupt ID This indicates the highest priority pending interrupt which can be one of the following types:  
0000: modem status 
0001: no interrupt pending 
0010: THR empty 
0100: received data available 
0110: receiver line status 
0111: busy detect 
1100: character timeout  Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>modem_status</name>
                  <description>modem status</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>no interrupt pending</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>THR_empty</name>
                  <description>THR empty</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>received_data</name>
                  <description>received data available</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>receiver_line</name>
                  <description>receiver line status</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy_detect</name>
                  <description>busy detect</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>character_timeout</name>
                  <description>character timeout  Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <description>UART Line Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access Bit It is writable only when UART is not busy ( UART Busy  = 0) and always readable. This bit is used to enable reading and writing of the Divisor Latch register ( UART_DLL  and UART_DLH ) to set the baud rate of the UART. This bit must be cleared after initial baud rate setup in order to access other registers.  
0: Select RX Buffer Register ( UART_RBR ) / TX Holding Register( UART_THR ) and Interrupt Enable Register ( UART_IER ) 
1: Select Divisor Latch Low Register ( UART_DLL ) and Divisor Latch High Register ( UART_DLH ) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select_RX</name>
                  <description>Select RX Buffer Register ( UART_RBR ) / TX Holding Register( UART_THR ) and Interrupt Enable Register ( UART_IER )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select_Divisor</name>
                  <description>Select Divisor Latch Low Register ( UART_DLL ) and Divisor Latch High Register ( UART_DLH )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BC</name>
              <description>Break Control Bit This is used to cause a break condition to be transmitted to the receiving device. If set to one the serial output is forced to the spacing (logic 0) state. When not in Loop Back Mode , as determined by UART_MCR[4] , the sout line is forced low until the Break bit is cleared. If SIR_MODE = Enabled and active ( UART_MCR[6]  is set to 1) the sir_out_n line is continuously pulsed. When in Loop Back Mode , the break condition is internally looped back to the receiver and the sir_out_n line is forced low. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EPS</name>
              <description>Even Parity Select It is writable only when UART is not busy ( UART Busy  = 0) .This is used to select even and odd parity when parity is enabled ( PEN is set to one). Setting the bit5 is to reverse the bit4.   
00: Odd Parity 
01: Even Parity 
1X: Reverse LCR[4] </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Odd</name>
                  <description>Odd Parity</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Even</name>
                  <description>Even Parity</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reverse</name>
                  <description>Reverse LCR[4]</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PEN</name>
              <description>Parity Enable It is writable only when UART is not busy ( UART Busy  = 0) and always readable. This bit is used to enable and disable parity generation and detection in transmitted and received serial character respectively.  
0: Parity disabled 
1: Parity enabled </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Parity_disabled</name>
                  <description>Parity disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Parity_enabled</name>
                  <description>Parity enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP</name>
              <description>Number of stop bits It is writable only when UART is not busy ( UART Busy  = 0) and always readable. This is used to select the number of stop bits per character that the peripheral transmits and receives. If the bit is set to zero, one stop bit is transmitted in the serial data. If the bit is set to one and the Data Length  are set to 5 bits ( DLS =0) one and a half stop bits is transmitted. Otherwise, two stop bits are transmitted. Note that regardless of the number of stop bits selected, the receiver checks only the first stop bit.  
0: 1 stop bit 
1: 1.5 stop bits when DLS is zero, else 2 stop bit </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 stop bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_5</name>
                  <description>1.5 stop bits when DLS is zero, else 2 stop bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLS</name>
              <description>Data Length Select It is writable only when UART is not busy ( UART Busy ) and always readable. This is used to select the number of data bits per character that the peripheral transmits and receives. The number of bit that may be selected is as follows:  
00: 5 bits 
01: 6 bits 
10: 7 bits 
11: 8 bits </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5_bits</name>
                  <description>5 bits</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_bits</name>
                  <description>6 bits</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_bits</name>
                  <description>7 bits</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bits</name>
                  <description>8 bits</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <description>UART Line Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x60</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFOERR</name>
              <description>RX Data Error in FIFO When FIFOs are disabled, this bit is always 0. When FIFOs are enabled, this bit is set to 1 when there is at least one PE, FE, or BI in the RX FIFO. It is cleared by a read from the UART_LSR  register provided there are no subsequent errors in the FIFO. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TEMT</name>
              <description>Transmitter Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register and the TX Shift Register are empty. If the FIFOs are enabled, this bit is set whenever the TX FIFO and the TX Shift Register  are empty. In both cases, this bit is cleared when a byte is written to the TX data channel. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>THRE</name>
              <description>TX Holding Register Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register  is empty and ready to accept new data and it is cleared when the CPU writes to the TX Holding Register . If the FIFOs are enabled, this bit is set to "1" whenever the TX FIFO is empty and it is cleared when at least one byte is written to the TX FIFO. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BI</name>
              <description>Break Interrupt This is used to indicate the detection of a break sequence on the serial input data.  In UART mode ( SIRE = 0), it is set whenever the serial input, sin, is held in a logic '0' state for longer than the sum of + + + . In infrared mode ( SIRE  = 1), it is set whenever the serial input, sir_in, is continuously pulsed to logic '0' for longer than the sum of + + + . A break condition on serial input causes one and only one character, consisting of all zeros, to be received by the UART. In the FIFO mode, the character associated with the break condition is carried through the FIFO and is revealed when the character is at the top of the FIFO. Reading the LSR clears the BI  bit. In the non-FIFO mode, the BI  indication occurs immediately and persists until the LSR is read. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FE</name>
              <description>Framing Error This is used to indicate the occurrence of a framing error in the receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received data. In the FIFO mode, since the framing error is associated with a character received, it is revealed when the character with the framing error is at the top of the FIFO. When a framing error occurs, the UART tries to resynchronize. It does this by assuming that the error was due to the start bit of the next character and then continues receiving the other bit i.e. data, and/or parity and stop. It should be noted that the FE  bit is set if a break interrupt has occurred, as indicated by the BI bit.  
0: No framing error 
1: Framing error  Reading the LSR clears the FE bit. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_framing</name>
                  <description>No framing error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Framing</name>
                  <description>Framing error  Reading the LSR clears the FE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE</name>
              <description>Parity Error This is used to indicate the occurrence of a parity error in the receiver if the PEN  bit is set. In the FIFO mode, since the parity error is associated with a character received, it is revealed when the character with the parity error arrives at the top of the FIFO. It should be noted that the PE  bit is set if a break interrupt has occurred, as indicated by the Break Interrupt bit.  
0: No parity error 
1: Parity error  Reading the LSR clears the PE bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_parity</name>
                  <description>No parity error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Parity</name>
                  <description>Parity error  Reading the LSR clears the PE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OE</name>
              <description>Overrun Error This occurs if a new data character was received before the previous data was read. In the non-FIFO mode, the OE  bit is set when a new character arrives in the receiver before the previous character was read from the Receiver Buffer Register . When this happens, the data in the Receiver Buffer Register  is overwritten. In the FIFO mode, an overrun error occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is retained and the data in the receive shift register is lost.  
0: No overrun error 
1: Overrun error  Reading the LSR clears the OE bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_overrun</name>
                  <description>No overrun error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Overrun</name>
                  <description>Overrun error  Reading the LSR clears the OE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DR</name>
              <description>Data Ready This is used to indicate that the receiver contains at least one character in the Receiver Buffer Register or the receiver FIFO.  
0: No data ready 
1: Data ready  This bit is cleared when the Receiver Buffer Register  is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_data</name>
                  <description>No data ready</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data ready  This bit is cleared when the Receiver Buffer Register  is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <description>UART Modem Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x73</resetMask>
          <fields>
            <field>
              <name>SIRE</name>
              <description>SIR Mode Enable  
0: IrDA SIR mode disable 
1: IrDA SIR mode enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>IrDA SIR mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>IrDA SIR mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AFCE</name>
              <description>Auto Flow Control Enable When FIFOs are enabled and the Auto Flow Control Enable ( AFCE ) bit is set, Auto Flow Control features are enabled.  
0: Auto Flow Control Mode disable 
1: Auto Flow Control Mode enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Auto Flow Control Mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Auto Flow Control Mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Mode  
0: Normal Mode 
1: Loop Back Mode  This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, UART_MCR[6]  is set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in Loop Back Mode , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, UART_MCR[6] set to 1), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop Back Mode  This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, UART_MCR[6]  is set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in Loop Back Mode , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, UART_MCR[6] set to 1), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTS</name>
              <description>Request to Send This is used to directly control the Request to Send (rts_n) output. The Request To Send (rts_n) output is used to inform the modem or data set that the UART is ready to exchange data. When Auto RTS Flow Control is not enabled ( AFCE  = 0), the rts_n signal is set low by programming RTS  to a high.In Auto Flow Control, AFCE_MODE == Enabled and active ( AFCE = 1) and FIFOs enable ( FIFOE =1), the rts_n output is controlled in the same way, but is also gated with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The rts_n signal is de-asserted when RTS  is set low.  
0: rts_n de-asserted (logic 1) 
1: rts_n asserted (logic 0)  Note that in Loopback mode ( LOOP =1), the rts_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>rts_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>rts_n asserted (logic 0)  Note that in Loopback mode ( LOOP =1), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Terminal Ready This is used to directly control the DTR (dtr_n) output. The value written to this location is inverted and driven out on dtr_n.  
0: dtr_n de-asserted (logic 1) 
1: dtr_n asserted (logic 0)  The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode ( LOOP  =1), the dtr_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>dtr_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>dtr_n asserted (logic 0)  The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode ( LOOP  =1), the dtr_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <description>UART Modem Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DCD</name>
              <description>Line State of Data Carrier Detect This is used to indicate the current state of the modem control line dcd_n. This bit is the complement of dcd_n. When the Data Carrier Detect  input (dcd_n) is asserted it is an indication that the carrier has been detected by the modem or data set.  
0: dcd_n input is de-asserted (logic 1) 
1: dcd_n input is asserted (logic 0) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dcd_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dcd_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RI</name>
              <description>Line State of Ring Indicator This is used to indicate the current state of the modem control line ri_n. This bit is the complement of ri_n. When the Ring Indicator  input (ri_n) is asserted it is an indication that a telephone ringing signal has been received by the modem or data set.  
0: ri_n input is de-asserted (logic 1) 
1: ri_n input is asserted (logic 0) </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>ri_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>ri_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSR</name>
              <description>Line State of Data Set Ready This is used to indicate the current state of the modem control line dsr_n. This bit is the complement of dsr_n. When the Data Set Ready input (dsr_n) is asserted it is an indication that the modem or data set is ready to establish communications with UART.  
0: dsr_n input is de-asserted (logic 1) 
1: dsr_n input is asserted (logic 0)  In Loop Back Mode (MCR[4] set to one), DSR is the same as MCR[0] ( DTR ). </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dsr_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dsr_n input is asserted (logic 0)  In Loop Back Mode (MCR[4] set to one), DSR is the same as MCR[0] ( DTR ).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTS</name>
              <description>Line State of Clear To Send This is used to indicate the current state of the modem control line cts_n. This bit is the complement of cts_n. When the Clear To Send input (cts_n) is asserted it is an indication that the modem or data set is ready to exchange data with UART.  
0: cts_n input is de-asserted (logic 1) 
1: cts_n input is asserted (logic 0)  In Loop Back Mode (MCR[4] = 1), CTS is the same as MCR[1] ( RTS ). </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>cts_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>cts_n input is asserted (logic 0)  In Loop Back Mode (MCR[4] = 1), CTS is the same as MCR[1] ( RTS ).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDCD</name>
              <description>Delta Data Carrier Detect This is used to indicate that the modem control line dcd_n has changed since the last time the MSR was read.  
0: no change on dcd_n since last read of MSR 
1: change on dcd_n since last read of MSR  Reading the MSR clears the DDCD bit. Note: If the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dcd_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dcd_n since last read of MSR  Reading the MSR clears the DDCD bit. Note: If the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TERI</name>
              <description>Trailing Edge Ring Indicator This is used to indicate that a change on the input ri_n (from an active-low to an inactive-high state) has occurred since the last time the MSR was read.  
0: no change on ri_n since last read of MSR 
1: change on ri_n since last read of MSR  Reading the MSR clears the TERI bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ri_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ri_n since last read of MSR  Reading the MSR clears the TERI bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDSR</name>
              <description>Delta Data Set Ready This is used to indicate that the modem control line dsr_n has changed since the last time the MSR was read.  
0: no change on dsr_n since last read of MSR 
1: change on dsr_n since last read of MSR  Reading the MSR clears the DDSR  bit. In Loop Back Mode  (MCR[4] = 1), DDSR reflects changes on MCR[0] ( DTR ).  Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dsr_n since last read of MSR  Reading the MSR clears the DDSR  bit. In Loop Back Mode  (MCR[4] = 1), DDSR reflects changes on MCR[0] ( DTR ).  Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCTS</name>
              <description>Delta Clear to Send This is used to indicate that the modem control line cts_n has changed since the last time the MSR was read.  
0: no change on ctsdsr_n since last read of MSR 
1: change on ctsdsr_n since last read of MSR  Reading the MSR clears the DCTS bit. In Loop Back Mode (MCR[4] = 1), DCTS reflects changes on MCR[1] ( RTS ). Note:  If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset is removed if the cts_n signal remains asserted. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ctsdsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ctsdsr_n since last read of MSR  Reading the MSR clears the DCTS bit. In Loop Back Mode (MCR[4] = 1), DCTS reflects changes on MCR[1] ( RTS ). Note:  If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset is removed if the cts_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR</name>
          <description>UART Receive Buffer Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RBR</name>
              <description>Receiver Buffer Register Data byte received on the serial input port (sin) in UART mode, or the serial infrared input (sir_in) in infrared mode. The data in this register is valid only if the Data Ready bit in the UART_LSR register is set.  If in FIFO mode and FIFOs are enabled ( FIFOE = 1), this register accesses the head of the receive FIFO. If the receive FIFO is full and this register is not read before the next data character arrives, then the data already in the FIFO is preserved, but any incoming data are lost and an overrun error occurs. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RFL</name>
          <description>UART Receive FIFO Level</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RFL</name>
              <description>Receive FIFO Level This is indicates the number of data entries in the receive FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCH</name>
          <description>UART Scratch Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SCRATCH_REG</name>
              <description>Scratch Register This register is for programmers to use as a temporary storage space. It has no defined purpose in the UART.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_TFL</name>
          <description>UART Transmit FIFO Level</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>TFL</name>
              <description>Transmit FIFO Level This is indicates the number of data entries in the transmit FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR</name>
          <description>UART Transmit Holding Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>THR</name>
              <description>Transmit Holding Register Data to be transmitted on the serial output port (sout) in UART mode or the serial infrared output (sir_out_n) in infrared mode. Data should only be written to THR when the THRE bit is set.   If in FIFO mode and FIFOs are enabled ( FIFOE  = 1) and THRE  is set, 16 number of characters of data may be written to the THR before the FIFO is full. Any write data operations when the FIFO is full causes the write data loss. </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_USR</name>
          <description>UART Status Register</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Full This is used to indicate that the receive FIFO is completely full.  
0: Receive FIFO not full 
1: Receive FIFO Full  This bit is cleared when the RX FIFO is no longer full. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_FIFO_not_full</name>
                  <description>Receive FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_FIFO_Full</name>
                  <description>Receive FIFO Full  This bit is cleared when the RX FIFO is no longer full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty This is used to indicate that the receive FIFO contains one or more entries.  
0: Receive FIFO is empty 
1: Receive FIFO is not empty  This bit is cleared when the RX FIFO is empty. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Receive FIFO is empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Receive FIFO is not empty  This bit is cleared when the RX FIFO is empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Empty This is used to indicate that the transmit FIFO is completely empty.  
0: Transmit FIFO is not empty 
1: Transmit FIFO is empty  This bit is cleared when the TX FIFO is no longer empty. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Transmit FIFO is not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Transmit FIFO is empty  This bit is cleared when the TX FIFO is no longer empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full This is used to indicate that the transmit FIFO in not full.  
0: Transmit FIFO is full 
1: Transmit FIFO is not full  This bit is cleared when the TX FIFO is full. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>full</name>
                  <description>Transmit FIFO is full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_full</name>
                  <description>Transmit FIFO is not full  This bit is cleared when the TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSY</name>
              <description>UART Busy Bit  
0: Idle or inactive 
1: Busy </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle or inactive</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>R-UART</name>
      <description>R-UART</description>
      <groupName>generic</groupName>
      <baseAddress>0x1F02800</baseAddress>
      <access>read-write</access>
      <registers>
        <register>
          <name>UART_DLH</name>
          <description>UART Divisor Latch High Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLH</name>
              <description>Divisor Latch High  Upper 8 bits of a 16-bit, read/write, Divisor Latch register contains the baud rate divisor for the UART. This register may only be accessed when the DLAB  bit (LCR[7]) is set and the UART is not busy ( UART Busy = 0). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows:  baud rate = (serial clock freq) / (16 * divisor)  Note that with the Divisor Latch Registers ( DLL  and DLH ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the DLH is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_DLL</name>
          <description>UART Divisor Latch Low Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLL</name>
              <description>Divisor Latch Low  Lower 8 bits of a 16-bit, read/write, Divisor Latch register contains the baud rate divisor for the UART. This register may only be accessed when the DLAB  bit (LCR[7]) is set and the UART is not busy ( UART Busy = 0). The output baud rate is equal to the serial clock (sclk) frequency divided by sixteen times the value of the baud rate divisor, as follows:  baud rate = (serial clock freq) / (16 * divisor)  Note that with the Divisor Latch Registers ( DLL  and DLH ) set to zero, the baud clock is disabled and no serial communications occur. Also, once the DLL is set, at least 8 clock cycles of the slowest UART clock should be allowed to pass before transmitting or receiving data. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_FCR</name>
          <description>UART FIFO Control Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RT</name>
              <description>RCVR Trigger This is used to select the trigger level in the receiver FIFO at which the Received Data Available Interrupt is generated. In auto flow control mode it is used to determine when the rts_n signal is de-asserted. It also determines when the dma_rx_req_n signal is asserted in certain modes of operation.  
00: 1 character in the FIFO 
01: FIFO 25% full 
10: FIFO 50% full 
11: FIFO-2 less than full </description>
              <bitRange>[7:6]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1_character</name>
                  <description>1 character in the FIFO</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_minus_2_less</name>
                  <description>FIFO-2 less than full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFT</name>
              <description>TX Empty Trigger Writes have no effect when THRE_MODE_USER = Disabled. This is used to select the empty threshold level at which the THRE Interrupts are generated when the mode is active. It also determines when the dma_tx_req_n signal is asserted when in certain modes of operation.  
00: FIFO empty 
01: 2 characters in the FIFO 
10: FIFO 25% full 
11: FIFO 50% full </description>
              <bitRange>[5:4]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>FIFO_empty</name>
                  <description>FIFO empty</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_2_characters</name>
                  <description>2 characters in the FIFO</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_25_percent__full</name>
                  <description>FIFO 25% full</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>FIFO_50_percent__full</name>
                  <description>FIFO 50% full</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DMAM</name>
              <description>DMA Mode  
0: Mode 0 
1: Mode 1 </description>
              <bitRange>[3:3]</bitRange>
              <access>write-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Mode_0</name>
                  <description>Mode 0</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Mode_1</name>
                  <description>Mode 1</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>XFIFOR</name>
              <description>XMIT FIFO Reset This resets the control portion of the transmit FIFO and treats the FIFO as empty. This also de-asserts the DMA TX request.  It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>RFIFOR</name>
              <description>RCVR FIFO Reset This resets the control portion of the receive FIFO and treats the FIFO as empty. This also de-asserts the DMA RX request. It is 'self-clearing'. It is not necessary to clear this bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>write-only</access>
            </field>
            <field>
              <name>FIFOE</name>
              <description>Enable FIFOs This enables/disables the transmit (XMIT) and receive (RCVR) FIFOs. Whenever the value of this bit is changed both the XMIT and RCVR controller portion of FIFOs is reset. </description>
              <bitRange>[0:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_HALT</name>
          <description>UART Halt TX Register</description>
          <addressOffset>0xA4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x37</resetMask>
          <fields>
            <field>
              <name>SIR_RX_INVERT</name>
              <description>SIR Receiver Pulse Polarity Invert  
0: Not invert receiver signal 
1: Invert receiver signal </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert receiver signal</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert receiver signal</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>SIR_TX_INVERT</name>
              <description>SIR Transmit Pulse Polarity Invert  
0: Not invert transmit pulse 
1: Invert transmit pulse </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Not_invert</name>
                  <description>Not invert transmit pulse</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Invert</name>
                  <description>Invert transmit pulse</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHANGE_UPDATE</name>
              <description>After the user use HALT[1] to change the baud rate or UART_LCR  configuration. Write 1 to update the configuration and waiting this bit self clear to 0 to finish update process.  Writing 0 to this bit has no effect.  
1: Update trigger, Self clear to 0 when finish update. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Update</name>
                  <description>Update trigger, Self clear to 0 when finish update.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CHCFG_AT_BUSY</name>
              <description>This is an enable bit for the user to change UART_LCR register configuration (except for the DLAB  bit) and baud rate register ( DLL and DLH ) when the UART is busy.  
1: Enable change when busy   </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable change when busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>HALT_TX</name>
              <description>Halt TX This register is used to halt transmissions for testing, so that the transmit FIFO can be filled by the master when FIFOs are implemented and enabled.  0 : Halt TX disabled 1 : Halt TX enabled  Note:  If FIFOs are not enabled, the setting of the halt TX register has no effect on operation. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IER</name>
          <description>UART Interrupt Enable Register</description>
          <addressOffset>0x4</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x8F</resetMask>
          <fields>
            <field>
              <name>PTIME</name>
              <description>Programmable THRE Interrupt Mode Enable This is used to enable/disable the generation of THRE Interrupt.  
0: Disable 
1: Enable </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>EDSSI</name>
              <description>Enable Modem Status Interrupt This is used to enable/disable the generation of Modem Status Interrupt. This is the fourth highest priority interrupt.  
0: Disable 
1: Enable </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ELSI</name>
              <description>Enable Receiver Line Status Interrupt This is used to enable/disable the generation of Receiver Line Status Interrupt. This is the highest priority interrupt.  
0: Disable 
1: Enable </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ETBEI</name>
              <description>Enable Transmit Holding Register Empty Interrupt This is used to enable/disable the generation of Transmitter Holding Register Empty Interrupt. This is the third highest priority interrupt.  
0: Disable 
1: Enable </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>ERBFI</name>
              <description>Enable Received Data Available Interrupt This is used to enable/disable the generation of Received Data Available Interrupt and the Character Timeout Interrupt (if in FIFO mode and FIFOs enabled). These are the second highest priority interrupts.  
0: Disable 
1: Enable </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_IIR</name>
          <description>UART Interrupt Identity Register</description>
          <addressOffset>0x8</addressOffset>
          <resetValue>0x1</resetValue>
          <resetMask>0xCF</resetMask>
          <fields>
            <field>
              <name>FEFLAG</name>
              <description>FIFOs Enable Flag This is used to indicate whether the FIFOs are enabled or disabled.  
00: Disable 
11: Enable </description>
              <bitRange>[7:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Disable</name>
                  <description>Disable</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Enable</name>
                  <description>Enable</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>IID</name>
              <description>Interrupt ID This indicates the highest priority pending interrupt which can be one of the following types:  
0000: modem status 
0001: no interrupt pending 
0010: THR empty 
0100: received data available 
0110: receiver line status 
0111: busy detect 
1100: character timeout  Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt. </description>
              <bitRange>[3:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>modem_status</name>
                  <description>modem status</description>
                  <value>0b0000</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>no_interrupt</name>
                  <description>no interrupt pending</description>
                  <value>0b0001</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>THR_empty</name>
                  <description>THR empty</description>
                  <value>0b0010</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>received_data</name>
                  <description>received data available</description>
                  <value>0b0100</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>receiver_line</name>
                  <description>receiver line status</description>
                  <value>0b0110</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>busy_detect</name>
                  <description>busy detect</description>
                  <value>0b0111</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>character_timeout</name>
                  <description>character timeout  Bit 3 indicates an interrupt can only occur when the FIFOs are enabled and used to distinguish a Character Timeout condition interrupt.</description>
                  <value>0b1100</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LCR</name>
          <description>UART Line Control Register</description>
          <addressOffset>0xC</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DLAB</name>
              <description>Divisor Latch Access Bit It is writable only when UART is not busy ( UART Busy  = 0) and always readable. This bit is used to enable reading and writing of the Divisor Latch register ( UART_DLL  and UART_DLH ) to set the baud rate of the UART. This bit must be cleared after initial baud rate setup in order to access other registers.  
0: Select RX Buffer Register ( UART_RBR ) / TX Holding Register( UART_THR ) and Interrupt Enable Register ( UART_IER ) 
1: Select Divisor Latch Low Register ( UART_DLL ) and Divisor Latch High Register ( UART_DLH ) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Select_RX</name>
                  <description>Select RX Buffer Register ( UART_RBR ) / TX Holding Register( UART_THR ) and Interrupt Enable Register ( UART_IER )</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Select_Divisor</name>
                  <description>Select Divisor Latch Low Register ( UART_DLL ) and Divisor Latch High Register ( UART_DLH )</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BC</name>
              <description>Break Control Bit This is used to cause a break condition to be transmitted to the receiving device. If set to one the serial output is forced to the spacing (logic 0) state. When not in Loop Back Mode , as determined by UART_MCR[4] , the sout line is forced low until the Break bit is cleared. If SIR_MODE = Enabled and active ( UART_MCR[6]  is set to 1) the sir_out_n line is continuously pulsed. When in Loop Back Mode , the break condition is internally looped back to the receiver and the sir_out_n line is forced low. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
            </field>
            <field>
              <name>EPS</name>
              <description>Even Parity Select It is writable only when UART is not busy ( UART Busy  = 0) .This is used to select even and odd parity when parity is enabled ( PEN is set to one). Setting the bit5 is to reverse the bit4.   
00: Odd Parity 
01: Even Parity 
1X: Reverse LCR[4] </description>
              <bitRange>[5:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Odd</name>
                  <description>Odd Parity</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Even</name>
                  <description>Even Parity</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Reverse</name>
                  <description>Reverse LCR[4]</description>
                  <value>0b10</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PEN</name>
              <description>Parity Enable It is writable only when UART is not busy ( UART Busy  = 0) and always readable. This bit is used to enable and disable parity generation and detection in transmitted and received serial character respectively.  
0: Parity disabled 
1: Parity enabled </description>
              <bitRange>[3:3]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Parity_disabled</name>
                  <description>Parity disabled</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Parity_enabled</name>
                  <description>Parity enabled</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>STOP</name>
              <description>Number of stop bits It is writable only when UART is not busy ( UART Busy  = 0) and always readable. This is used to select the number of stop bits per character that the peripheral transmits and receives. If the bit is set to zero, one stop bit is transmitted in the serial data. If the bit is set to one and the Data Length  are set to 5 bits ( DLS =0) one and a half stop bits is transmitted. Otherwise, two stop bits are transmitted. Note that regardless of the number of stop bits selected, the receiver checks only the first stop bit.  
0: 1 stop bit 
1: 1.5 stop bits when DLS is zero, else 2 stop bit </description>
              <bitRange>[2:2]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_1</name>
                  <description>1 stop bit</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_1_point_5</name>
                  <description>1.5 stop bits when DLS is zero, else 2 stop bit</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DLS</name>
              <description>Data Length Select It is writable only when UART is not busy ( UART Busy ) and always readable. This is used to select the number of data bits per character that the peripheral transmits and receives. The number of bit that may be selected is as follows:  
00: 5 bits 
01: 6 bits 
10: 7 bits 
11: 8 bits </description>
              <bitRange>[1:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>_5_bits</name>
                  <description>5 bits</description>
                  <value>0b00</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_6_bits</name>
                  <description>6 bits</description>
                  <value>0b01</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_7_bits</name>
                  <description>7 bits</description>
                  <value>0b10</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>_8_bits</name>
                  <description>8 bits</description>
                  <value>0b11</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_LSR</name>
          <description>UART Line Status Register</description>
          <addressOffset>0x14</addressOffset>
          <resetValue>0x60</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>FIFOERR</name>
              <description>RX Data Error in FIFO When FIFOs are disabled, this bit is always 0. When FIFOs are enabled, this bit is set to 1 when there is at least one PE, FE, or BI in the RX FIFO. It is cleared by a read from the UART_LSR  register provided there are no subsequent errors in the FIFO. </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>TEMT</name>
              <description>Transmitter Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register and the TX Shift Register are empty. If the FIFOs are enabled, this bit is set whenever the TX FIFO and the TX Shift Register  are empty. In both cases, this bit is cleared when a byte is written to the TX data channel. </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>THRE</name>
              <description>TX Holding Register Empty If the FIFOs are disabled, this bit is set to "1" whenever the TX Holding Register  is empty and ready to accept new data and it is cleared when the CPU writes to the TX Holding Register . If the FIFOs are enabled, this bit is set to "1" whenever the TX FIFO is empty and it is cleared when at least one byte is written to the TX FIFO. </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>BI</name>
              <description>Break Interrupt This is used to indicate the detection of a break sequence on the serial input data.  In UART mode ( SIRE = 0), it is set whenever the serial input, sin, is held in a logic '0' state for longer than the sum of + + + . In infrared mode ( SIRE  = 1), it is set whenever the serial input, sir_in, is continuously pulsed to logic '0' for longer than the sum of + + + . A break condition on serial input causes one and only one character, consisting of all zeros, to be received by the UART. In the FIFO mode, the character associated with the break condition is carried through the FIFO and is revealed when the character is at the top of the FIFO. Reading the LSR clears the BI  bit. In the non-FIFO mode, the BI  indication occurs immediately and persists until the LSR is read. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
            </field>
            <field>
              <name>FE</name>
              <description>Framing Error This is used to indicate the occurrence of a framing error in the receiver. A framing error occurs when the receiver does not detect a valid STOP bit in the received data. In the FIFO mode, since the framing error is associated with a character received, it is revealed when the character with the framing error is at the top of the FIFO. When a framing error occurs, the UART tries to resynchronize. It does this by assuming that the error was due to the start bit of the next character and then continues receiving the other bit i.e. data, and/or parity and stop. It should be noted that the FE  bit is set if a break interrupt has occurred, as indicated by the BI bit.  
0: No framing error 
1: Framing error  Reading the LSR clears the FE bit. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_framing</name>
                  <description>No framing error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Framing</name>
                  <description>Framing error  Reading the LSR clears the FE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>PE</name>
              <description>Parity Error This is used to indicate the occurrence of a parity error in the receiver if the PEN  bit is set. In the FIFO mode, since the parity error is associated with a character received, it is revealed when the character with the parity error arrives at the top of the FIFO. It should be noted that the PE  bit is set if a break interrupt has occurred, as indicated by the Break Interrupt bit.  
0: No parity error 
1: Parity error  Reading the LSR clears the PE bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_parity</name>
                  <description>No parity error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Parity</name>
                  <description>Parity error  Reading the LSR clears the PE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>OE</name>
              <description>Overrun Error This occurs if a new data character was received before the previous data was read. In the non-FIFO mode, the OE  bit is set when a new character arrives in the receiver before the previous character was read from the Receiver Buffer Register . When this happens, the data in the Receiver Buffer Register  is overwritten. In the FIFO mode, an overrun error occurs when the FIFO is full and a new character arrives at the receiver. The data in the FIFO is retained and the data in the receive shift register is lost.  
0: No overrun error 
1: Overrun error  Reading the LSR clears the OE bit. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_overrun</name>
                  <description>No overrun error</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Overrun</name>
                  <description>Overrun error  Reading the LSR clears the OE bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DR</name>
              <description>Data Ready This is used to indicate that the receiver contains at least one character in the Receiver Buffer Register or the receiver FIFO.  
0: No data ready 
1: Data ready  This bit is cleared when the Receiver Buffer Register  is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>No_data</name>
                  <description>No data ready</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Data</name>
                  <description>Data ready  This bit is cleared when the Receiver Buffer Register  is read in non-FIFO mode, or when the receiver FIFO is empty, in FIFO mode.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MCR</name>
          <description>UART Modem Control Register</description>
          <addressOffset>0x10</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x73</resetMask>
          <fields>
            <field>
              <name>SIRE</name>
              <description>SIR Mode Enable  
0: IrDA SIR mode disable 
1: IrDA SIR mode enable </description>
              <bitRange>[6:6]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>IrDA SIR mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>IrDA SIR mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>AFCE</name>
              <description>Auto Flow Control Enable When FIFOs are enabled and the Auto Flow Control Enable ( AFCE ) bit is set, Auto Flow Control features are enabled.  
0: Auto Flow Control Mode disable 
1: Auto Flow Control Mode enable </description>
              <bitRange>[5:5]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>disable</name>
                  <description>Auto Flow Control Mode disable</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>enable</name>
                  <description>Auto Flow Control Mode enable</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>LOOP</name>
              <description>Loop Back Mode  
0: Normal Mode 
1: Loop Back Mode  This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, UART_MCR[6]  is set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in Loop Back Mode , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, UART_MCR[6] set to 1), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Normal</name>
                  <description>Normal Mode</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Loop</name>
                  <description>Loop Back Mode  This is used to put the UART into a diagnostic mode for test purposes. If operating in UART mode (SIR_MODE != Enabled or not active, UART_MCR[6]  is set to zero), data on the sout line is held high, while serial data output is looped back to the sin line, internally. In this mode all the interrupts are fully functional. Also, in Loop Back Mode , the modem control inputs (dsr_n, cts_n, ri_n, dcd_n) are disconnected and the modem control outputs (dtr_n, rts_n, out1_n, out2_n) are looped back to the inputs, internally. If operating in infrared mode (SIR_MODE == Enabled AND active, UART_MCR[6] set to 1), data on the sir_out_n line is held low, while serial data output is inverted and looped back to the sir_in line.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RTS</name>
              <description>Request to Send This is used to directly control the Request to Send (rts_n) output. The Request To Send (rts_n) output is used to inform the modem or data set that the UART is ready to exchange data. When Auto RTS Flow Control is not enabled ( AFCE  = 0), the rts_n signal is set low by programming RTS  to a high.In Auto Flow Control, AFCE_MODE == Enabled and active ( AFCE = 1) and FIFOs enable ( FIFOE =1), the rts_n output is controlled in the same way, but is also gated with the receiver FIFO threshold trigger (rts_n is inactive high when above the threshold). The rts_n signal is de-asserted when RTS  is set low.  
0: rts_n de-asserted (logic 1) 
1: rts_n asserted (logic 0)  Note that in Loopback mode ( LOOP =1), the rts_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>rts_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>rts_n asserted (logic 0)  Note that in Loopback mode ( LOOP =1), the rts_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DTR</name>
              <description>Data Terminal Ready This is used to directly control the DTR (dtr_n) output. The value written to this location is inverted and driven out on dtr_n.  
0: dtr_n de-asserted (logic 1) 
1: dtr_n asserted (logic 0)  The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode ( LOOP  =1), the dtr_n output is held inactive high while the value of this location is internally looped back to an input. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-write</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>n_deasserted</name>
                  <description>dtr_n de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>n_asserted</name>
                  <description>dtr_n asserted (logic 0)  The Data Terminal Ready output is used to inform the modem or data set that the UART is ready to establish communications. Note that in Loopback mode ( LOOP  =1), the dtr_n output is held inactive high while the value of this location is internally looped back to an input.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_MSR</name>
          <description>UART Modem Status Register</description>
          <addressOffset>0x18</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>DCD</name>
              <description>Line State of Data Carrier Detect This is used to indicate the current state of the modem control line dcd_n. This bit is the complement of dcd_n. When the Data Carrier Detect  input (dcd_n) is asserted it is an indication that the carrier has been detected by the modem or data set.  
0: dcd_n input is de-asserted (logic 1) 
1: dcd_n input is asserted (logic 0) </description>
              <bitRange>[7:7]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dcd_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dcd_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RI</name>
              <description>Line State of Ring Indicator This is used to indicate the current state of the modem control line ri_n. This bit is the complement of ri_n. When the Ring Indicator  input (ri_n) is asserted it is an indication that a telephone ringing signal has been received by the modem or data set.  
0: ri_n input is de-asserted (logic 1) 
1: ri_n input is asserted (logic 0) </description>
              <bitRange>[6:6]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>ri_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>ri_n input is asserted (logic 0)</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DSR</name>
              <description>Line State of Data Set Ready This is used to indicate the current state of the modem control line dsr_n. This bit is the complement of dsr_n. When the Data Set Ready input (dsr_n) is asserted it is an indication that the modem or data set is ready to establish communications with UART.  
0: dsr_n input is de-asserted (logic 1) 
1: dsr_n input is asserted (logic 0)  In Loop Back Mode (MCR[4] set to one), DSR is the same as MCR[0] ( DTR ). </description>
              <bitRange>[5:5]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>dsr_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>dsr_n input is asserted (logic 0)  In Loop Back Mode (MCR[4] set to one), DSR is the same as MCR[0] ( DTR ).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>CTS</name>
              <description>Line State of Clear To Send This is used to indicate the current state of the modem control line cts_n. This bit is the complement of cts_n. When the Clear To Send input (cts_n) is asserted it is an indication that the modem or data set is ready to exchange data with UART.  
0: cts_n input is de-asserted (logic 1) 
1: cts_n input is asserted (logic 0)  In Loop Back Mode (MCR[4] = 1), CTS is the same as MCR[1] ( RTS ). </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>deasserted</name>
                  <description>cts_n input is de-asserted (logic 1)</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>asserted</name>
                  <description>cts_n input is asserted (logic 0)  In Loop Back Mode (MCR[4] = 1), CTS is the same as MCR[1] ( RTS ).</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDCD</name>
              <description>Delta Data Carrier Detect This is used to indicate that the modem control line dcd_n has changed since the last time the MSR was read.  
0: no change on dcd_n since last read of MSR 
1: change on dcd_n since last read of MSR  Reading the MSR clears the DDCD bit. Note: If the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dcd_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dcd_n since last read of MSR  Reading the MSR clears the DDCD bit. Note: If the DDCD bit is not set and the dcd_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDCD bit is set when the reset is removed if the dcd_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TERI</name>
              <description>Trailing Edge Ring Indicator This is used to indicate that a change on the input ri_n (from an active-low to an inactive-high state) has occurred since the last time the MSR was read.  
0: no change on ri_n since last read of MSR 
1: change on ri_n since last read of MSR  Reading the MSR clears the TERI bit. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ri_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ri_n since last read of MSR  Reading the MSR clears the TERI bit.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DDSR</name>
              <description>Delta Data Set Ready This is used to indicate that the modem control line dsr_n has changed since the last time the MSR was read.  
0: no change on dsr_n since last read of MSR 
1: change on dsr_n since last read of MSR  Reading the MSR clears the DDSR  bit. In Loop Back Mode  (MCR[4] = 1), DDSR reflects changes on MCR[0] ( DTR ).  Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on dsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on dsr_n since last read of MSR  Reading the MSR clears the DDSR  bit. In Loop Back Mode  (MCR[4] = 1), DDSR reflects changes on MCR[0] ( DTR ).  Note: If the DDSR bit is not set and the dsr_n signal is asserted (low) and a reset occurs (software or otherwise), then the DDSR bit is set when the reset is removed if the dsr_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>DCTS</name>
              <description>Delta Clear to Send This is used to indicate that the modem control line cts_n has changed since the last time the MSR was read.  
0: no change on ctsdsr_n since last read of MSR 
1: change on ctsdsr_n since last read of MSR  Reading the MSR clears the DCTS bit. In Loop Back Mode (MCR[4] = 1), DCTS reflects changes on MCR[1] ( RTS ). Note:  If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset is removed if the cts_n signal remains asserted. </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>no_change</name>
                  <description>no change on ctsdsr_n since last read of MSR</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>change</name>
                  <description>change on ctsdsr_n since last read of MSR  Reading the MSR clears the DCTS bit. In Loop Back Mode (MCR[4] = 1), DCTS reflects changes on MCR[1] ( RTS ). Note:  If the DCTS bit is not set and the cts_n signal is asserted (low) and a reset occurs (software or otherwise), then the DCTS bit is set when the reset is removed if the cts_n signal remains asserted.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RBR</name>
          <description>UART Receive Buffer Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>RBR</name>
              <description>Receiver Buffer Register Data byte received on the serial input port (sin) in UART mode, or the serial infrared input (sir_in) in infrared mode. The data in this register is valid only if the Data Ready bit in the UART_LSR register is set.  If in FIFO mode and FIFOs are enabled ( FIFOE = 1), this register accesses the head of the receive FIFO. If the receive FIFO is full and this register is not read before the next data character arrives, then the data already in the FIFO is preserved, but any incoming data are lost and an overrun error occurs. </description>
              <bitRange>[7:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_RFL</name>
          <description>UART Receive FIFO Level</description>
          <addressOffset>0x84</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>RFL</name>
              <description>Receive FIFO Level This is indicates the number of data entries in the receive FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_SCH</name>
          <description>UART Scratch Register</description>
          <addressOffset>0x1C</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>SCRATCH_REG</name>
              <description>Scratch Register This register is for programmers to use as a temporary storage space. It has no defined purpose in the UART.</description>
              <bitRange>[7:0]</bitRange>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_TFL</name>
          <description>UART Transmit FIFO Level</description>
          <addressOffset>0x80</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0x7F</resetMask>
          <fields>
            <field>
              <name>TFL</name>
              <description>Transmit FIFO Level This is indicates the number of data entries in the transmit FIFO.</description>
              <bitRange>[6:0]</bitRange>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_THR</name>
          <description>UART Transmit Holding Register</description>
          <addressOffset>0x0</addressOffset>
          <resetValue>0x0</resetValue>
          <resetMask>0xFF</resetMask>
          <fields>
            <field>
              <name>THR</name>
              <description>Transmit Holding Register Data to be transmitted on the serial output port (sout) in UART mode or the serial infrared output (sir_out_n) in infrared mode. Data should only be written to THR when the THRE bit is set.   If in FIFO mode and FIFOs are enabled ( FIFOE  = 1) and THRE  is set, 16 number of characters of data may be written to the THR before the FIFO is full. Any write data operations when the FIFO is full causes the write data loss. </description>
              <bitRange>[7:0]</bitRange>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>UART_USR</name>
          <description>UART Status Register</description>
          <addressOffset>0x7C</addressOffset>
          <resetValue>0x6</resetValue>
          <resetMask>0x1F</resetMask>
          <fields>
            <field>
              <name>RFF</name>
              <description>Receive FIFO Full This is used to indicate that the receive FIFO is completely full.  
0: Receive FIFO not full 
1: Receive FIFO Full  This bit is cleared when the RX FIFO is no longer full. </description>
              <bitRange>[4:4]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Receive_FIFO_not_full</name>
                  <description>Receive FIFO not full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Receive_FIFO_Full</name>
                  <description>Receive FIFO Full  This bit is cleared when the RX FIFO is no longer full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>RFNE</name>
              <description>Receive FIFO Not Empty This is used to indicate that the receive FIFO contains one or more entries.  
0: Receive FIFO is empty 
1: Receive FIFO is not empty  This bit is cleared when the RX FIFO is empty. </description>
              <bitRange>[3:3]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Receive FIFO is empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Receive FIFO is not empty  This bit is cleared when the RX FIFO is empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFE</name>
              <description>Transmit FIFO Empty This is used to indicate that the transmit FIFO is completely empty.  
0: Transmit FIFO is not empty 
1: Transmit FIFO is empty  This bit is cleared when the TX FIFO is no longer empty. </description>
              <bitRange>[2:2]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>not_empty</name>
                  <description>Transmit FIFO is not empty</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>empty</name>
                  <description>Transmit FIFO is empty  This bit is cleared when the TX FIFO is no longer empty.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>TFNF</name>
              <description>Transmit FIFO Not Full This is used to indicate that the transmit FIFO in not full.  
0: Transmit FIFO is full 
1: Transmit FIFO is not full  This bit is cleared when the TX FIFO is full. </description>
              <bitRange>[1:1]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>full</name>
                  <description>Transmit FIFO is full</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>not_full</name>
                  <description>Transmit FIFO is not full  This bit is cleared when the TX FIFO is full.</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
            <field>
              <name>BUSY</name>
              <description>UART Busy Bit  
0: Idle or inactive 
1: Busy </description>
              <bitRange>[0:0]</bitRange>
              <access>read-only</access>
              <enumeratedValues>
                <enumeratedValue>
                  <name>Idle</name>
                  <description>Idle or inactive</description>
                  <value>0b0</value>
                </enumeratedValue>
                <enumeratedValue>
                  <name>Busy</name>
                  <description>Busy</description>
                  <value>0b1</value>
                </enumeratedValue>
              </enumeratedValues>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
  </peripherals>
</device>
